#!/bin/sh
# Install packages into a fresh homebrew install, then symlink its
# binaries/scripts into $XDG_DATA_HOME/../bin
# shellcheck disable=SC2002,SC2013

set -eu

XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
HOMEBREWS_HOME="${HOMEBREWS_HOME:-$XDG_DATA_HOME/homebrews}"

usage() {
    echo >&2 "Usage: ${0##*/} [options] BREWENV_NAME [FORMULA..]"
    echo >&2
    echo >&2 "Options":
    echo >&2 "  -a    Arguments for brew-install. If specified, FORMULA are not implicitly passed."
    echo >&2 "  -e    Use what we can from an existing homebrew install"
    echo >&2 "  -h    Show this help/usage"
    echo >&2
    echo >&2 "Existing isolated homebrew installations:"
    for dir in "$HOMEBREWS_HOME"/*/; do
        if [ -e "$dir" ]; then
            printf >&2 '  %s\n' "$(basename "${dir%/}")"
        fi
    done
    exit 2
    exit 1
}

list_keg_only() {
    brew info --json=v1 --installed \
        | jq -r "map(select(.keg_only == true) | .name) | .[]" \
        | grep -v '^$' \
        | xargs
}

_brew_deps() {
    if [ -e "$tmpdir/$1" ]; then
        return
    elif [ -e "$brew_prefix/Cellar/$1" ]; then
        cat "$tmpdir/json" \
            | jq -r --arg name "$1" '.[] | select(.name == "$name") | .dependencies | .[]' \
            | tee "$tmpdir/$1"
    else
        brew info --json "$1" | jq -r '.[] | .dependencies | .[]' | tee "$tmpdir/$1"
    fi
    for i in $(cat "$tmpdir/$1"); do
        _brew_deps "$i"
    done
}

brew_deps() {
    brew info --json "$1" | jq -r '.[] | .dependencies + .build_dependencies | .[]' | while read -r dep; do
        echo "$dep"
        _brew_deps "$dep"
    done | sort -u
}

abspath() {
    _path="$1"
    if [ -n "${_path##/*}" ]; then
        _path="${2:-$PWD}/$1"
    fi
    echo "$_path"
}

abs_readlink() {
    for arg; do
        abspath "$(readlink "$arg")" "$(dirname "$arg")"
    done
}

install_args=
use_from_master=0
while getopts a:eh opt; do
    case "$opt" in
        a)
            install_args="$OPTARG"
            ;;
        e)
            use_from_master=1
            if ! brew_bin="$(command -v brew 2>/dev/null)"; then
                echo >&2 "Error: cannot link from master without 'brew'"
                exit 1
            fi
            ;;
        \? | h)
            usage
            ;;
    esac
done
shift $((OPTIND - 1))

if [ $# -eq 0 ]; then
    usage
fi

brewenv="$1"
shift
brewenv_dir="$HOMEBREWS_HOME/$brewenv"
if [ ! -e "$brewenv_dir/bin/brew" ]; then
    if [ $use_from_master -eq 1 ] && [ -h "$brew_bin" ]; then
        mkdir -p "$brewenv_dir/bin"
        ln -s "$(dirname "$(dirname "$(abs_readlink "$brew_bin")")")" "$brewenv_dir/homebrew"
        ln -sf ../homebrew/bin/brew "$brewenv_dir/bin/brew"
    else
        install-brew -s "$brewenv_dir"
    fi
fi
"$brewenv_dir/bin/brew" update

tmpdir=$(mktemp -d -t "${0##*/}.XXXX")
trap 'rm -rf "$tmpdir"' EXIT INT TERM
# Link any existing deps from master homebrew install
if [ $use_from_master -eq 1 ]; then
    if ! command -v jq >/dev/null 2>&1; then
        echo >&2 "Error: jq is required to use -e"
        exit 3
    fi
    brew info --json --installed >"$tmpdir/json"
    brew_prefix="$(brew --prefix)"
    dependencies="$(brew_deps "$brewenv" | xargs)"
    keg_only="$(list_keg_only)"
    from_bottle="$(brew info --json --installed | jq -r '.[] | select(.installed[] | .poured_from_bottle) | .name' | xargs)"
    mkdir -p "$brewenv_dir/Cellar" "$brewenv_dir/opt"
    for dep in $dependencies; do
        if echo "$from_bottle" | grep -qw "$dep" && [ -e "$brew_prefix/Cellar/$dep" ] && [ -e "$brew_prefix/opt/$dep" ]; then
            rm -rf "$brewenv_dir/Cellar/$dep" "$brewenv_dir/opt/$dep"
            if command -v gcp >/dev/null 2>&1; then
                gcp -al "$brew_prefix/Cellar/$dep/." "$brewenv_dir/Cellar/$dep/"
            else
                cp -a "$brew_prefix/Cellar/$dep/." "$brewenv_dir/Cellar/$dep/"
            fi
            cp -af "$brew_prefix/opt/$dep" "$brewenv_dir/opt/"
            if ! echo "$keg_only" | grep -wq "$dep"; then
                "$brewenv_dir/bin/brew" unlink "$dep" >/dev/null 2>&1 || :
                "$brewenv_dir/bin/brew" link "$dep"
            fi
        fi
    done
fi

PATH="$brewenv_dir/bin:$PATH"

if [ $# -eq 0 ]; then
    set -- "$brewenv"
fi
if [ -n "$install_args" ]; then
    # shellcheck disable=SC2086
    brew install $install_args
else
    brew install "$@"
fi

cat <<END >"$brewenv_dir/bin/man"
#!/bin/sh
scriptdir="\$(dirname "\$0")"
MANPATH="\${scriptdir%/*}/share/man:\$(manpath)" /usr/bin/man "\$@"
END
chmod +x "$brewenv_dir/bin/man"

dest="$XDG_DATA_HOME/../bin"
mkdir -p "$dest"

for brew; do
    case "$brew" in
        -*)
            continue
            ;;
    esac
    brew="${brew##*/}"
    for bin in "$brewenv_dir/opt/$brew/bin/"*; do
        filename="${bin##*/}"
        if [ -e "$bin" ] && [ -e "$brewenv_dir/bin/$filename" ]; then
            if ! [ -e "$dest/filename" ]; then
                rm -f "$dest/$filename"
                cat >"$dest/$filename" <<END
PATH="$brewenv_dir/bin:\$PATH"
exec "$brewenv_dir/bin/$filename" "\$@"
END
                chmod u+x "$dest/$filename"
                echo >&2 "Created wrapper script at $dest/$filename"
            fi
        fi
    done

    for man in "$brewenv_dir/opt/$brew/share/man/"man*/*; do
        if [ -e "$man" ]; then
            mandest="$XDG_DATA_HOME/man/${man#$brewenv_dir/opt/$brew/share/man/}"
            mkdir -p "${mandest%/*}"
            if ! [ -e "$mandest" ]; then
                ln -sfv "$man" "$mandest"
            fi
        fi
    done
done
