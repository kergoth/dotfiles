#!/bin/sh

set -eu

XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
HOMEBREWS_HOME="${HOMEBREWS_HOME:-$XDG_DATA_HOME/homebrews}"

usage() {
    echo >&2 "Usage: ${0##*/} [options] [BREWENV_NAME..]"
    echo >&2
    echo >&2 "If no BREWENV_NAME is specified, all will be upgraded"
    echo >&2
    echo >&2 "Options":
    echo >&2 "  -e    Use what we can from an existing homebrew install"
    echo >&2 "  -h    Show this help/usage"
    echo >&2
    echo >&2 "Existing isolated homebrew installations:"
    for dir in "$HOMEBREWS_HOME"/*/; do
        if [ -e "$dir" ]; then
            printf >&2 '  %s\n' "$(basename "${dir%/}")"
        fi
    done
    exit 2
    exit 1
}

use_from_master=0
while getopts he opt; do
    case "$opt" in
        e)
            use_from_master=1
            if ! brew_bin="$(command -v brew 2>/dev/null)"; then
                echo >&2 "Error: cannot link from master without 'brew'"
                exit 1
            fi
            ;;
        \? | h)
            usage
            ;;
    esac
done
shift $((OPTIND - 1))

if [ $# -eq 0 ]; then
    OIFS="$IFS"
    IFS="$(printf '\n')"
    # shellcheck disable=SC2046
    set -- $(cd "$HOMEBREWS_HOME" && find . -mindepth 1 -maxdepth 1 -type d | sed -e 's#^\./##')
    IFS="$OIFS"
fi

ret=0
for brewenv; do
    echo "Updating $brewenv"
    if ! [ -e "$HOMEBREWS_HOME/$brewenv" ]; then
        echo >&2 "Error: $HOMEBREWS_HOME/$brewenv does not exist"
        ret=1
        continue
    fi
    if [ $use_from_master -eq 1 ]; then
        brewv -e "$brewenv" || :
    fi
    brew="$HOMEBREWS_HOME/$brewenv/bin/brew"
    if [ -z "$HOMEBREW_AUTO_UPDATE" ]; then
        "$brew" update
    fi
    "$brew" upgrade
done
exit $ret
