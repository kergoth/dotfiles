#!/usr/bin/env bash

usage() {
    echo >&2 "${0##*/} [options..] [REPO|URL..]"
    echo >&2
    echo >&2 "If no REPO/URLs are specified, the url of the ORIGIN_REMOTE is used by default."
    echo >&2
    echo >&2 "Options:"
    echo >&2 "  -a Include all forks of our parent, not just our children."
    echo >&2 "  -o ORIGIN_REMOTE      Prune branches relative to the specified remote, not origin."
    echo >&2 "  -u UPSTREAM_BRANCHES  Specify the base upstream branches where the changes are merged,"
    echo >&2 "                        defaults to master. Comma-separated."
    exit 2
}

process_arguments () {
    all=
    origin=origin
    upstream_branches=master
    while getopts ao:u:h opt; do
        case "$opt" in
            a)
                all=1
                ;;
            o)
                origin="$OPTARG"
                ;;
            u)
                upstream_branches="$OPTARG"
                ;;
            \? | h)
                usage
                ;;
        esac
    done
    shift $((OPTIND - 1))
}

set -eu

process_arguments "$@"
shift $((OPTIND - 1))

if [ $# -eq 0 ]; then
    url="$(git config "remote.$origin.url")"
    if [ -z "$url" ]; then
        echo >&2 "Error: no url for the origin git remote"
        return 1
    fi
    set -- "$url"
fi

git fetch "$origin"
github-list-forks ${all:+-a} "$@" | while read -r repo; do
    remote="${repo%/*}"
    url="https://github.com/$repo"
    if ! git config "remote.$remote.url" >/dev/null; then
        git remote add "$remote" "$url"
    fi
    git remote set-url "$remote" "$url"
done
git parallel-fetch
