#!/bin/sh

set -e

GIT_EXEC_PATH="$(git --exec-path)"
. "$GIT_EXEC_PATH/git-sh-setup"
. "$GIT_EXEC_PATH/git-mergetool--lib"

# These function overrides are here just to avoid calling check_unchanged a
# second time in run_merge_cmd, as this script is already a merge tool.
# Otherwise the user will be prompted to specify whether the merge succeeded
# twice.
run_merge_tool_wrapped () {
	# If GIT_PREFIX is empty then we cannot use it in tools
	# that expect to be able to chdir() to its value.
	GIT_PREFIX=${GIT_PREFIX:-.}
	export GIT_PREFIX

	merge_tool_path=$(get_merge_tool_path "$1") || exit
	base_present="$2"

	# Bring tool-specific functions into scope
	setup_tool "$1" || return 1

	if merge_mode
	then
		run_merge_cmd_wrapped "$1"
	else
		run_diff_cmd "$1"
	fi
}

run_merge_cmd_wrapped () {
	mergetool_trust_exit_code=$(trust_exit_code "$1")
	if test "$mergetool_trust_exit_code" = "true"
	then
		merge_cmd "$1"
	else
		touch "$BACKUP"
		merge_cmd "$1"
	fi
}

if [ -z "$GIT_MERGETOOL" ]; then
    GIT_MERGETOOL="$(git config mergetool.wrapper.default)"
fi

run_merge_tool_wrapped "$GIT_MERGETOOL" "$present"
