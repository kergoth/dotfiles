#!/bin/zsh
if [ "$PS1" ]; then
        export PAGER=less
        #export PAGER=~/bin/vimpager
        #alias less=$PAGER

        export VPAGER="vim -R -"
        
        # ---- paging ------------------------------------------------------------

        function least() {
                declare -a lines
        
                if ! [ -z "$@" ] ; then
                        cat $@ | least
                        return 0
                fi
        
                if [ -z "$LINES" ] || ! ( echo $LINES | grep -q '^[0-9]\+$' ) ; then
                        LINES=20
                fi
        
                function dump_array () {
                        for n in `seq 1 "${#lines[@]}"` ; do
                                echo "${lines[$n]}"
                        done
                }
        
                #pre_IFS=$IFS
                #IFS=
                while read x ; do
                        #IFS=$pre_IFS
                        
                        lines[((${#lines[@]}+1))]="$x"
        
                        if [ "${#lines[@]}" -ge $LINES ] ; then
                                ( dump_array ; cat ) | $VPAGER
                                exit 0
                        fi
                done
                #IFS=$pre_IFS
        
                dump_array
        }
        
        #function v() { $@ | vim -R - ; }
        function v() { $@ | least ; }
        function vv() { $@ | vim -R - ; }

        function maxhead() { head -n `echo $LINES - 2|bc` ; }
        function maxtail() { tail -n `echo $LINES - 2|bc` ; }

        # ---- other ------------------------------------------------------------
        
        # <dave0> if you use this bash function, you can do 'dpan DBD::ODBC' 
        #         and it will get the debian package if it exists
        function dpan () {
            PKG=$(perl -e '$_=lc($ARGV[0]); s/::/-/g; print "lib$_-perl\n"' $1)
            echo apt-get install $PKG
        }

        # <lpaseen> gives last time the cmdline was changed in seconds since epoc 
        # and since the process is a daemond it doesn't change once it started
        getetime() {
            pid=$(pgrep -o $1)
            if [ -z "$pid" ];then
                echo "-1"
                return 1
            fi
            let etime=$(date +%s)-$(stat -c %Y /proc/$pid/cmdline)
            echo $etime
        }

        alias lindent='sh /usr/src/linux/scripts/Lindent'
        
        # print pretty calendars
        alias pcal-portrait="pcal -F 1 -m -J -p"
        alias pcal-landscape="pcal -F 1 -m -J -l"
        
        alias grep='grep --color=auto'

        if have dc; then
            typeset -A _bases
            _bases=(bin 2 oct 8 dec 10 hex 16)
            for from in ${(k)_bases}; do
                for to in ${(k)_bases}; do
                    eval "function ${from}2${to} () { dc -e \"$_bases[$from] i $_bases[$to] o \$1 p\" }"
                done
            done
            unset _bases
        fi

        # alias ack='ack --color'
        export ACK_OPTIONS="--color"
fi
