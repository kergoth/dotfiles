{{- if and .user_setup ( lookPath "nix" ) -}}
#!/usr/bin/env bash
# Apply home manager configuration
#
# Re-run when home-manager configuration changes:
#   home.nix hash: {{ includeTemplate "dot_config/home-manager/home.nix.tmpl" . | sha256sum }}
#   flake.nix hash: {{ includeTemplate "dot_config/home-manager/flake.nix.tmpl" . | sha256sum }}
#   flake.lock hash: {{ include "dot_config/home-manager/private_flake.lock" | sha256sum }}
# Re-run after installing nix:
#   nix binary path: {{ lookPath "nix" }}

set -euo pipefail

for file in nix/nix.conf home-manager/home.nix.tmpl \
            home-manager/flake.nix.tmpl home-manager/flake.lock; do
    src="$CHEZMOI_SOURCE_DIR/dot_config/$file"
    dest="$CHEZMOI_HOME_DIR/.config/${file%.tmpl}"
    if ! [ -e "$dest" ] || [ "$src" -nt "$dest" ]; then
        mkdir -p "$(dirname "$dest")"
        case "$file" in
        *.tmpl)
            chezmoi execute-template <"$src" >"$dest" || {
                rm -f "$dest"
                echo >&2 "Error processing chezmoi template $src"
                exit 1
            }
            ;;
        *)
            cp -af "$src" "$dest"
            ;;
        esac
    fi
done

echo >&2 "Applying home manager configuration"
HOME="$CHEZMOI_HOME_DIR" nix run 'home-manager/master' -- switch
{{- end -}}
