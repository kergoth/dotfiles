{{- $os := .chezmoi.os -}}
{{- $arch := .chezmoi.arch -}}
{{- $binarch := $arch -}}
{{- $refreshPeriod := .external.refreshPeriod -}}
{{- if eq .chezmoi.arch "amd64" -}}
{{-   $binarch = "x86_64" -}}
{{- else if eq .chezmoi.arch "arm64" -}}
{{-   $binarch = "aarch64" -}}
{{- end -}}
{{- $binpath := ".local/bin" -}}
{{- $binsuffix := "" -}}
{{- if eq $os "windows" -}}
{{-   $binpath = "AppData/Local/Programs/bin" -}}
{{-   $binsuffix = ".exe" -}}
{{- end -}}

{{/* Install distrobox on Linux systems */}}
{{ if eq $os "linux" }}
{{-  $distrobox_version := (gitHubLatestRelease "89luca89/distrobox").TagName | trimPrefix "v" }}
{{   range list "distrobox" "distrobox-assemble" "distrobox-create" "distrobox-enter" "distrobox-ephemeral" "distrobox-export" "distrobox-generate-entry" "distrobox-host-exec" "distrobox-init" "distrobox-list" "distrobox-rm" "distrobox-stop" "distrobox-upgrade" -}}
["{{ $binpath }}/{{ . }}"]
  type = "archive-file"
  url = "https://github.com/89luca89/distrobox/archive/refs/tags/{{- $distrobox_version -}}.tar.gz"
  stripComponents = 1
  path = "{{ . }}"
  executable = true
  refreshPeriod = "{{ $refreshPeriod }}"
{{   end -}}
{{ end }}

{{/* Install uv/uvx */}}
{{- $uv_suffix := "" }}
{{- $uv_version := (gitHubLatestRelease "astral-sh/uv").TagName | trimPrefix "v" }}
{{ if eq $os "linux" }}
{{   $uv_suffix = "unknown-linux-musl.tar.gz" }}
{{ else if eq $os "darwin" }}
{{   $uv_suffix = "apple-darwin.tar.gz" }}
{{ else if eq $os "windows" }}
{{   $uv_suffix = "pc-windows-msvc.zip" }}
{{ end }}
{{ if ne $uv_suffix "" }}
{{   range $index, $cmd := list "uv" "uvx" -}}
["{{ $binpath }}/{{ $cmd }}{{ $binsuffix }}"]
  type = "archive-file"
  url = "https://github.com/astral-sh/uv/releases/download/{{- $uv_version -}}/uv-{{- $binarch -}}-{{- $uv_suffix -}}"
  path = "{{ $cmd }}{{ $binsuffix }}"
{{ if ne $os "windows" -}}
  stripComponents = 1
{{- end }}
  executable = true
  refreshPeriod = "{{ $refreshPeriod }}"
{{   end -}}
{{ end }}

{{/* Install choose */}}
{{ $choose_version := (gitHubLatestRelease "theryangeary/choose").TagName | trimPrefix "v" }}
{{ $choose_suffix := "" }}
{{ if eq $os "windows" }}
{{   $choose_suffix = "pc-windows-gnu" }}
{{ else if eq $os "linux" }}
{{   $choose_suffix = "unknown-linux-musl" }}
{{ end }}
{{ if ne $choose_suffix "" }}
["{{ $binpath }}/choose{{ $binsuffix }}"]
type = "file"
url = "https://github.com/theryangeary/choose/releases/download/v{{ $choose_version }}/choose-{{ $binarch }}-{{ $choose_suffix }}"
executable = true
refreshPeriod = "{{ $refreshPeriod }}"
{{ end }}

{{/* Install rusage */}}
["{{ $binpath }}/rusage.com"]
type = "file"
url = "https://justine.lol/rusage/rusage.com"
executable = true
refreshPeriod = "{{ $refreshPeriod }}"

{{/* Install ghq */}}
{{ $ghq_version := (gitHubLatestRelease "x-motemen/ghq").TagName | trimPrefix "v" }}
{{ $ghq_suffix := "" }}
{{ if eq $os "windows" }}
{{   $ghq_suffix = printf "windows_%s.zip" $arch }}
{{ else if eq $os "linux" }}
{{   $ghq_suffix = printf "linux_%s.zip" $arch }}
{{ else if eq $os "darwin" }}
{{   $ghq_suffix = printf "darwin_%s.zip" $arch }}
{{ end }}
{{ if ne $ghq_suffix "" }}
["{{ $binpath }}/ghq{{ $binsuffix }}"]
type = "archive-file"
url = "https://github.com/x-motemen/ghq/releases/download/v{{ $ghq_version }}/ghq_{{ $ghq_suffix }}"
path = "ghq{{ $binsuffix }}"
stripComponents = 1
executable = true
refreshPeriod = "{{ $refreshPeriod }}"
{{ end }}

{{/* Install shellcheck */}}
{{ $shellcheck_version := (gitHubLatestRelease "koalaman/shellcheck").TagName | trimPrefix "v" }}
{{ $shellcheck_suffix := "" }}
{{ if eq $os "windows" }}
{{   $shellcheck_suffix = "" }}
{{ else if eq $os "linux" }}
{{   $shellcheck_suffix = printf ".linux.%s.tar.xz" $binarch }}
{{ else if eq $os "darwin" }}
{{   $shellcheck_suffix = printf ".darwin.%s.tar.xz" $binarch }}
{{ end }}
{{ if ne $shellcheck_suffix "" }}
["{{ $binpath }}/shellcheck{{ $binsuffix }}"]
type = "archive-file"
url = "https://github.com/koalaman/shellcheck/releases/download/v{{ $shellcheck_version }}/shellcheck-v{{ $shellcheck_version }}{{ $shellcheck_suffix }}"
path = "shellcheck{{ $binsuffix }}"
stripComponents = 1
executable = true
refreshPeriod = "{{ $refreshPeriod }}"
{{ end }}
