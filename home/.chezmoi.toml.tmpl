{{/* boolean feature flags */}}
{{- $ephemeral := false -}}{{/* true if this machine is ephemeral, e.g. a cloud or VM instance */}}
{{- $headless := false -}}{{/* true if this machine does not have a screen and keyboard */}}
{{- $docker := false -}}{{/* true if this machine should have Docker installed */}}
{{- $personal := false -}}{{/* true if this machine should have personal secrets */}}
{{- $work := false -}}{{/* true if this machine is used for work */}}
{{- $work_email := false -}}{{/* true if this machine should use a work email (implicitly set by $work) */}}
{{- $user_setup := true -}}{{/* true if this user should be set up beyond just dotfiles */}}
{{/* device usage flags */}}
{{- $gaming := false -}}{{/* true if this device will be used for gaming */}}
{{- $video := false -}}{{/* true if this device will be used to stream video, controls VLC/etc installation */}}
{{- $music := false -}}{{/* true if this device will be used to listen to music */}}
{{- $coding := true -}}{{/* true if this device will be used for coding, beyond just shell scripting */}}
{{- $music_library := false -}}{{/* true if this device will be used to manage my music library */}}
{{- $ebook_library := false -}}{{/* true if this device will be used to manage my ebook library */}}

{{/* detect OS */}}
{{- $osid := .chezmoi.os -}}
{{- if (and (eq .chezmoi.os "linux") (hasKey .chezmoi.osRelease "id")) -}}
{{-   $osid = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.id -}}
{{- end -}}
{{- $wsl2 := and (eq .chezmoi.os "linux") ( .chezmoi.kernel.osrelease | lower | contains "microsoft" ) -}}
{{- $steamdeck := eq $osid "linux-steamos" -}}

{{/* detect macOS version */}}
{{- $macos_version := "" -}}
{{- if eq .chezmoi.os "darwin" -}}
    {{- $macos_version = slice (output "sw_vers" "-productVersion" | trim | splitList "." ) 0 2 | join "." -}}
{{- end -}}

{{/* detect GitHub codespaces, VSCode remote containers, Docker containers, Multipass VMs, and Vagrant boxes */}}
{{- if or (env "CODESPACES") (env "REMOTE_CONTAINERS_IPC") (eq .chezmoi.username "root" "ubuntu" "vagrant" "vscode") -}}
{{-   $ephemeral = true -}}
{{-   $headless = true -}}
{{- end -}}

{{/* work around unreliable hostname on darwin */}}
{{- $hostname := .chezmoi.hostname -}}
{{- if eq .chezmoi.os "darwin" -}}
{{-   $hostname := output "scutil" "--get" "ComputerName" | trim -}}
{{- end -}}

{{/* detect interactive mode */}}
{{- $force := or (has "--force" .chezmoi.args) (has "--force=true" .chezmoi.args) -}}
{{- $interactive := and stdinIsATTY (not $force) -}}

{{/* determine whether to prompt interactively */}}
{{- $prompt := or (has "--prompt" .chezmoi.args) (has "--prompt=true" .chezmoi.args) -}}

{{/* set defaults based on hostname */}}
{{- if not $ephemeral -}}
{{-   if eq $hostname "caf-clarson-p1" -}}
{{-     if $wsl2 -}}
{{-       $docker = true -}}
{{-     else -}}
{{-       $music = true -}}
{{-     end -}}
{{-     $work = true -}}
{{-     $coding = true -}}
{{-   else if eq $hostname "vaelin" -}}
{{-     $personal = true -}}
{{-     $docker = true -}}
{{-     $gaming = true -}}
{{-     $video = true -}}
{{-     $music = true -}}
{{-     $coding = true -}}
{{-     $music_library = true -}}
{{-     $ebook_library = true -}}
{{-   else if $steamdeck -}}
{{-     $gaming = true -}}
{{-   else if $interactive -}}
{{/*    prompt for unknown hostnames by default */}}
{{-     $prompt = true -}}
{{-   else -}}
{{-     $ephemeral = true -}}
{{-     $headless = true -}}
{{-   end -}}
{{- end -}}

{{/* prompt for overrides */}}
{{- if and $interactive $prompt -}}
{{-   $headless = promptBoolOnce . "headless" "headless" $headless -}}
{{-   $ephemeral = promptBoolOnce . "ephemeral" "ephemeral" $ephemeral -}}
{{-   $docker = promptBoolOnce . "docker" "docker" $docker -}}
{{-   $work = promptBoolOnce . "work" "work" $work -}}
{{-   $gaming = promptBoolOnce . "gaming" "gaming" $gaming -}}
{{-   $gaming = promptBoolOnce . "gaming" "gaming" $gaming -}}
{{-   $video = promptBoolOnce . "video" "video" $video -}}
{{-   $music = promptBoolOnce . "music" "music" $music -}}
{{-   $coding = promptBoolOnce . "coding" "coding" $coding -}}
{{-   $music_library = promptBoolOnce . "music_library" "music_library" $music_library -}}
{{-   $ebook_library = promptBoolOnce . "ebook_library" "ebook_library" $ebook_library -}}
{{- end -}}

{{- $email := "kergoth@gmail.com" -}}
{{- if $work -}}
{{-   $email = "chris.larson@siemens.com" -}}
{{- end -}}

{{- $secrets := false -}}
{{- if and (or $personal $work) (not $ephemeral) -}}
{{-   $secrets = true -}}
{{- end -}}

sourceDir = {{ .chezmoi.sourceDir | quote }}
{{/* unknown distro */}}
{{- if eq $osid "linux" }}
scriptTempDir = "~/tmp"
{{- end }}

[data]
    name = "Christopher Larson"
    github_username = "kergoth"
    email = {{ $email | quote }}

    ephemeral = {{ $ephemeral }}
    headless = {{ $headless }}
    docker = {{ $docker }}
    personal = {{ $personal }}
    work = {{ $work }}

    gaming = {{ $gaming }}
    video = {{ $video }}
    music = {{ $music }}
    coding = {{ $coding }}
    music_library = {{ $music_library }}
    ebook_library = {{ $ebook_library }}

    secrets = {{ $secrets }}
    user_setup = {{ $user_setup }}

    hostname = {{ $hostname | quote }}
    osid = {{ $osid | quote }}
    wsl2 = {{ $wsl2 }}
    steamdeck = {{ $steamdeck }}
{{- if eq .chezmoi.os "darwin" }}
    macos_version = {{ $macos_version }}
{{- end }}

[github]
    refreshPeriod = "12h"

[1password]
    # Refresh 1password documents weekly
    refreshPeriod = 604800
