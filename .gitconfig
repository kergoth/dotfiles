;  vim: set noet fenc=utf-8 sts=0 sw=8 ts=8 :
[core]
	excludesfile = ~/.gitignore_global
	whitespace = cr-at-eol
	safecrlf = true

[user]
	name = Chris Larson
	email = chris_larson@mentor.com

[alias]
	ci = commit
	co = checkout
	au = add -u
	st = status -sb
	br = branch
	br-m = branch --merged
	br-um = branch --no-merged
	df = diff
	w = whatchanged --reverse
	ls = ls-files --exclude-standard
	staged = diff --cached
	last = "!f(){ since="$1"; shift; git lg --since=\"last $since\" "$@"; }; f"

	# git-flow
	fs = flow feature start
	ff = flow feature finish

	# Diffstat, ignoring whitespace
	ds = !git --no-pager diff --stat -M -w

	# Pretty one line log
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative

	# Amend the current commit, but don't prompt to edit the commit message
	amend = commit --amend -C HEAD

	# Show tags and annotated tag descriptions
	tags = tag -n1 -l

	# Clean out the ignored files (i.e. to rebuild)
	iclean = clean -fdX

	# rerun svn show-ignore -> exclude
	svnignore = !git svn show-ignore > .git/info/exclude

	# show list of contributors in descending order by number of commits
	rank = shortlog -sn --no-merges

	# given a string for an author, try to figure out full name and email:
	whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"

	# given any git object, try to show it briefly
	whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short

	# show conflicting merge in gitk:
	gitkconflict = !gitk --left-right HEAD...MERGE_HEAD

	# prune all tracking local branches that have been removed from remote:
	prune-all = !git remote | xargs -n 1 git remote prune

	# show full history in gitk (including "deleted" branches and stashes)
	history-all = !gitk --all $( git fsck | awk '/dangling commit/ {print $3}' )

	# thanks to cody cutrer
	cherry-pick-merge = "!bash -c 'git cherry-pick -n -m 1 $0 && \
		git log -1 --pretty=%P $0 | cut -b 42- > .git/MERGE_HEAD && \
		git commit -v'"

	# get the remote branch we're tracking
	remote-ref = "!bash -c ' \
		local_ref=$(git symbolic-ref HEAD); \
		local_name=${local_ref##refs/heads/}; \
		remote=$(git config branch.\"$local_name\".remote || echo origin); \
		remote_ref=$(git config branch.\"$local_name\".merge); \
		remote_name=${remote_ref##refs/heads/}; \
		echo remotes/$remote/$remote_name'"

	# rebase against the branch we're tracking
	rebase-recent = !git rebase -i $(git remote-ref)

	# show what I would push to the tracked branch
	topush = !git log $(git remote-ref)..

	test-topush = !git test-sequence $(git remote-ref).. "$@"

	# example: git subdo pull
	subdo = submodule foreach git

	publish = "!sh -c ' \
		remote=$0; \
		ref=$1; \
		shift; \
		git push -u \"$@\" \"$remote\" \
		                   \"$(git symbolic-ref HEAD):$ref\"'"

	# push all unmerged local branches to the supplied remote, setting up
	# tracking for the local branches to that remote.
	publish-all = !git branch --no-merged | xargs -n1 git push -u "$@"

	file-blame = "!f() { git ls-files | while read fn; do git log -1 --pretty=format:\"%ci $fn\" -- \"$fn\"; done }; f"
	pushall = !git remote | xargs -n1 git push
	pushalltags = !git remote | xargs -n1 git push --tags
	svnup = !git config --get-regexp 'svn-remote.*url' | cut -d . -f 2 | xargs -n1 git svn fetch
	edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
	add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
	lc = log ORIG_HEAD.. --stat --no-merges
	serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git
	intercommit = !sh -c 'git show "$1" > .git/commit1 && git show "$2" > .git/commit2 && interdiff .git/commit[12] | less -FRS' -
	unstage = reset HEAD --
	empty-branch = "!sh -e -c 'git symbolic-ref HEAD \"refs/heads/$1\"; rm -f $(git rev-parse --git-dir)/index; git clean -fdx' \"$@\""
	subtree-fetch = "!sh -e -c ' \
		if [ -n \"$1\" ]; then \
			branch=\"$1\"; \
		else \
			branch=\"origin\"; \
		fi; \
		git fetch $branch; \
		\
		subtree=\"$(git config remote.$branch.subtree)\" || exit 0; \
		ref_pattern=\"$(git config remote.$branch.fetch|cut -d: -f2|sed -e\"s,*$,,\")\"; \
		refs=\"$(git for-each-ref \"--format=%(refname)\" \"$ref_pattern\")\"; \
		git filter-branch -f --original refs/original-subtree --subdirectory-filter $subtree $refs; \
		rm -rf $(git rev-parse --git-dir)/refs/original-subtree/; \
	' \"$@\""
	subtree-pull = "!sh -e -x -c '\
		remote=$1; \
		if [ -z \"$remote\" ]; then \
			remote=origin; \
		fi; \
		branch=$2; \
		if [ -z \"$branch\" ]; then \
			branch=master; \
		fi; \
		git subtree-fetch $remote; \
		git merge -s subtree $remote/$branch' \"$@\""

[interactive]
	singlekey = true

[push]
	default = tracking

[branch]
	autosetuprebase = local

[apply]
	whitespace = fix

[diff]
	tool = vimdiff
	renames = copy
	mnemonicprefix = true

[diff "exif"]
	textconv = exiftool

[diff "word"]
	textconv = strings

[merge]
	summary = true
	tool = meld
	conflictstyle = diff3

[merge "ours"]
	name = \"always keep ours\" merge driver
	driver = true

[filter "indent"]
	clean = indent
	smudge = cat

[filter "gofmt"]
	clean = gofmt
	smudge = cat

[pack]
	threads = 3

[log]
	decorate = short

[color]
	ui = auto

[color "diff"]
	whitespace = red reverse
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[color "branch"]
	current = yellow bold
	local = green
	remote = red bold

[color "status"]
	added = green bold
	changed = yellow bold
	untracked = red

[sendemail]
	identity = gmail
	suppressfrom = true

[sendemail.gmail]
	smtpserver = smtp.gmail.com
	smtpserverport = 587
	smtpencryption = tls
	smtpuser = kergoth@gmail.com

[notes]
	rewriteRef = refs/notes/*
	rewriteMode = concatenate

[rerere]
	enabled = 1

[help]
	autocorrect = 1

[url "git://github.com/openembedded/oe-core"]
	insteadOf = oe:openembedded-core
	insteadOf = oe-ssh:openembedded-core
	insteadOf = git://git.openembedded.org/openembedded-core
	insteadOf = git@git.openembedded.org:openembedded-core

[url "git://github.com/openembedded/meta-oe"]
	insteadOf = oe:meta-openembedded
	insteadOf = oe-ssh:meta-openembedded
	insteadOf = git://git.openembedded.org/meta-openembedded
	insteadOf = git@git.openembedded.org:meta-openembedded

[url "git://github.com/openembedded/"]
	insteadOf = oe:
	insteadOf = oe-ssh:
	insteadOf = git://git.openembedded.org/
	insteadOf = git@git.openembedded.org:

[url "git@git.openembedded.org:"]
	pushInsteadOf = oe:
	pushInsteadOf = git://git.openembedded.org/
	pushInsteadOf = git://github.com/openembedded/

[url "git://github.com/"]
	insteadOf = github:
	insteadOf = https://github.com/

[url "https://kergoth@github.com/"]
	insteadOf = github-https:

[url "git@github.com:"]
	insteadOf = github-ssh:
	pushInsteadOf = github:
	pushInsteadOf = git://github.com/
	pushInsteadOf = https://github.com/

[url "git://git.openmoko.org/git/"]
	insteadOf = openmoko:

[url "git://git.gnome.org/"]
	insteadOf = gnome:

[url "ssh://git.gnome.org/git/"]
	insteadOf = gnome-ssh:
	pushInsteadOf = gnome:
	pushInsteadOf = git://git.gnome.org/

[url "git://anongit.freedesktop.org/"]
	insteadOf = fdo:

[url "ssh://git.freedesktop.org/"]
	insteadOf = fdo-ssh:
	pushInsteadOf = fdo:
	pushInsteadOf = git://anongit.freedesktop.org/

[url "git://anonscm.debian.org/"]
	insteadOf = git://git.debian.org/
	insteadOf = debian:

[url "ssh://git.debian.org/git/"]
	insteadOf = debian-ssh:
	pushInsteadOf = debian:
	pushInsteadOf = git://git.debian.org/

[url "git://gist.github.com/"]
	insteadOf = gist:

[url "git@gist.github.com:"]
	insteadOf = gist-ssh:
	pushInsteadOf = gist:
	pushInsteadOf = git://gist.github.com/

[url "http://git.sv.gnu.org/r/"]
	insteadOf = savannah:

[url "ssh://git.sv.gnu.org/srv/git/"]
	insteadOf = savannah-ssh:
	pushInsteadOf = savannah:
	pushInsteadOf = git://git.sv.gnu.org/

[url "ssh://gitscm.sf.net/gitroot/"]
	insteadOf = sf-ssh:
	pushInsteadOf = sf:
	pushInsteadOf = git://gitscm.sf.net/gitroot/

[url "git://gitscm.sf.net/gitroot/"]
	insteadOf = sf:

[url "git://gitorious.org/"]
	insteadOf = gitorious:

[url "git://pkgs.fedoraproject.org/"]
        insteadOf = fedora:

[url "git://git.fedorahosted.org/git/"]
	insteadOf = fedorahosted:

[url "git://sources.redhat.com/git/"]
	insteadOf = redhat:

[url "git://git.kernel.org/pub/scm/"]
	insteadOf = kernel:

[url "git://repo.or.cz/"]
	insteadOf = repo:

[url "git://android.git.kernel.org/"]
	insteadOf = android:

[url "git://git.linuxtogo.org/"]
	insteadOf = ltg:

[url "git://git.overlays.gentoo.org/"]
	insteadOf = gentoo-overlays:

[url "git://anongit.gentoo.org/"]
	insteadOf = gentoo:

[url "git://git.pokylinux.org/"]
	insteadOf = poky:

[url "http://git.shr-project.org/repo/"]
	insteadOf = shr:

[url "git://sourceware.org/git/"]
	insteadOf = sourceware:

[url "git://git.bec-systems.com/"]
	insteadOf = bec-systems:
	insteadOf = bec:

[url "git://git.samba.org/"]
	insteadOf = samba:

[url "git://git.altlinux.org/"]
	insteadOf = altlinux:

[url "git://git.angstrom-distribution.org/"]
	insteadOf = angstrom:

[url "git://uclibc.org/"]
	insteadOf = uclibc:

[url "git://git.infradead.org/"]
	insteadOf = infradead:

[url "git://git.o-hand.com/"]
	insteadOf = o-hand:
	insteadOf = ohand:
