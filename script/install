#!/usr/bin/env bash

set -euo pipefail

# shellcheck source=./common.sh
. "$(dirname "$0")/common.sh"

usage() {
    cat <<END >&2
${0##*/} [options..] [TOPIC..]"

Options:
  -f   Force install, overwriting any existing files.
  -h   Show usage
END
    exit 2
}

do_install () {
    installscript="$1"
    echo >&2 "Install $(dirname "$installscript")"
    (
        cd "${installscript%/*}"
        # shellcheck disable=SC1090
        . "./${installscript##*/}"
    )
}

list_topics () {
    find . -mindepth 2 -maxdepth 2 -name install \
        | grep -v /script/ \
        | sort -u \
        | sed -e "s#^\./##; s#/install\$##"
}

force=0
while getopts fh opt; do
    case "$opt" in
        f)
            force=1
            ;;
        \? | h)
            usage
            ;;
    esac
done
shift $((OPTIND - 1))

dotfilesdir="$(abspath "$(dirname "$(dirname "$0")")")"
PATH="$dotfilesdir/scripts:$PATH"

cd "$dotfilesdir"
if [ $# -eq 0 ]; then
    # shellcheck disable=SC2046
    set -- $(list_topics | xargs)
fi

mkdir -p "$XDG_CONFIG_HOME" "$XDG_DATA_HOME" "$XDG_CACHE_HOME" "$XDG_DATA_HOME/../bin"

ret=0
for topic; do
    if [ "$(basename "$topic")" = local ]; then
        continue
    fi
    if [ -e "$topic/install" ]; then
        install_force="$force" do_install "$topic/install" || ret=$?
    fi
done

for topic; do
    if [ "$(basename "$topic")" = local ] && [ -e "$topic/install" ]; then
        install_force="$force" do_install "$topic/install" || ret=$?
    fi
done
exit "$ret"
