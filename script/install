#!/usr/bin/env bash

set -euo pipefail

usage() {
    cat <<END >&2
${0##*/} [options..] [TOPIC..]"

Options:
  -f                 Force install, overwriting any existing files.
  -x EXCLUDED_TOPIC  Topic to exclude. Cumulative.
  -i INCLUDED_TOPIC  Topic to include. Cumulative.
  -h                 Show usage
END
    exit 2
}

do_install () {
    installscript="$1"
    echo >&2 "Install $(dirname "$installscript")"
    (
        cd "${installscript%/*}"
        cd "$(pwd -P)"
        # shellcheck disable=SC1090
        . "./${installscript##*/}"
    )
}

list_topics () {
    find ./*/ -mindepth 1 -maxdepth 1 -name install \
        | grep -v /script/ \
        | sort -u \
        | sed -e "s#^\./##; s#/install\$##"
}

force=0
INSTALL_DEST="$HOME"
include=
exclude=
while getopts fd:i:x:h opt; do
    case "$opt" in
        f)
            force=1
            ;;
        d)
            INSTALL_DEST="$(abspath "$OPTARG")"
            HOME="$(abspath "$OPTARG")"
            XDG_CONFIG_HOME=$INSTALL_DEST/.config
            XDG_DATA_HOME=$INSTALL_DEST/.local/share
            XDG_CACHE_HOME=$INSTALL_DEST/.cache
            ;;
        i)
            include="${include+$include }$OPTARG"
            exclude="$(echo "$exclude" | tr ' ' '\n' | grep -vxF "$OPTARG" | xargs)" || :
            ;;
        x)
            exclude="${exclude+$exclude }$OPTARG "
            include="$(echo "$include" | tr ' ' '\n' | grep -vxF "$OPTARG" | xargs)" || :
            ;;
        \? | h)
            usage
            ;;
    esac
done
shift $((OPTIND - 1))

# shellcheck source=./common.sh
. "$(dirname "$0")/common.sh"

if [ -n "$exclude" ]; then
    echo >&2 "Excluded: $exclude"
fi

dotfilesdir="$(abspath "$(dirname "$(dirname "$0")")")"
PATH="$dotfilesdir/scripts:$PATH"

cd "$dotfilesdir"
if [ $# -eq 0 ]; then
    # shellcheck disable=SC2046
    set -- $( ( list_topics; echo "$include" | tr ' ' '\n'; ) | grep -vxF local | sort -u | xargs)
    if [ -d local ]; then
        set -- "$@" local
    fi
fi

mkdir -p "$XDG_CONFIG_HOME" "$XDG_DATA_HOME" "$XDG_CACHE_HOME" "$XDG_DATA_HOME/../bin"

ret=0
for topic; do
    case "$exclude" in
        *\ $topic\ *)
            continue
            ;;
    esac
    if [ -e "$topic/install" ]; then
        install_force="$force" do_install "$topic/install" || ret=$?
    elif ! [ -e "$topic" ]; then
        echo >&2 "Topic $topic does not exist"
        ret=1
    fi
done
exit "$ret"
