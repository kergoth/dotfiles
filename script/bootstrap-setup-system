#!/bin/sh
# Bootstrap script for setting up a new system. Independent from dotfiles and
# user setup at this time.
#
# - Installs git and bash if not already present
# - Clones the dotfiles repo if not already present
# - Runs script/setup-system from the dotfiles repo

set -eu

has() {
    command -v "$1" >/dev/null 2>&1
}

run () {
    if has printcmd; then
        printf '❯ %s\n' "$(printcmd "$@")" >&2
    else
        printf '❯ %s\n' "$*" >&2
    fi
    "$@"
}

# shellcheck disable=SC3028,SC2034
case "${OSTYPE:-}" in
darwin*)
    DISTRO=macos
    ;;
*)
    case "$(uname -r)" in
    *Microsoft | *microsoft*)
        OSTYPE=WSL
        ;;
    esac

    if [ -e /etc/os-release ]; then
        DISTRO="$(sed -n -e 's/^ID=//p' /etc/os-release | tr '[:upper:]' '[:lower:]')"
    fi
    ;;
esac

if ! has git || ! has bash || ! has unzip; then
    if [ "$DISTRO" = freebsd ]; then
        if ! doas pkg -N; then
            run doas pkg bootstrap
        fi
        if ! command -v git >/dev/null 2>&1; then
            run doas env ASSUME_ALWAYS_YES=YES pkg install git
        fi
        if ! command -v bash >/dev/null 2>&1; then
            run doas env ASSUME_ALWAYS_YES=YES pkg install bash
        fi
        if ! command -v bash >/dev/null 2>&1; then
            run doas env ASSUME_ALWAYS_YES=YES pkg install unzip
        fi
    elif has apk; then
        if has doas; then
            doas apk update
            doas apk add --no-interactive git bash unzip
        else
        doas apk update
    doas apk add --no-interactive git bash unzip
        fi
    elif has nix-shell; then
        exec nix-shell -p git bash unzip --run "$0"
    elif has apt-get; then
        run sudo apt-get update
        run sudo apt-get -y install git bash unzip
    elif has pacman; then
        run sudo pacman -Sy
        run sudo pacman -S --noconfirm --needed git bash unzip
    else
        echo >&2 "Error: unsupported host and git and/or bash are not available, exiting"
        exit 1
    fi
fi

if [ -z "${DOTFILES_DIR:-}" ]; then
    if [ -h ~/.local/share/chezmoi ]; then
        DOTFILES_DIR="$(readlink ~/.local/share/chezmoi)"
    else
        scriptdir=$(dirname "$0")
        if [ -n "$scriptdir" ]; then
            scriptdir=$(cd "$scriptdir" && pwd -P)
            DOTFILES_DIR="$(dirname "$scriptdir")"
        else
            DOTFILES_DIR="$HOME/.dotfiles"
        fi
    fi
fi

if ! [ -e "$DOTFILES_DIR" ]; then
    run git clone --recursive https://github.com/kergoth/dotfiles "$DOTFILES_DIR"
fi

run "$DOTFILES_DIR/script/setup-system"
