#!/usr/bin/env python

from kergsvk import runcmd, Config, finddepotpath, handleexternals, SVKError, populatestandalones, System, Commands, findcopypath, getlastpath
import os

pathcache = []
def pathhandler(src, dest, src2, dest2):
    if Config.standalones:
        if dest in pathcache:
            return

    print("Copying/updating %s to %s" % (src, dest))

    try:
        if dest2 and not dest2 in pathcache:
            if os.path.exists(dest2):
                print(runcmd([Config.svk, 'revert', '-R', dest2]))
                print(runcmd([Config.svk, 'rm', '--force', dest2]))
                pathcache.append(dest2)

        if not os.path.exists(dest):
            destdir = os.path.dirname(dest)
            print(runcmd(['mkdir', '-p', destdir]))
            print(runcmd([Config.svk, 'add', destdir]))
            print(runcmd([Config.svk, 'cp', src, dest]))
        else:
            # runcmd([Config.svk, 'smerge', '-m', '', '--log', Config.addonsrcpath % src, finddepotpath(dest)], System)
            # runcmd([Config.svk, 'smerge', '-m', '', '--log', src, finddepotpath(dest)], System)
            # runcmd([Config.svk, 'smerge', '-m', '', '--log', '--to', finddepotpath(dest)], System)
            srcpath = getlastpath(dest, ['Copied From', 'Merged From'])
            if not srcpath:
                # sys.__stderr__.write("Unable to locate source copy/merge path for %s" % dest)
                return
            olddir = os.path.abspath(os.curdir)
            os.chdir(dest)
            print(runcmd([Config.svk, 'smerge', srcpath]))
            os.chdir(olddir)
            # runcmd([Config.svk, 'smerge', '-m', 'Updating %s external.' % os.path.basename(src), srcpath, finddepotpath(dest)], System)
            # runcmd([Config.svk, 'smerge', '-m', '', '--log', findcopypath(dest), finddepotpath(dest)], System)
            # runcmd([Config.svk, 'update', dest], System)
    except KeyboardInterrupt:
        sys.__stderr__.write("%s: aborting operation.\n" % sys.exc_type)
        sys.exit(1)
    except Exception:
        sys.__stderr__.write("%s: unable to copy/update %s: %s.\n" % (sys.exc_type, dest, sys.exc_value))
        return

    try:
        handleexternals(dest, pathhandler, src)
        if Config.standalones:
            pathcache.append(dest)
    except Exception:
        sys.__stderr__.write("%s: unable to handle externals of %s: %s.\n" % (sys.exc_type, dest, sys.exc_value))
        return

import sys
try:
    for n in range(1,len(sys.argv)):
        i = sys.argv[n]
        copath = os.path.join(os.path.abspath(os.curdir), os.path.basename(i))
        if os.path.basename(sys.argv[0]) == "externalscp":
            handleexternals(copath, pathhandler, finddepotpath(copath))
        else:
            pathhandler(i, copath, i, None)
except SVKError:
    sys.__stderr__.write(str(sys.exc_value))
    sys.exit(1)
