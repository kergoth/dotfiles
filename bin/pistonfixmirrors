#!/usr/bin/env python

import os

mirrorpath = os.path.join(os.getenv('HOME'), 'svn', 'mirrors', 'list')
def importmirrors():
    d = {}
    lines = [l.split() for l in file(mirrorpath).readlines() if not l.startswith('#')]
    for l in lines:
        try:
            (url, name) = l
        except Exception:
            continue

        d[name] = url

    return d

import re
def propupdate(path, client, mi):
    prop_list = client.propget('piston:root', path, recurse = True)
    for relpath in prop_list.keys():
        root = prop_list[relpath]
        # if root.startswith('http'):
        #     print('root: %s' % root)
        for name in mi.keys():
            if name in ['grid', 'chuckg']:
                break

            url = mi[name]
            # if url.startswith('http'):
            #     print('    url: %s' % url)
            if root.startswith(url):
                rest = re.sub('^%s(/|$)' % url, '', root)
                lpath = os.path.join(path, relpath)
                newroot = 'file://'+os.path.normpath(os.path.join(os.path.dirname(mirrorpath), name, rest))
                print("Setting root for %s to %s." % (relpath, newroot))
                client.propset('piston:root', newroot, os.path.join(path, relpath))

import pysvn
c = pysvn.Client()

from optparse import OptionParser
usage = "usage: %prog [OPTIONS] [PATH ...]"
parser = OptionParser(usage=usage)

(options, args) = parser.parse_args()

mi = importmirrors()
propupdate('.', c, mi)
