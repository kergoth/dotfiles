{
  "_args": [
    [
      {
        "raw": "/private/var/folders/dc/08bztltx53v8vk2hf180zqxw0000gn/T/d-118310-7184-ji1yu3.f2j0885mi/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/private/var/folders/dc/08bztltx53v8vk2hf180zqxw0000gn/T/d-118310-7184-ji1yu3.f2j0885mi/package.tgz",
        "spec": "/private/var/folders/dc/08bztltx53v8vk2hf180zqxw0000gn/T/d-118310-7184-ji1yu3.f2j0885mi/package.tgz",
        "type": "local"
      },
      "/private/var/folders/dc/08bztltx53v8vk2hf180zqxw0000gn/T/apm-install-dir-118310-7184-1q3drw7.fzyl3j714i"
    ]
  ],
  "_from": "../d-118310-7184-ji1yu3.f2j0885mi/package.tgz",
  "_id": "iex@0.10.0",
  "_inCache": true,
  "_location": "/iex",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/private/var/folders/dc/08bztltx53v8vk2hf180zqxw0000gn/T/d-118310-7184-ji1yu3.f2j0885mi/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/private/var/folders/dc/08bztltx53v8vk2hf180zqxw0000gn/T/d-118310-7184-ji1yu3.f2j0885mi/package.tgz",
    "spec": "/private/var/folders/dc/08bztltx53v8vk2hf180zqxw0000gn/T/d-118310-7184-ji1yu3.f2j0885mi/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../d-118310-7184-ji1yu3.f2j0885mi/package.tgz",
  "_shasum": "8597a926fc1a3ce3bad7ccf7010e6ac993c350d9",
  "_shrinkwrap": null,
  "_spec": "/private/var/folders/dc/08bztltx53v8vk2hf180zqxw0000gn/T/d-118310-7184-ji1yu3.f2j0885mi/package.tgz",
  "_where": "/private/var/folders/dc/08bztltx53v8vk2hf180zqxw0000gn/T/apm-install-dir-118310-7184-1q3drw7.fzyl3j714i",
  "bugs": {
    "url": "https://github.com/indiejames/atom-iex/issues"
  },
  "dependencies": {
    "atom-iex-term.js": "0.0.58",
    "atom-space-pen-views": "^2.0.3",
    "fs-plus": "^2.2.3",
    "keypather": "^1.3.2",
    "pty.js": "^0.3.0",
    "uuid": "^2.0.1"
  },
  "description": "Run an Elixir IEx (REPL) session in an Atom window.",
  "devDependencies": {},
  "engines": {
    "atom": ">=1.0.0"
  },
  "homepage": "https://github.com/indiejames/atom-iex#readme",
  "license": "MIT",
  "main": "./lib/iex",
  "name": "iex",
  "optionalDependencies": {},
  "readme": "# iex package\n\nThis package provides Elixir developers with the ability to run an Elixir IEx\n(REPL) session in an Atom window. It has only been tested on OS X and is\nunlikely to work properly (or at all) on other platforms.\n\n![iex Screenshot](https://github.com/indiejames/atom-iex/raw/master/atom-iex.gif)\n\n\n### Installation\n\n```\napm install iex\n```\n\nIt is _highly recommended_ that you add the key bindings below. These can be\ncustomized as desired. They are not set by default to avoid conflicts with\nother packages.\n\n### Features\n\nAside from typing directly in the IEx session, the plugin provides actions\nto improve workflow:\n\n* Reset the project, restarting the application and compiling any files that\nhave changed since the last restart\n* Run all tests in the project\n* Run all tests in the currently open editor\n* Run the test in the open editor in which the cursor resides\n* Execute the currently selected text\n\nThese actions depend on `mix`, so they only work for `mix` generated projects\nand require a `mix.exs` file at the top level.\n\n### Key Bindings\n\nCustomizing Key Bindings:\n\n```cson\n'atom-workspace':\n  'cmd-alt-l': 'iex:open'\n  'cmd-alt-l down': 'iex:open-split-down'\n  'cmd-alt-l up': 'iex:open-split-up'\n  'cmd-alt-l left': 'iex:open-split-left'\n  'cmd-alt-l right': 'iex:open-split-right'\n  'cmd-alt-e': 'iex:reset'\n  'cmd-alt-a': 'iex:run-all-tests'\n  'cmd-alt-p': 'iex:pretty-print'\n\n'atom-text-editor':\n  'cmd-alt-h': 'iex:help'\n  'cmd-alt-o': 'iex:gotoDefinition'\n  'cmd-alt-x': 'iex:run-tests'\n  'cmd-alt-j': 'iex:run-test'\n  'cmd-alt-b': 'iex:pipe'\n```\n\nAdding these will provide the following:\n\n#### Key Bindings and Events\n\n| key binding | event | action |\n| ----------- | ----- | ------ |\n| `cmd + alt + l` | `iex:open` | Opens new IEx in new tab pane |\n| `cmd + alt + l down` | `iex:open-split-up` | Opens new IEx tab pane in up split |\n| `cmd + alt + l right` | `iex:open-split-right` | Opens new IEx tab pane in right split |\n| `cmd + alt + l down` | `iex:open-split-down` | Opens new IEx tab pane in down split |\n| `cmd + alt + l left` | `iex:open-split-left` | Opens new IEx tab pane in left split |\n| `cmd + alt + e` | `iex:reset` | Stops the application, compiles any changed files with mix, then restarts the application. |\n| `cmd + alt + a` | `iex:run-all-tests` | Run all the test in the project |\n| `cmd + alt + x` | `iex:run-tests` | Run all the tests in the active editor |\n| `cmd + alt + j` | `iex:run-test` | Run the test in which the cursor lies |\n| `cmd + alt + h` | `iex:help` | Print the docstring for the function or module under the cursor |\n| `cmd + alt + o` | `iex:gotoDefinition`| Jump to the definition of the function or module under the cursor |\n| `cmd + alt + b` | `iex:pipe` | Pipe the currently selected text to the REPL and execute it |\n| `cmd + alt + p` | `iex:pretty-print` | Pretty print the last evaluated expression |\n\n### Fonts\nThe REPL defaults to using the same font family/size as Atom. Independent settings for the REPL will be available in the next release.\n\n### Contributions\n\nThis package is originally based on the [Term2 Atom package](https://atom.io/packages/term2) with heavy modifications. Feel free to submit bugs or issue pull requests.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/indiejames/atom-iex.git"
  },
  "version": "0.10.0"
}
