'use strict';
var assertion = require('./assertion');
var serialise = require('./serialise');
var regex = require('./regex');
var parseLax = require('./parser/lax');
var model = require('./model');
exports.model = model;
var importer = require('./importers/index');
exports.importer = importer;
var utils = require('./utils');
exports.utils = utils;
[exports.model, exports.importer, exports.utils];
exports.parts = parseLax;
function isPartial(source) {
    return regex.partial.test(source);
}
exports.isPartial = isPartial;
function parse(source) {
    if (regex.bomStart.test(source)) {
        source = source.replace(regex.bomStart, '');
    }
    var result = parseLax.header.parse(source);
    var ret = {
        success: !!result.status
    };
    if (result.status) {
        ret.value = result.value;
        return ret;
    }
    ret.index = result.index;
    var pos = exports.utils.getPosition(source, result.index);
    ret.line = pos.line;
    ret.column = pos.column;
    ret.message = 'expected ' + result.expected.replace(/"/, '\"') + ' at line ' + (pos.line + 1) + ', column ' + (pos.column + 1);
    var details = '';
    details += ret.message + ':';
    details += '\n\n';
    details += exports.utils.highlightPos(source, pos.line, pos.column);
    details += '\n';
    ret.details = details;
    return ret;
}
exports.parse = parse;
function stringify(header) {
    return serialise.stringify(header);
}
exports.stringify = stringify;
function assert(header) {
    return assertion.header(header);
}
exports.assert = assert;
