{
  "name": "msgpack-stream",
  "version": "0.0.12",
  "description": "Stream of msgpack protocol",
  "main": "index.js",
  "scripts": {
    "test": "node test.js"
  },
  "dependencies": {
    "through": "2.3.4",
    "msgpack-js": "0.3.0",
    "bops": "0.0.6"
  },
  "keywords": [
    "msgpack",
    "stream",
    "pipe",
    "frame"
  ],
  "author": {
    "name": "Dominic Tarr",
    "email": "dominic.tarr@gmail.com",
    "url": "dominictarr.com"
  },
  "license": "MIT",
  "devDependencies": {
    "tape": "~1.0.4"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/msgpack-stream.git"
  },
  "testling": {
    "files": "test.js",
    "browsers": [
      "ie/8..latest",
      "firefox/17..latest",
      "firefox/nightly",
      "chrome/22..latest",
      "chrome/canary",
      "opera/12..latest",
      "opera/next",
      "safari/5.1..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "readme": "#MsgPackStream\n\nStreams of framed [msgpack](http://msgpack.org) messages.\n\n[![testling badge](https://ci.testling.com/dominictarr/msgpack-stream.png)](https://ci.testling.com/dominictarr/msgpack-stream)\n\n## WARNING\n\nthis module is *not recommended* parsing `msgpack` in js is much slower\nthan spliting json into lines and parsing with `JSON.parse`, which is heavily\noptimised in all good js implementations.\n\ninstead use: [es.parse](https://github.com/dominictarr/event-stream#parse) and [es.stringify](https://github.com/dominictarr/event-stream#stringify)\n\nIf you really want to use `msgpack` you should fix this issue: [pgreiss/node-msgpack#16](https://github.com/pgriess/node-msgpack/issues/16)\n\n## usage\n\n``` js\n\nvar mps = require('msgpack-stream')\n\nvar encode = mps.createEncodeStream()\nvar decode = mps.createDecodeStream()\n\nencode.pipe(decode)\n\ndecode.on('data', console.log)\n\nencode.write('HELLO')\nencode.write({object: true})\nencode.write(true)\nencode.write(AnyValidJsObject) //!\n```\n\n## remarks\n\nthis is mostly pulled out of [smith](https://github.com/c9/smith) and slightly refactored to fit a stream.\n\n## lies\n\nActually, msgpack does not support much loved js objects such as `Infinity`, or `Nan`. \n\nOn the other hand, `msgpack-stream` uses [creationix/msgpack-js](https://github.com/creationix/msgpack-js) which implements a slightly extended protocol, so you can pack `Buffer` and `undefined`\n",
  "readmeFilename": "readme.markdown",
  "bugs": {
    "url": "https://github.com/dominictarr/msgpack-stream/issues"
  },
  "_id": "msgpack-stream@0.0.12",
  "dist": {
    "shasum": "28897d16cd7c0a7901eee16b9b6039d42e2fcc97",
    "tarball": "http://registry.npmjs.org/msgpack-stream/-/msgpack-stream-0.0.12.tgz"
  },
  "_from": "msgpack-stream@>=0.0.10 <0.1.0",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "dominictarr",
    "email": "dominic.tarr@gmail.com"
  },
  "maintainers": [
    {
      "name": "dominictarr",
      "email": "dominic.tarr@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "28897d16cd7c0a7901eee16b9b6039d42e2fcc97",
  "_resolved": "https://registry.npmjs.org/msgpack-stream/-/msgpack-stream-0.0.12.tgz"
}
