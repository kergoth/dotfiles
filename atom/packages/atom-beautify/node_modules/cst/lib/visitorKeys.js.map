{"version":3,"sources":["../src/visitorKeys.js"],"names":["ArrayExpression","ArrayPattern","ArrowFunctionExpression","AssignmentExpression","AssignmentPattern","AwaitExpression","BinaryExpression","BindExpression","BlockStatement","BooleanLiteral","BreakStatement","CallExpression","CatchClause","ClassBody","ClassDeclaration","ClassExpression","ClassMethod","ClassProperty","ConditionalExpression","ContinueStatement","DebuggerStatement","Directive","DirectiveLiteral","DoWhileStatement","EmptyStatement","ExportAllDeclaration","ExportDefaultDeclaration","ExportDefaultSpecifier","ExportNamedDeclaration","ExportNamespaceSpecifier","ExportSpecifier","ExpressionStatement","ForInStatement","ForOfStatement","ForStatement","FunctionDeclaration","FunctionExpression","Identifier","IfStatement","ImportDeclaration","ImportDefaultSpecifier","ImportNamespaceSpecifier","ImportSpecifier","JSXAttribute","JSXClosingElement","JSXElement","JSXEmptyExpression","JSXExpressionContainer","JSXIdentifier","JSXMemberExpression","JSXNamespacedName","JSXOpeningElement","JSXSpreadAttribute","JSXText","LabeledStatement","LogicalExpression","MemberExpression","MetaProperty","ModuleDeclaration","ModuleSpecifier","NewExpression","NullLiteral","NumericLiteral","ObjectExpression","ObjectMethod","ObjectPattern","ObjectProperty","Program","RegExpLiteral","RestElement","RestProperty","ReturnStatement","SequenceExpression","SpreadElement","SpreadProperty","StringLiteral","Super","SwitchCase","SwitchStatement","TaggedTemplateExpression","TemplateElement","TemplateLiteral","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","YieldExpression"],"mappings":"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","file":"visitorKeys.js","sourcesContent":["export default {\n    ArrayExpression: ['elements'],\n    ArrayPattern: ['elements'],\n    ArrowFunctionExpression: ['params', 'body'],\n    AssignmentExpression: ['left', 'right'],\n    AssignmentPattern: ['left', 'right'],\n    AwaitExpression: ['argument'],\n    BinaryExpression: ['left', 'right'],\n    BindExpression: ['object', 'callee'],\n    BlockStatement: ['body', 'directives'],\n    BooleanLiteral: [],\n    BreakStatement: ['label'],\n    CallExpression: ['callee', 'arguments'],\n    CatchClause: ['param', 'body'],\n    ClassBody: ['body'],\n    ClassDeclaration: ['id', 'superClass', 'body'],\n    ClassExpression: ['id', 'superClass', 'body'],\n    ClassMethod: ['key', 'body', 'params'],\n    ClassProperty: ['key', 'value'],\n    ConditionalExpression: ['test', 'consequent', 'alternate'],\n    ContinueStatement: ['label'],\n    DebuggerStatement: [],\n    Directive: ['value'],\n    DirectiveLiteral: [],\n    DoWhileStatement: ['body', 'test'],\n    EmptyStatement: [],\n    ExportAllDeclaration: ['source'],\n    ExportDefaultDeclaration: ['declaration'],\n    ExportDefaultSpecifier: ['exported'],\n    ExportNamedDeclaration: ['declaration', 'specifiers', 'source'],\n    ExportNamespaceSpecifier: ['exported'],\n    ExportSpecifier: ['exported', 'local'],\n    ExpressionStatement: ['expression'],\n    ForInStatement: ['left', 'right', 'body'],\n    ForOfStatement: ['left', 'right', 'body'],\n    ForStatement: ['init', 'test', 'update', 'body'],\n    FunctionDeclaration: ['id', 'params', 'body'],\n    FunctionExpression: ['id', 'params', 'body'],\n    Identifier: [],\n    IfStatement: ['test', 'consequent', 'alternate'],\n    ImportDeclaration: ['specifiers', 'source'],\n    ImportDefaultSpecifier: ['local'],\n    ImportNamespaceSpecifier: ['local'],\n    ImportSpecifier: ['imported', 'local'],\n    JSXAttribute: ['name', 'value'],\n    JSXClosingElement: ['name'],\n    JSXElement: ['openingElement', 'closingElement', 'children'],\n    JSXEmptyExpression: [],\n    JSXExpressionContainer: ['expression'],\n    JSXIdentifier: [],\n    JSXMemberExpression: ['object', 'property'],\n    JSXNamespacedName: ['namespace', 'name'],\n    JSXOpeningElement: ['name', 'attributes'],\n    JSXSpreadAttribute: ['argument'],\n    JSXText: [],\n    LabeledStatement: ['label', 'body'],\n    LogicalExpression: ['left', 'right'],\n    MemberExpression: ['object', 'property'],\n    MetaProperty: ['meta', 'property'],\n    ModuleDeclaration: [],\n    ModuleSpecifier: ['local'],\n    NewExpression: ['callee', 'arguments'],\n    NullLiteral: [],\n    NumericLiteral: [],\n    ObjectExpression: ['properties'],\n    ObjectMethod: ['key', 'params', 'body'],\n    ObjectPattern: ['properties'],\n    ObjectProperty: ['key', 'value'],\n    Program: ['body', 'directives'],\n    RegExpLiteral: [],\n    RestElement: ['argument'],\n    RestProperty: ['argument'],\n    ReturnStatement: ['argument'],\n    SequenceExpression: ['expressions'],\n    SpreadElement: ['argument'],\n    SpreadProperty: ['argument'],\n    StringLiteral: [],\n    Super: [],\n    SwitchCase: ['test', 'consequent'],\n    SwitchStatement: ['discriminant', 'cases'],\n    TaggedTemplateExpression: ['tag', 'quasi'],\n    TemplateElement: [],\n    TemplateLiteral: ['quasis', 'expressions'],\n    ThisExpression: [],\n    ThrowStatement: ['argument'],\n    TryStatement: ['block', 'handler', 'finalizer'],\n    UnaryExpression: ['argument'],\n    UpdateExpression: ['argument'],\n    VariableDeclaration: ['declarations'],\n    VariableDeclarator: ['id', 'init'],\n    WhileStatement: ['test', 'body'],\n    WithStatement: ['object', 'body'],\n    YieldExpression: ['argument'],\n};\n"]}