{"version":3,"sources":["../../../src/plugins/scopes/Variable.js"],"names":["Variable","name","type","scope","_definitions","_references","definition","variable","add","reference","delete"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAKA;;;;;;IAEqBA,Q;AACjB,4BAA6E;AAAA,YAAhEC,IAAgE,QAAhEA,IAAgE;AAAA,YAA1DC,IAA0D,QAA1DA,IAA0D;AAAA,YAApDC,KAAoD,QAApDA,KAAoD;AAAA;;AACzE,aAAKF,IAAL,GAAYA,IAAZ;AACA,aAAKC,IAAL,GAAYA,IAAZ;AACA,aAAKC,KAAL,GAAaA,KAAb;AACA,aAAKC,YAAL,GAAoB,mBAApB;AACA,aAAKC,WAAL,GAAmB,mBAAnB;AACH;;;;uCAQcC,U,EAAwB;AACnCA,uBAAWC,QAAX,GAAsB,IAAtB;AACA,iBAAKH,YAAL,CAAkBI,GAAlB,CAAsBF,UAAtB;AACH;;;sCAEaG,S,EAAsB;AAChCA,sBAAUF,QAAV,GAAqB,IAArB;AACA,iBAAKF,WAAL,CAAiBG,GAAjB,CAAqBC,SAArB;AACH;;;0CAEiBH,U,EAAwB;AACtC,iBAAKF,YAAL,CAAkBM,MAAlB,CAAyBJ,UAAzB;AACH;;;yCAEgBG,S,EAAsB;AACnC,iBAAKJ,WAAL,CAAiBK,MAAjB,CAAwBD,SAAxB;AACH;;;4CAEmBF,Q,EAAoB;AAAA;AAAA;AAAA;;AAAA;AACpC,gEAAsB,KAAKF,WAA3B,4GAAwC;AAAA,wBAA/BI,SAA+B;;AACpC,wBAAI,CAACA,UAAUP,IAAf,EAAqB;AACjB,6BAAKG,WAAL,CAAiBK,MAAjB,CAAwBD,SAAxB;AACAF,iCAASF,WAAT,CAAqBG,GAArB,CAAyBC,SAAzB;AACAA,kCAAUF,QAAV,GAAqBA,QAArB;AACH;AACJ;AAPmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQvC;;;yCAE8B;AAC3B,mBAAO,uBAAQ,KAAKH,YAAb,CAAP;AACH;;;wCAE4B;AACzB,mBAAO,uBAAQ,KAAKC,WAAb,CAAP;AACH;;;;;kBAjDgBL,Q","file":"Variable.js","sourcesContent":["/* @flow */\n\nimport type Definition from './Definition';\nimport type Reference from './Reference';\nimport type Scope from './Scope';\nimport toArray from '../../utils/toArray';\n\nexport default class Variable {\n    constructor({name, type, scope}: {name: string, type: string, scope: Scope}) {\n        this.name = name;\n        this.type = type;\n        this.scope = scope;\n        this._definitions = new Set();\n        this._references = new Set();\n    }\n\n    name: string;\n    type: string;\n    scope: Scope;\n    _references: Set<Reference>;\n    _definitions: Set<Definition>;\n\n    _addDefinition(definition: Definition) {\n        definition.variable = this;\n        this._definitions.add(definition);\n    }\n\n    _addReference(reference: Reference) {\n        reference.variable = this;\n        this._references.add(reference);\n    }\n\n    _removeDefinition(definition: Definition) {\n        this._definitions.delete(definition);\n    }\n\n    _removeReference(reference: Reference) {\n        this._references.delete(reference);\n    }\n\n    _transferReferences(variable: Variable) {\n        for (let reference of this._references) {\n            if (!reference.type) {\n                this._references.delete(reference);\n                variable._references.add(reference);\n                reference.variable = variable;\n            }\n        }\n    }\n\n    getDefinitions(): Definition[] {\n        return toArray(this._definitions);\n    }\n\n    getReferences(): Reference[] {\n        return toArray(this._references);\n    }\n}\n"]}