{"version":3,"sources":["../../../src/elements/types/ThrowStatement.js"],"names":["ThrowStatement","childNodes","children","passToken","skipSameLineNonCode","argument","passExpression","skipNonCode","skipSemicolon","assertEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,c;;;AACjB,4BAAYC,UAAZ,EAAwB;AAAA;AAAA,qJACd,gBADc,EACIA,UADJ;AAEvB;;;;wCAEeC,Q,EAAU;AACtBA,qBAASC,SAAT,CAAmB,SAAnB,EAA8B,OAA9B;AACAD,qBAASE,mBAAT;AACA,gBAAIC,WAAWH,SAASI,cAAT,EAAf;AACAJ,qBAASK,WAAT;AACAL,qBAASM,aAAT;AACAN,qBAASO,SAAT;AACA,iBAAKJ,QAAL,GAAgBA,QAAhB;AACH;;;;;kBAbgBL,c","file":"ThrowStatement.js","sourcesContent":["import Statement from '../Statement';\n\nexport default class ThrowStatement extends Statement {\n    constructor(childNodes) {\n        super('ThrowStatement', childNodes);\n    }\n\n    _acceptChildren(children) {\n        children.passToken('Keyword', 'throw');\n        children.skipSameLineNonCode();\n        let argument = children.passExpression();\n        children.skipNonCode();\n        children.skipSemicolon();\n        children.assertEnd();\n        this.argument = argument;\n    }\n}\n"]}