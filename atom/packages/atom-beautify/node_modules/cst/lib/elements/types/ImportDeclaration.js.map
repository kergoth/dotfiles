{"version":3,"sources":["../../../src/elements/types/ImportDeclaration.js"],"names":["ImportDeclaration","childNodes","children","passToken","skipNonCode","specifiers","source","isNode","push","passModuleSpecifier","isToken","moveNext","passNode","isEnd","assertEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,iB;;;AACjB,+BAAYC,UAAZ,EAAwB;AAAA;AAAA,2JACd,mBADc,EACOA,UADP;AAEvB;;;;wCAEeC,Q,EAAU;AACtBA,qBAASC,SAAT,CAAmB,SAAnB,EAA8B,QAA9B;AACAD,qBAASE,WAAT;;AAEA,gBAAIC,aAAa,EAAjB;AACA,gBAAIC,SAAS,IAAb;;AAEA,gBAAIJ,SAASK,MAAT,CAAgB,wBAAhB,CAAJ,EAA+C;AAC3CF,2BAAWG,IAAX,CAAgBN,SAASO,mBAAT,EAAhB;AACAP,yBAASE,WAAT;AACA,oBAAIF,SAASQ,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrCR,6BAASS,QAAT;AACAT,6BAASE,WAAT;AACH;AACJ,aAPD,MAOO,IAAIF,SAASK,MAAT,CAAgB,0BAAhB,CAAJ,EAAiD;AACpDF,2BAAWG,IAAX,CAAgBN,SAASO,mBAAT,EAAhB;AACAP,yBAASE,WAAT;AACH;;AAED,gBAAIF,SAASQ,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrCR,yBAASC,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAD,yBAASE,WAAT;AACA,uBAAO,CAACF,SAASQ,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAR,EAA6C;AACzCL,+BAAWG,IAAX,CAAgBN,SAASO,mBAAT,EAAhB;AACAP,6BAASE,WAAT;AACA,wBAAIF,SAASQ,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrCR,iCAASS,QAAT;AACAT,iCAASE,WAAT;AACH;AACJ;AACDF,yBAASC,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAD,yBAASE,WAAT;AACH;;AAED,gBAAIF,SAASQ,OAAT,CAAiB,YAAjB,EAA+B,MAA/B,CAAJ,EAA4C;AACxCR,yBAASC,SAAT,CAAmB,YAAnB,EAAiC,MAAjC;AACAD,yBAASE,WAAT;AACH;;AAEDE,qBAASJ,SAASU,QAAT,CAAkB,eAAlB,CAAT;AACA,gBAAI,CAACV,SAASW,KAAd,EAAqB;AACjBX,yBAASE,WAAT;AACAF,yBAASC,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACH;;AAEDD,qBAASY,SAAT;;AAEA,iBAAKT,UAAL,GAAkBA,UAAlB;AACA,iBAAKC,MAAL,GAAcA,MAAd;AACH;;;;;kBAtDgBN,iB","file":"ImportDeclaration.js","sourcesContent":["import ModuleDeclaration from '../ModuleDeclaration';\n\nexport default class ImportDeclaration extends ModuleDeclaration {\n    constructor(childNodes) {\n        super('ImportDeclaration', childNodes);\n    }\n\n    _acceptChildren(children) {\n        children.passToken('Keyword', 'import');\n        children.skipNonCode();\n\n        let specifiers = [];\n        let source = null;\n\n        if (children.isNode('ImportDefaultSpecifier')) {\n            specifiers.push(children.passModuleSpecifier());\n            children.skipNonCode();\n            if (children.isToken('Punctuator', ',')) {\n                children.moveNext();\n                children.skipNonCode();\n            }\n        } else if (children.isNode('ImportNamespaceSpecifier')) {\n            specifiers.push(children.passModuleSpecifier());\n            children.skipNonCode();\n        }\n\n        if (children.isToken('Punctuator', '{')) {\n            children.passToken('Punctuator', '{');\n            children.skipNonCode();\n            while (!children.isToken('Punctuator', '}')) {\n                specifiers.push(children.passModuleSpecifier());\n                children.skipNonCode();\n                if (children.isToken('Punctuator', ',')) {\n                    children.moveNext();\n                    children.skipNonCode();\n                }\n            }\n            children.passToken('Punctuator', '}');\n            children.skipNonCode();\n        }\n\n        if (children.isToken('Identifier', 'from')) {\n            children.passToken('Identifier', 'from');\n            children.skipNonCode();\n        }\n\n        source = children.passNode('StringLiteral');\n        if (!children.isEnd) {\n            children.skipNonCode();\n            children.passToken('Punctuator', ';');\n        }\n\n        children.assertEnd();\n\n        this.specifiers = specifiers;\n        this.source = source;\n    }\n}\n"]}