{"version":3,"sources":["../../../src/elements/types/BreakStatement.js"],"names":["BreakStatement","childNodes","children","passToken","label","isEnd","skipSameLineNonCode","isNode","passNode","skipNonCode","skipSemicolon","isToken","assertEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,c;;;AAEjB;AACA;;AAEA,4BAAYC,UAAZ,EAAwB;AAAA;AAAA,qJACd,gBADc,EACIA,UADJ;AAEvB;;;;wCAEeC,Q,EAAU;AACtBA,qBAASC,SAAT,CAAmB,SAAnB,EAA8B,OAA9B;;AAEA,gBAAIC,QAAQ,IAAZ;AACA,gBAAI,CAACF,SAASG,KAAd,EAAqB;AACjBH,yBAASI,mBAAT;;AAEA,oBAAIJ,SAASK,MAAT,CAAgB,YAAhB,CAAJ,EAAmC;AAC/BH,4BAAQF,SAASM,QAAT,CAAkB,YAAlB,CAAR;AACAN,6BAASO,WAAT;AACAP,6BAASQ,aAAT;AACH,iBAJD,MAIO,IAAIR,SAASS,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AAC5CT,6BAASC,SAAT;AACH,iBAFM,MAEA;AACHD,6BAASC,SAAT;AACAD,6BAASQ,aAAT;AACH;AACJ;;AAEDR,qBAASU,SAAT;;AAEA,iBAAKR,KAAL,GAAaA,KAAb;AACH;;;;;kBA/BgBJ,c","file":"BreakStatement.js","sourcesContent":["import Statement from '../Statement';\n\nexport default class BreakStatement extends Statement {\n\n    // TODO: Requires a loop.\n    // TODO: In case of a label, requires label.\n\n    constructor(childNodes) {\n        super('BreakStatement', childNodes);\n    }\n\n    _acceptChildren(children) {\n        children.passToken('Keyword', 'break');\n\n        let label = null;\n        if (!children.isEnd) {\n            children.skipSameLineNonCode();\n\n            if (children.isNode('Identifier')) {\n                label = children.passNode('Identifier');\n                children.skipNonCode();\n                children.skipSemicolon();\n            } else if (children.isToken('Punctuator', ';')) {\n                children.passToken();\n            } else {\n                children.passToken();\n                children.skipSemicolon();\n            }\n        }\n\n        children.assertEnd();\n\n        this.label = label;\n    }\n}\n"]}