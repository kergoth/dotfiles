{"version":3,"sources":["../../../src/elements/types/ObjectProperty.js"],"names":["ObjectProperty","childNodes","children","key","value","shorthand","computed","isToken","isNode","passNode","left","readKey","isEnd","type","skipNonCode","passToken","currentElement","isPattern","passPattern","passExpression","assertEnd","result"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEqBA,c;;;AACjB,4BAAYC,UAAZ,EAAwB;AAAA;AAAA,qJACd,gBADc,EACIA,UADJ;AAEvB;;;;wCAEeC,Q,EAAU;AACtB,gBAAIC,YAAJ;AACA,gBAAIC,cAAJ;AACA,gBAAIC,YAAY,KAAhB;AACA,gBAAIC,WAAW,KAAf;;AAEAA,uBAAWJ,SAASK,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAX;;AAEA,gBAAIL,SAASM,MAAT,CAAgB,mBAAhB,CAAJ,EAA0C;AACtCJ,wBAAQF,SAASO,QAAT,EAAR;AACAN,sBAAMC,MAAMM,IAAZ;AACH,aAHD,MAGO;AACHP,sBAAMQ,QAAQT,QAAR,CAAN;AACA,oBAAIA,SAASU,KAAT,IAAkBT,IAAIU,IAAJ,KAAa,YAAnC,EAAiD;AAC7CR,gCAAY,IAAZ;AACAD,4BAAQD,GAAR;AACH,iBAHD,MAGO;AACHD,6BAASY,WAAT;AACA,wBAAIZ,SAASM,MAAT,CAAgB,oBAAhB,CAAJ,EAA2C;AACvCJ,gCAAQF,SAASO,QAAT,CAAkB,oBAAlB,CAAR;AACH,qBAFD,MAEO;AACHP,iCAASa,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAb,iCAASY,WAAT;AACA,4BAAIZ,SAASc,cAAT,CAAwBC,SAA5B,EAAuC;AACnCb,oCAAQF,SAASgB,WAAT,EAAR;AACH,yBAFD,MAEO;AACHd,oCAAQF,SAASiB,cAAT,EAAR;AACH;AACJ;AACJ;AACJ;;AAEDjB,qBAASkB,SAAT;;AAEA,iBAAKjB,GAAL,GAAWA,GAAX;AACA,iBAAKC,KAAL,GAAaA,KAAb;AACA,iBAAKC,SAAL,GAAiBA,SAAjB;AACA,iBAAKC,QAAL,GAAgBA,QAAhB;AACH;;;;;kBA3CgBN,c;;;AA8CrB,SAASW,OAAT,CAAiBT,QAAjB,EAA2B;AACvB,QACIA,SAASM,MAAT,CAAgB,eAAhB,KACAN,SAASM,MAAT,CAAgB,gBAAhB,CADA,IAEAN,SAASM,MAAT,CAAgB,YAAhB,CAHJ,EAIE;AACE,eAAON,SAASO,QAAT,EAAP;AACH,KAND,MAMO,IAAIP,SAASK,OAAT,CAAiB,YAAjB,CAAJ,EAAoC;AACvC;AACA;AACA,eAAO,yBAAe,CAACL,SAASa,SAAT,EAAD,CAAf,CAAP;AACH,KAJM,MAIA;AACHb,iBAASa,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAb,iBAASY,WAAT;AACA,YAAIO,SAASnB,SAASiB,cAAT,EAAb;AACAjB,iBAASY,WAAT;AACAZ,iBAASa,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACA,eAAOM,MAAP;AACH;AACJ","file":"ObjectProperty.js","sourcesContent":["import Node from '../Node';\nimport Identifier from './Identifier';\n\nexport default class ObjectProperty extends Node {\n    constructor(childNodes) {\n        super('ObjectProperty', childNodes);\n    }\n\n    _acceptChildren(children) {\n        let key;\n        let value;\n        let shorthand = false;\n        let computed = false;\n\n        computed = children.isToken('Punctuator', '[');\n\n        if (children.isNode('AssignmentPattern')) {\n            value = children.passNode();\n            key = value.left;\n        } else {\n            key = readKey(children);\n            if (children.isEnd && key.type === 'Identifier') {\n                shorthand = true;\n                value = key;\n            } else {\n                children.skipNonCode();\n                if (children.isNode('FunctionExpression')) {\n                    value = children.passNode('FunctionExpression');\n                } else {\n                    children.passToken('Punctuator', ':');\n                    children.skipNonCode();\n                    if (children.currentElement.isPattern) {\n                        value = children.passPattern();\n                    } else {\n                        value = children.passExpression();\n                    }\n                }\n            }\n        }\n\n        children.assertEnd();\n\n        this.key = key;\n        this.value = value;\n        this.shorthand = shorthand;\n        this.computed = computed;\n    }\n}\n\nfunction readKey(children) {\n    if (\n        children.isNode('StringLiteral') ||\n        children.isNode('NumericLiteral') ||\n        children.isNode('Identifier')\n    ) {\n        return children.passNode();\n    } else if (children.isToken('Identifier')) {\n        // This element is skipped in elementTree::buildElementTreeItem due to:\n        // https://github.com/babel/babylon/issues/49\n        return new Identifier([children.passToken()]);\n    } else {\n        children.passToken('Punctuator', '[');\n        children.skipNonCode();\n        let result = children.passExpression();\n        children.skipNonCode();\n        children.passToken('Punctuator', ']');\n        return result;\n    }\n}\n"]}