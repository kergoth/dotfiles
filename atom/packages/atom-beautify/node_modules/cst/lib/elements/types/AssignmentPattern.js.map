{"version":3,"sources":["../../../src/elements/types/AssignmentPattern.js"],"names":["AssignmentPattern","childNodes","isPattern","children","left","passPattern","skipNonCode","passToken","right","passExpression","assertEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,iB;;;AACjB,+BAAYC,UAAZ,EAAwB;AAAA;;AAAA,gKACd,mBADc,EACOA,UADP;;AAEpB,cAAKC,SAAL,GAAiB,IAAjB;AAFoB;AAGvB;;;;wCAEeC,Q,EAAU;AACtB,gBAAIC,OAAOD,SAASE,WAAT,EAAX;AACAF,qBAASG,WAAT;AACAH,qBAASI,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAJ,qBAASG,WAAT;AACA,gBAAIE,QAAQL,SAASM,cAAT,EAAZ;AACAN,qBAASO,SAAT;;AAEA,iBAAKN,IAAL,GAAYA,IAAZ;AACA,iBAAKI,KAAL,GAAaA,KAAb;AACH;;;;;kBAhBgBR,iB","file":"AssignmentPattern.js","sourcesContent":["import Node from '../Node';\n\nexport default class AssignmentPattern extends Node {\n    constructor(childNodes) {\n        super('AssignmentPattern', childNodes);\n        this.isPattern = true;\n    }\n\n    _acceptChildren(children) {\n        let left = children.passPattern();\n        children.skipNonCode();\n        children.passToken('Punctuator', '=');\n        children.skipNonCode();\n        let right = children.passExpression();\n        children.assertEnd();\n\n        this.left = left;\n        this.right = right;\n    }\n}\n"]}