{"version":3,"sources":["../../../src/elements/types/NewExpression.js"],"names":["NewExpression","childNodes","children","passToken","skipNonCode","callee","passExpression","arguments","isEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEqBA,a;;;AACjB,2BAAYC,UAAZ,EAAwB;AAAA;AAAA,mJACd,eADc,EACGA,UADH;AAEvB;;;;wCAEeC,Q,EAAU;AACtBA,qBAASC,SAAT,CAAmB,SAAnB,EAA8B,KAA9B;AACAD,qBAASE,WAAT;;AAEA,iBAAKC,MAAL,GAAcH,SAASI,cAAT,EAAd;AACA,iBAAKC,SAAL,GAAiBL,SAASM,KAAT,GAAiB,EAAjB,GAAsB,kCAAmBN,QAAnB,CAAvC;AACH;;;;;kBAXgBF,a","file":"NewExpression.js","sourcesContent":["import Expression from '../Expression';\nimport acceptArgumentList from './utils/acceptArgumentList';\n\nexport default class NewExpression extends Expression {\n    constructor(childNodes) {\n        super('NewExpression', childNodes);\n    }\n\n    _acceptChildren(children) {\n        children.passToken('Keyword', 'new');\n        children.skipNonCode();\n\n        this.callee = children.passExpression();\n        this.arguments = children.isEnd ? [] : acceptArgumentList(children);\n    }\n}\n"]}