{"version":3,"sources":["../../../src/elements/types/ExportNamedDeclaration.js"],"names":["ExportNamedDeclaration","childNodes","children","passToken","skipNonCode","declaration","specifiers","source","isNode","passStatement","isToken","push","passModuleSpecifier","moveNext","passNode","isEnd","assertEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,sB;;;AACjB,oCAAYC,UAAZ,EAAwB;AAAA;AAAA,qKACd,wBADc,EACYA,UADZ;AAEvB;;;;wCAEeC,Q,EAAU;AACtBA,qBAASC,SAAT,CAAmB,SAAnB,EAA8B,QAA9B;AACAD,qBAASE,WAAT;;AAEA,gBAAIC,cAAc,IAAlB;AACA,gBAAIC,aAAa,EAAjB;AACA,gBAAIC,SAAS,IAAb;;AAEA,gBAAIL,SAASM,MAAT,CAAgB,qBAAhB,KACAN,SAASM,MAAT,CAAgB,qBAAhB,CADA,IAEAN,SAASM,MAAT,CAAgB,kBAAhB,CAFJ,EAEyC;AACrCH,8BAAcH,SAASO,aAAT,EAAd;AACH,aAJD,MAIO;AACH;AACA,oBAAIP,SAASQ,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrCR,6BAASC,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAD,6BAASE,WAAT;AACA,2BAAO,CAACF,SAASQ,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAR,EAA6C;AACzCJ,mCAAWK,IAAX,CAAgBT,SAASU,mBAAT,EAAhB;AACAV,iCAASE,WAAT;AACA,4BAAIF,SAASQ,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrCR,qCAASW,QAAT;AACAX,qCAASE,WAAT;AACH;AACJ;AACDF,6BAASC,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACH,iBAZD,MAYO;AACH;AACAG,+BAAWK,IAAX,CAAgBT,SAASU,mBAAT,EAAhB;AACH;AACDV,yBAASE,WAAT;;AAEA,oBAAIF,SAASQ,OAAT,CAAiB,YAAjB,EAA+B,MAA/B,CAAJ,EAA4C;AACxCR,6BAASC,SAAT,CAAmB,YAAnB,EAAiC,MAAjC;AACAD,6BAASE,WAAT;AACAG,6BAASL,SAASY,QAAT,CAAkB,eAAlB,CAAT;AACA,wBAAI,CAACZ,SAASa,KAAd,EAAqB;AACjBb,iCAASE,WAAT;AACAF,iCAASC,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACH;AACJ,iBARD,MAQO,IAAI,CAACD,SAASa,KAAd,EAAqB;AACxBb,6BAASC,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACH;AACJ;;AAEDD,qBAASc,SAAT;;AAEA,iBAAKX,WAAL,GAAmBA,WAAnB;AACA,iBAAKC,UAAL,GAAkBA,UAAlB;AACA,iBAAKC,MAAL,GAAcA,MAAd;AACH;;;;;kBAvDgBP,sB","file":"ExportNamedDeclaration.js","sourcesContent":["import ModuleDeclaration from '../ModuleDeclaration';\n\nexport default class ExportNamedDeclaration extends ModuleDeclaration {\n    constructor(childNodes) {\n        super('ExportNamedDeclaration', childNodes);\n    }\n\n    _acceptChildren(children) {\n        children.passToken('Keyword', 'export');\n        children.skipNonCode();\n\n        let declaration = null;\n        let specifiers = [];\n        let source = null;\n\n        if (children.isNode('VariableDeclaration') ||\n            children.isNode('FunctionDeclaration') ||\n            children.isNode('ClassDeclaration')) {\n            declaration = children.passStatement();\n        } else {\n            // es2015 exports\n            if (children.isToken('Punctuator', '{')) {\n                children.passToken('Punctuator', '{');\n                children.skipNonCode();\n                while (!children.isToken('Punctuator', '}')) {\n                    specifiers.push(children.passModuleSpecifier());\n                    children.skipNonCode();\n                    if (children.isToken('Punctuator', ',')) {\n                        children.moveNext();\n                        children.skipNonCode();\n                    }\n                }\n                children.passToken('Punctuator', '}');\n            } else {\n                // es2016 export from\n                specifiers.push(children.passModuleSpecifier());\n            }\n            children.skipNonCode();\n\n            if (children.isToken('Identifier', 'from')) {\n                children.passToken('Identifier', 'from');\n                children.skipNonCode();\n                source = children.passNode('StringLiteral');\n                if (!children.isEnd) {\n                    children.skipNonCode();\n                    children.passToken('Punctuator', ';');\n                }\n            } else if (!children.isEnd) {\n                children.passToken('Punctuator', ';');\n            }\n        }\n\n        children.assertEnd();\n\n        this.declaration = declaration;\n        this.specifiers = specifiers;\n        this.source = source;\n    }\n}\n"]}