{"version":3,"sources":["../../../src/elements/types/FunctionExpression.js"],"names":["FunctionExpression","childNodes","_short","_generatorFromProperty","expression","isFunction","children","params","id","generator","async","short","isToken","skipNonCode","passToken","moveNext","isNode","passNode","body","passStatement","assertEnd","parentElement","type","_generator"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEqBA,kB;;;AAEjB;;AAEA,gCAAYC,UAAZ,EAAwB;AAAA;;AAAA,kKACd,oBADc,EACQA,UADR;;AAEpB,cAAKC,MAAL,GAAc,KAAd;AACA,cAAKC,sBAAL,GAA8B,KAA9B;AACA,cAAKC,UAAL,GAAkB,KAAlB;AACA,cAAKC,UAAL,GAAkB,IAAlB;AALoB;AAMvB;;;;wCAEeC,Q,EAAU;AACtB,gBAAIC,SAAS,EAAb;AACA,gBAAIC,KAAK,IAAT;AACA,gBAAIC,YAAY,KAAhB;AACA,gBAAIC,QAAQ,KAAZ;AACA,gBAAIC,QAAQ,KAAZ;;AAEA,gBAAIL,SAASM,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrCL,yBAAS,iCAAkBD,QAAlB,CAAT;AACAA,yBAASO,WAAT;AACH,aAHD,MAGO;AACH,oBAAIP,SAASM,OAAT,CAAiB,YAAjB,EAA+B,OAA/B,CAAJ,EAA6C;AACzCF,4BAAQ,IAAR;AACAJ,6BAASQ,SAAT,CAAmB,YAAnB,EAAiC,OAAjC;AACAR,6BAASO,WAAT;AACH;;AAEDP,yBAASQ,SAAT,CAAmB,SAAnB,EAA8B,UAA9B;AACAR,yBAASO,WAAT;;AAEA,oBAAIP,SAASM,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrCH,gCAAY,IAAZ;AACAH,6BAASS,QAAT;AACAT,6BAASO,WAAT;AACH;;AAED,oBAAIP,SAASU,MAAT,CAAgB,YAAhB,CAAJ,EAAmC;AAC/BR,yBAAKF,SAASW,QAAT,EAAL;AACAX,6BAASO,WAAT;AACH;;AAEDN,yBAAS,iCAAkBD,QAAlB,CAAT;AACAA,yBAASO,WAAT;AACH;;AAED,gBAAIK,OAAOZ,SAASa,aAAT,EAAX;;AAEAb,qBAASc,SAAT;;AAEA,iBAAKV,KAAL,GAAaA,KAAb;AACA,iBAAKF,EAAL,GAAUA,EAAV;AACA,iBAAKD,MAAL,GAAcA,MAAd;AACA,iBAAKW,IAAL,GAAYA,IAAZ;AACA,iBAAKT,SAAL,GAAiBA,SAAjB;AACA,iBAAKP,MAAL,GAAcS,KAAd;AACH;;;4CAEmBU,a,EAAe;AAC/B,gBAAIA,kBAAkBA,cAAcC,IAAd,KAAuB,UAAvB,IAAqCD,cAAcC,IAAd,KAAuB,aAA9E,CAAJ,EAAkG;AAC9F,qBAAKpB,MAAL,GAAc,IAAd;AACA,qBAAKC,sBAAL,GAA8BkB,cAAcE,UAA5C;AACH,aAHD,MAGO;AACH,qBAAKrB,MAAL,GAAc,KAAd;AACA,qBAAKC,sBAAL,GAA8B,KAA9B;AACH;AACD,iBAAKM,SAAL,GAAiB,KAAKP,MAAL,GAAc,KAAKC,sBAAnB,GAA4C,KAAKM,SAAlE;AACH;;;;;kBApEgBT,kB","file":"FunctionExpression.js","sourcesContent":["import Expression from '../Expression';\nimport getFunctionParams from './utils/getFunctionParams';\n\nexport default class FunctionExpression extends Expression {\n\n    // TODO: get params from Property in case of setter\n\n    constructor(childNodes) {\n        super('FunctionExpression', childNodes);\n        this._short = false;\n        this._generatorFromProperty = false;\n        this.expression = false;\n        this.isFunction = true;\n    }\n\n    _acceptChildren(children) {\n        let params = [];\n        let id = null;\n        let generator = false;\n        let async = false;\n        let short = false;\n\n        if (children.isToken('Punctuator', '(')) {\n            params = getFunctionParams(children);\n            children.skipNonCode();\n        } else {\n            if (children.isToken('Identifier', 'async')) {\n                async = true;\n                children.passToken('Identifier', 'async');\n                children.skipNonCode();\n            }\n\n            children.passToken('Keyword', 'function');\n            children.skipNonCode();\n\n            if (children.isToken('Punctuator', '*')) {\n                generator = true;\n                children.moveNext();\n                children.skipNonCode();\n            }\n\n            if (children.isNode('Identifier')) {\n                id = children.passNode();\n                children.skipNonCode();\n            }\n\n            params = getFunctionParams(children);\n            children.skipNonCode();\n        }\n\n        let body = children.passStatement();\n\n        children.assertEnd();\n\n        this.async = async;\n        this.id = id;\n        this.params = params;\n        this.body = body;\n        this.generator = generator;\n        this._short = short;\n    }\n\n    _onSetParentElement(parentElement) {\n        if (parentElement && (parentElement.type === 'Property' || parentElement.type === 'ClassMethod')) {\n            this._short = true;\n            this._generatorFromProperty = parentElement._generator;\n        } else {\n            this._short = false;\n            this._generatorFromProperty = false;\n        }\n        this.generator = this._short ? this._generatorFromProperty : this.generator;\n    }\n}\n"]}