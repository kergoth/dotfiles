{"version":3,"sources":["../../../src/elements/types/RestElement.js"],"names":["RestElement","childNodes","isPattern","children","passToken","skipNonCode","isNode","assertPattern","argument","currentElement","moveNext","assertEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,W;;;AAEjB;;AAEA,yBAAYC,UAAZ,EAAwB;AAAA;;AAAA,oJACd,aADc,EACCA,UADD;;AAEpB,cAAKC,SAAL,GAAiB,IAAjB;AAFoB;AAGvB;;;;wCAEeC,Q,EAAU;AACtBA,qBAASC,SAAT,CAAmB,YAAnB,EAAiC,KAAjC;;AAEAD,qBAASE,WAAT;;AAEA,gBAAI,CAACF,SAASG,MAAT,CAAgB,kBAAhB,CAAL,EAA0C;AACtCH,yBAASI,aAAT;AACH;;AAED,gBAAIC,WAAWL,SAASM,cAAxB;AACAN,qBAASO,QAAT;;AAEAP,qBAASQ,SAAT;;AAEA,iBAAKH,QAAL,GAAgBA,QAAhB;AACH;;;;;kBAxBgBR,W","file":"RestElement.js","sourcesContent":["import Node from '../Node';\n\nexport default class RestElement extends Node {\n\n    // TODO: Requires a function?\n\n    constructor(childNodes) {\n        super('RestElement', childNodes);\n        this.isPattern = true;\n    }\n\n    _acceptChildren(children) {\n        children.passToken('Punctuator', '...');\n\n        children.skipNonCode();\n\n        if (!children.isNode('MemberExpression')) {\n            children.assertPattern();\n        }\n\n        let argument = children.currentElement;\n        children.moveNext();\n\n        children.assertEnd();\n\n        this.argument = argument;\n    }\n}\n"]}