{"version":3,"sources":["../../../src/elements/types/TemplateElement.js"],"names":["TemplateElement","childNodes","children","templateToken","passToken","tail","value","cooked","raw","getSourceCode","assertEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,e;;;AACjB,6BAAYC,UAAZ,EAAwB;AAAA;AAAA,uJACd,iBADc,EACKA,UADL;AAEvB;;;;wCAEeC,Q,EAAU;AACtB,gBAAIC,gBAAgBD,SAASE,SAAT,CAAmB,UAAnB,CAApB;;AAEA,gBAAIC,OAAO,KAAX;AACA,gBAAIC,QAAQ;AACRC,wBAAQJ,cAAcG,KADd;AAERE,qBAAKL,cAAcM,aAAd;AAFG,aAAZ;;AAKAP,qBAASQ,SAAT;;AAEA,iBAAKL,IAAL,GAAYA,IAAZ;AACA,iBAAKC,KAAL,GAAaA,KAAb;AACH;;;;;kBAlBgBN,e","file":"TemplateElement.js","sourcesContent":["import Node from '../Node';\n\nexport default class TemplateElement extends Node {\n    constructor(childNodes) {\n        super('TemplateElement', childNodes);\n    }\n\n    _acceptChildren(children) {\n        let templateToken = children.passToken('Template');\n\n        let tail = false;\n        let value = {\n            cooked: templateToken.value,\n            raw: templateToken.getSourceCode(),\n        };\n\n        children.assertEnd();\n\n        this.tail = tail;\n        this.value = value;\n    }\n}\n"]}