{"version":3,"sources":["../../../src/elements/types/SwitchStatement.js"],"names":["SwitchStatement","childNodes","children","passToken","skipNonCode","discriminant","passExpression","cases","isToken","push","passNode","assertEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,e;;;AACjB,6BAAYC,UAAZ,EAAwB;AAAA;AAAA,uJACd,iBADc,EACKA,UADL;AAEvB;;;;wCAEeC,Q,EAAU;AACtBA,qBAASC,SAAT,CAAmB,SAAnB,EAA8B,QAA9B;AACAD,qBAASE,WAAT;;AAEAF,qBAASC,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAD,qBAASE,WAAT;;AAEA,gBAAIC,eAAeH,SAASI,cAAT,EAAnB;AACAJ,qBAASE,WAAT;;AAEAF,qBAASC,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAD,qBAASE,WAAT;;AAEAF,qBAASC,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAD,qBAASE,WAAT;;AAEA,gBAAIG,QAAQ,EAAZ;AACA,mBAAO,CAACL,SAASM,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAR,EAA6C;AACzCD,sBAAME,IAAN,CAAWP,SAASQ,QAAT,CAAkB,YAAlB,CAAX;AACAR,yBAASE,WAAT;AACH;;AAEDF,qBAASC,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAD,qBAASS,SAAT;;AAEA,iBAAKN,YAAL,GAAoBA,YAApB;AACA,iBAAKE,KAAL,GAAaA,KAAb;AACH;;;;;kBAhCgBP,e","file":"SwitchStatement.js","sourcesContent":["import Statement from '../Statement';\n\nexport default class SwitchStatement extends Statement {\n    constructor(childNodes) {\n        super('SwitchStatement', childNodes);\n    }\n\n    _acceptChildren(children) {\n        children.passToken('Keyword', 'switch');\n        children.skipNonCode();\n\n        children.passToken('Punctuator', '(');\n        children.skipNonCode();\n\n        let discriminant = children.passExpression();\n        children.skipNonCode();\n\n        children.passToken('Punctuator', ')');\n        children.skipNonCode();\n\n        children.passToken('Punctuator', '{');\n        children.skipNonCode();\n\n        let cases = [];\n        while (!children.isToken('Punctuator', '}')) {\n            cases.push(children.passNode('SwitchCase'));\n            children.skipNonCode();\n        }\n\n        children.passToken('Punctuator', '}');\n        children.assertEnd();\n\n        this.discriminant = discriminant;\n        this.cases = cases;\n    }\n}\n"]}