{"version":3,"sources":["../../../src/elements/types/DirectiveLiteral.js"],"names":["DirectiveLiteral","childNodes","children","assertToken","value","currentElement","rawValue","getSourceCode","moveNext","assertEnd","raw"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,gB;;;AACjB,8BAAYC,UAAZ,EAAwB;AAAA;AAAA,yJACd,kBADc,EACMA,UADN;AAEvB;;;;wCAEeC,Q,EAAU;AACtBA,qBAASC,WAAT;AACA,gBAAIC,QAAQF,SAASG,cAAT,CAAwBD,KAApC;AACA,gBAAIE,WAAWJ,SAASG,cAAT,CAAwBE,aAAxB,EAAf;;AAEAL,qBAASM,QAAT;AACAN,qBAASO,SAAT;;AAEA,iBAAKL,KAAL,GAAaA,KAAb;AACA,iBAAKM,GAAL,GAAWJ,QAAX;AACH;;;;;kBAfgBN,gB","file":"DirectiveLiteral.js","sourcesContent":["import Expression from '../Expression';\n\nexport default class DirectiveLiteral extends Expression {\n    constructor(childNodes) {\n        super('DirectiveLiteral', childNodes);\n    }\n\n    _acceptChildren(children) {\n        children.assertToken();\n        let value = children.currentElement.value;\n        let rawValue = children.currentElement.getSourceCode();\n\n        children.moveNext();\n        children.assertEnd();\n\n        this.value = value;\n        this.raw = rawValue;\n    }\n}\n"]}