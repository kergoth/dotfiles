{"version":3,"sources":["../../../src/elements/types/Directive.js"],"names":["Directive","childNodes","children","value","passExpression","skipNonCode","skipSemicolon","assertEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,S;;;AACjB,uBAAYC,UAAZ,EAAwB;AAAA;AAAA,2IACd,WADc,EACDA,UADC;AAEvB;;;;wCAEeC,Q,EAAU;AACtB,gBAAIC,QAAQD,SAASE,cAAT,EAAZ;AACAF,qBAASG,WAAT;AACAH,qBAASI,aAAT;AACAJ,qBAASK,SAAT;AACA,iBAAKJ,KAAL,GAAaA,KAAb;AACH;;;;;kBAXgBH,S","file":"Directive.js","sourcesContent":["import Statement from '../Statement';\n\nexport default class Directive extends Statement {\n    constructor(childNodes) {\n        super('Directive', childNodes);\n    }\n\n    _acceptChildren(children) {\n        let value = children.passExpression();\n        children.skipNonCode();\n        children.skipSemicolon();\n        children.assertEnd();\n        this.value = value;\n    }\n}\n"]}