{"version":3,"sources":["../../../src/elements/types/ClassExpression.js"],"names":["ClassExpression","childNodes","children","passToken","skipNonCode","id","isToken","isNode","passNode","superClass","passExpression","body","assertEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,e;;;AACjB,6BAAYC,UAAZ,EAAwB;AAAA;AAAA,uJACd,iBADc,EACKA,UADL;AAEvB;;;;wCAEeC,Q,EAAU;AACtBA,qBAASC,SAAT,CAAmB,SAAnB,EAA8B,OAA9B;AACAD,qBAASE,WAAT;;AAEA,gBAAIC,KAAK,IAAT;AACA,gBAAI,CAACH,SAASI,OAAT,CAAiB,SAAjB,EAA4B,SAA5B,CAAD,IAA2C,CAACJ,SAASK,MAAT,CAAgB,WAAhB,CAAhD,EAA8E;AAC1EF,qBAAKH,SAASM,QAAT,CAAkB,YAAlB,CAAL;AACAN,yBAASE,WAAT;AACH;;AAED,gBAAIK,aAAa,IAAjB;AACA,gBAAIP,SAASI,OAAT,CAAiB,SAAjB,EAA4B,SAA5B,CAAJ,EAA4C;AACxCJ,yBAASC,SAAT,CAAmB,SAAnB,EAA8B,SAA9B;AACAD,yBAASE,WAAT;AACAK,6BAAaP,SAASQ,cAAT,EAAb;AACAR,yBAASE,WAAT;AACH;;AAED,gBAAIO,OAAOT,SAASM,QAAT,CAAkB,WAAlB,CAAX;AACAN,qBAASU,SAAT;;AAEA,iBAAKP,EAAL,GAAUA,EAAV;AACA,iBAAKI,UAAL,GAAkBA,UAAlB;AACA,iBAAKE,IAAL,GAAYA,IAAZ;AACH;;;;;kBA7BgBX,e","file":"ClassExpression.js","sourcesContent":["import Expression from '../Expression';\n\nexport default class ClassExpression extends Expression {\n    constructor(childNodes) {\n        super('ClassExpression', childNodes);\n    }\n\n    _acceptChildren(children) {\n        children.passToken('Keyword', 'class');\n        children.skipNonCode();\n\n        let id = null;\n        if (!children.isToken('Keyword', 'extends') && !children.isNode('ClassBody')) {\n            id = children.passNode('Identifier');\n            children.skipNonCode();\n        }\n\n        let superClass = null;\n        if (children.isToken('Keyword', 'extends')) {\n            children.passToken('Keyword', 'extends');\n            children.skipNonCode();\n            superClass = children.passExpression();\n            children.skipNonCode();\n        }\n\n        let body = children.passNode('ClassBody');\n        children.assertEnd();\n\n        this.id = id;\n        this.superClass = superClass;\n        this.body = body;\n    }\n}\n"]}