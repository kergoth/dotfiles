{"version":3,"sources":["../../../src/elements/types/ArrayPattern.js"],"names":["ArrayPattern","childNodes","isPattern","isAssignable","children","elements","passToken","skipNonCode","isToken","push","moveNext","isNode","assertPattern","currentElement","assertEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,Y;;;AACjB,0BAAYC,UAAZ,EAAwB;AAAA;;AAAA,sJACd,cADc,EACEA,UADF;;AAEpB,cAAKC,SAAL,GAAiB,IAAjB;AACA,cAAKC,YAAL,GAAoB,IAApB;AAHoB;AAIvB;;;;wCAEeC,Q,EAAU;AACtB,gBAAIC,WAAW,EAAf;AACAD,qBAASE,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAF,qBAASG,WAAT;AACA,mBAAO,CAACH,SAASI,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAR,EAA6C;AACzC,oBAAIJ,SAASI,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrCH,6BAASI,IAAT,CAAc,IAAd;AACAL,6BAASM,QAAT;AACAN,6BAASG,WAAT;AACH,iBAJD,MAIO;AACH,wBAAI,CAACH,SAASO,MAAT,CAAgB,kBAAhB,CAAL,EAA0C;AACtCP,iCAASQ,aAAT;AACH;AACDP,6BAASI,IAAT,CAAcL,SAASS,cAAvB;AACAT,6BAASM,QAAT;AACAN,6BAASG,WAAT;AACA,wBAAIH,SAASI,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrCJ,iCAASM,QAAT;AACAN,iCAASG,WAAT;AACH;AACJ;AACJ;AACDH,qBAASE,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAF,qBAASU,SAAT;AACA,iBAAKT,QAAL,GAAgBA,QAAhB;AACH;;;;;kBAhCgBL,Y","file":"ArrayPattern.js","sourcesContent":["import Node from '../Node';\n\nexport default class ArrayPattern extends Node {\n    constructor(childNodes) {\n        super('ArrayPattern', childNodes);\n        this.isPattern = true;\n        this.isAssignable = true;\n    }\n\n    _acceptChildren(children) {\n        let elements = [];\n        children.passToken('Punctuator', '[');\n        children.skipNonCode();\n        while (!children.isToken('Punctuator', ']')) {\n            if (children.isToken('Punctuator', ',')) {\n                elements.push(null);\n                children.moveNext();\n                children.skipNonCode();\n            } else {\n                if (!children.isNode('MemberExpression')) {\n                    children.assertPattern();\n                }\n                elements.push(children.currentElement);\n                children.moveNext();\n                children.skipNonCode();\n                if (children.isToken('Punctuator', ',')) {\n                    children.moveNext();\n                    children.skipNonCode();\n                }\n            }\n        }\n        children.passToken('Punctuator', ']');\n        children.assertEnd();\n        this.elements = elements;\n    }\n}\n"]}