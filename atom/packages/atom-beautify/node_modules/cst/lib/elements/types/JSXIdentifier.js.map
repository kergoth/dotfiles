{"version":3,"sources":["../../../src/elements/types/JSXIdentifier.js"],"names":["JSXIdentifier","childNodes","isPattern","isAssignable","children","name","passToken","value","assertEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,a;;;AACjB,2BAAYC,UAAZ,EAAwB;AAAA;;AAAA,wJACd,eADc,EACGA,UADH;;AAEpB,cAAKC,SAAL,GAAiB,IAAjB;AACA,cAAKC,YAAL,GAAoB,IAApB;AAHoB;AAIvB;;;;wCAEeC,Q,EAAU;AACtB,gBAAIC,OAAOD,SAASE,SAAT,CAAmB,eAAnB,EAAoCC,KAA/C;AACAH,qBAASI,SAAT;;AAEA,iBAAKH,IAAL,GAAYA,IAAZ;AACH;;;;;kBAZgBL,a","file":"JSXIdentifier.js","sourcesContent":["import Expression from '../Expression';\n\nexport default class JSXIdentifier extends Expression {\n    constructor(childNodes) {\n        super('JSXIdentifier', childNodes);\n        this.isPattern = true;\n        this.isAssignable = true;\n    }\n\n    _acceptChildren(children) {\n        let name = children.passToken('JSXIdentifier').value;\n        children.assertEnd();\n\n        this.name = name;\n    }\n}\n"]}