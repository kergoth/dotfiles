{"version":3,"sources":["../../../src/elements/types/ExpressionStatement.js"],"names":["ExpressionStatement","childNodes","children","expression","passExpression","skipNonCode","skipSemicolon","assertEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,mB;;;AACjB,iCAAYC,UAAZ,EAAwB;AAAA;AAAA,+JACd,qBADc,EACSA,UADT;AAEvB;;;;wCAEeC,Q,EAAU;AACtB,gBAAIC,aAAaD,SAASE,cAAT,EAAjB;AACAF,qBAASG,WAAT;AACAH,qBAASI,aAAT;AACAJ,qBAASK,SAAT;AACA,iBAAKJ,UAAL,GAAkBA,UAAlB;AACH;;;;;kBAXgBH,mB","file":"ExpressionStatement.js","sourcesContent":["import Statement from '../Statement';\n\nexport default class ExpressionStatement extends Statement {\n    constructor(childNodes) {\n        super('ExpressionStatement', childNodes);\n    }\n\n    _acceptChildren(children) {\n        let expression = children.passExpression();\n        children.skipNonCode();\n        children.skipSemicolon();\n        children.assertEnd();\n        this.expression = expression;\n    }\n}\n"]}