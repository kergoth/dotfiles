{"version":3,"sources":["../../../src/elements/types/JSXAttribute.js"],"names":["JSXAttribute","childNodes","children","value","name","passOneOfNode","isEnd","skipNonCode","passToken","assertEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,Y;;;AACjB,0BAAYC,UAAZ,EAAwB;AAAA;AAAA,iJACd,cADc,EACEA,UADF;AAEvB;;;;wCAEeC,Q,EAAU;AACtB,gBAAIC,QAAQ,IAAZ;AACA,gBAAIC,OAAOF,SAASG,aAAT,CAAuB,CAAC,eAAD,EAAkB,mBAAlB,CAAvB,CAAX;;AAEA,gBAAI,CAACH,SAASI,KAAd,EAAqB;AACjBJ,yBAASK,WAAT;AACAL,yBAASM,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAN,yBAASK,WAAT;AACAJ,wBAAQD,SAASG,aAAT,CAAuB,CAAC,eAAD,EAAkB,wBAAlB,EAA4C,YAA5C,CAAvB,CAAR;AACH;AACDH,qBAASO,SAAT;;AAEA,iBAAKL,IAAL,GAAYA,IAAZ;AACA,iBAAKD,KAAL,GAAaA,KAAb;AACH;;;;;kBAnBgBH,Y","file":"JSXAttribute.js","sourcesContent":["import Node from '../Node';\n\nexport default class JSXAttribute extends Node {\n    constructor(childNodes) {\n        super('JSXAttribute', childNodes);\n    }\n\n    _acceptChildren(children) {\n        let value = null;\n        let name = children.passOneOfNode(['JSXIdentifier', 'JSXNamespacedName']);\n\n        if (!children.isEnd) {\n            children.skipNonCode();\n            children.passToken('Punctuator', '=');\n            children.skipNonCode();\n            value = children.passOneOfNode(['StringLiteral', 'JSXExpressionContainer', 'JSXElement']);\n        }\n        children.assertEnd();\n\n        this.name = name;\n        this.value = value;\n    }\n}\n"]}