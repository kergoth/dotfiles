{"version":3,"sources":["../../../src/elements/types/LogicalExpression.js"],"names":["logicalOperators","LogicalExpression","childNodes","children","left","passExpression","skipNonCode","operator","passToken","value","right","assertEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA,IAAMA,mBAAmB;AACrB,UAAM,IADe;AAErB,UAAM;AAFe,CAAzB;;IAKqBC,iB;;;AAEjB;;AAEA,+BAAYC,UAAZ,EAAwB;AAAA;AAAA,2JACd,mBADc,EACOA,UADP;AAEvB;;;;wCAEeC,Q,EAAU;AACtB,gBAAIC,OAAOD,SAASE,cAAT,EAAX;AACAF,qBAASG,WAAT;;AAEA,gBAAIC,WAAWJ,SAASK,SAAT,CAAmB,YAAnB,EAAiCR,gBAAjC,EAAmDS,KAAlE;AACAN,qBAASG,WAAT;;AAEA,gBAAII,QAAQP,SAASE,cAAT,EAAZ;AACAF,qBAASQ,SAAT;;AAEA,iBAAKP,IAAL,GAAYA,IAAZ;AACA,iBAAKG,QAAL,GAAgBA,QAAhB;AACA,iBAAKG,KAAL,GAAaA,KAAb;AACH;;;;;kBArBgBT,iB","file":"LogicalExpression.js","sourcesContent":["import Expression from '../Expression';\n\nconst logicalOperators = {\n    '||': true,\n    '&&': true,\n};\n\nexport default class LogicalExpression extends Expression {\n\n    // TODO: Should respect operator precedence: putting \"a + b\" before \" * b\" without parens should raise an error.\n\n    constructor(childNodes) {\n        super('LogicalExpression', childNodes);\n    }\n\n    _acceptChildren(children) {\n        let left = children.passExpression();\n        children.skipNonCode();\n\n        let operator = children.passToken('Punctuator', logicalOperators).value;\n        children.skipNonCode();\n\n        let right = children.passExpression();\n        children.assertEnd();\n\n        this.left = left;\n        this.operator = operator;\n        this.right = right;\n    }\n}\n"]}