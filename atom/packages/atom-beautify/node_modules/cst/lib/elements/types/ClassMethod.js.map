{"version":3,"sources":["../../../src/elements/types/ClassMethod.js"],"names":["getterAndSetter","get","set","ClassMethod","childNodes","isFunction","children","key","computed","kind","staticMember","generator","async","params","isToken","passToken","skipNonCode","currentElement","value","isNode","passNode","type","name","passExpression","moveNext","body","passStatement","assertEnd","static"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,kBAAkB;AACpBC,SAAK,IADe;AAEpBC,SAAK;AAFe,CAAxB;;IAKqBC,W;;;AACjB,yBAAYC,UAAZ,EAAwB;AAAA;;AAAA,oJACd,aADc,EACCA,UADD;;AAEpB,cAAKC,UAAL,GAAkB,IAAlB;AAFoB;AAGvB;;;;wCAEeC,Q,EAAU;AACtB,gBAAIC,YAAJ;AACA,gBAAIC,iBAAJ;AACA,gBAAIC,aAAJ;AACA,gBAAIC,eAAe,KAAnB;AACA,gBAAIC,YAAY,KAAhB;AACA,gBAAIC,QAAQ,KAAZ;AACA,gBAAIC,eAAJ;;AAEA,gBAAIP,SAASQ,OAAT,CAAiB,YAAjB,EAA+B,QAA/B,CAAJ,EAA8C;AAC1CJ,+BAAe,IAAf;AACAJ,yBAASS,SAAT;AACAT,yBAASU,WAAT;AACH;;AAED,gBAAIV,SAASQ,OAAT,CAAiB,YAAjB,EAA+B,OAA/B,CAAJ,EAA6C;AACzCF,wBAAQ,IAAR;AACAN,yBAASS,SAAT;AACAT,yBAASU,WAAT;AACH;;AAED,gBAAIV,SAASQ,OAAT,CAAiB,YAAjB,EAA+Bd,eAA/B,CAAJ,EAAqD;AACjDS,uBAAOH,SAASW,cAAT,CAAwBC,KAA/B;AACAZ,yBAASS,SAAT;AACAT,yBAASU,WAAT;AACH,aAJD,MAIO;AACHP,uBAAO,QAAP;AACA,oBAAIH,SAASQ,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrCH,gCAAY,IAAZ;AACAL,6BAASS,SAAT;AACAT,6BAASU,WAAT;AACH;AACJ;;AAED,gBAAIV,SAASa,MAAT,CAAgB,YAAhB,CAAJ,EAAmC;AAC/BX,2BAAW,KAAX;AACAD,sBAAMD,SAASc,QAAT,EAAN;AACA,oBAAIX,SAAS,QAAT,IAAqBF,IAAIc,IAAJ,KAAa,YAAlC,IAAkDd,IAAIe,IAAJ,KAAa,aAAnE,EAAkF;AAC9Eb,2BAAO,aAAP;AACH;AACDH,yBAASU,WAAT;AACH,aAPD,MAOO;AACHR,2BAAW,IAAX;AACAF,yBAASS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAT,yBAASU,WAAT;AACAT,sBAAMD,SAASiB,cAAT,EAAN;AACAjB,yBAASU,WAAT;AACAV,yBAASS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAT,yBAASU,WAAT;AACH;;AAED,gBAAIV,SAASQ,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrCH,4BAAY,IAAZ;AACAL,yBAASkB,QAAT;AACAlB,yBAASU,WAAT;AACH;;AAED,gBAAIV,SAASa,MAAT,CAAgB,YAAhB,CAAJ,EAAmC;AAC/Bb,yBAASc,QAAT;AACAd,yBAASU,WAAT;AACH;;AAEDH,qBAAS,iCAAkBP,QAAlB,CAAT;AACAA,qBAASU,WAAT;;AAEA,gBAAIS,OAAOnB,SAASoB,aAAT,EAAX;;AAEApB,qBAASqB,SAAT;;AAEA,iBAAKd,MAAL,GAAcA,MAAd;AACA,iBAAKD,KAAL,GAAaA,KAAb;AACA,iBAAKa,IAAL,GAAYA,IAAZ;AACA,iBAAKd,SAAL,GAAiBA,SAAjB;AACA,iBAAKF,IAAL,GAAYA,IAAZ;AACA,iBAAKF,GAAL,GAAWA,GAAX;AACA,iBAAKC,QAAL,GAAgBA,QAAhB;AACA,iBAAKoB,MAAL,GAAclB,YAAd;AACH;;;;;kBAnFgBP,W","file":"ClassMethod.js","sourcesContent":["import Node from '../Node';\nimport getFunctionParams from './utils/getFunctionParams';\n\nconst getterAndSetter = {\n    get: true,\n    set: true,\n};\n\nexport default class ClassMethod extends Node {\n    constructor(childNodes) {\n        super('ClassMethod', childNodes);\n        this.isFunction = true;\n    }\n\n    _acceptChildren(children) {\n        let key;\n        let computed;\n        let kind;\n        let staticMember = false;\n        let generator = false;\n        let async = false;\n        let params;\n\n        if (children.isToken('Identifier', 'static')) {\n            staticMember = true;\n            children.passToken();\n            children.skipNonCode();\n        }\n\n        if (children.isToken('Identifier', 'async')) {\n            async = true;\n            children.passToken();\n            children.skipNonCode();\n        }\n\n        if (children.isToken('Identifier', getterAndSetter)) {\n            kind = children.currentElement.value;\n            children.passToken();\n            children.skipNonCode();\n        } else {\n            kind = 'method';\n            if (children.isToken('Punctuator', '*')) {\n                generator = true;\n                children.passToken();\n                children.skipNonCode();\n            }\n        }\n\n        if (children.isNode('Identifier')) {\n            computed = false;\n            key = children.passNode();\n            if (kind === 'method' && key.type === 'Identifier' && key.name === 'constructor') {\n                kind = 'constructor';\n            }\n            children.skipNonCode();\n        } else {\n            computed = true;\n            children.passToken('Punctuator', '[');\n            children.skipNonCode();\n            key = children.passExpression();\n            children.skipNonCode();\n            children.passToken('Punctuator', ']');\n            children.skipNonCode();\n        }\n\n        if (children.isToken('Punctuator', '*')) {\n            generator = true;\n            children.moveNext();\n            children.skipNonCode();\n        }\n\n        if (children.isNode('Identifier')) {\n            children.passNode();\n            children.skipNonCode();\n        }\n\n        params = getFunctionParams(children);\n        children.skipNonCode();\n\n        let body = children.passStatement();\n\n        children.assertEnd();\n\n        this.params = params;\n        this.async = async;\n        this.body = body;\n        this.generator = generator;\n        this.kind = kind;\n        this.key = key;\n        this.computed = computed;\n        this.static = staticMember;\n    }\n}\n"]}