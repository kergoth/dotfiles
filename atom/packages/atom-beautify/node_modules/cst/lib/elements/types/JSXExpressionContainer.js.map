{"version":3,"sources":["../../../src/elements/types/JSXExpressionContainer.js"],"names":["JSXExpressionContainer","childNodes","children","passToken","skipNonCode","expression","isToken","passExpression","assertEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEqBA,sB;;;AACjB,oCAAYC,UAAZ,EAAwB;AAAA;AAAA,qKACd,wBADc,EACYA,UADZ;AAEvB;;;;wCAEeC,Q,EAAU;AACtBA,qBAASC,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAD,qBAASE,WAAT;;AAEA,gBAAIC,mBAAJ;;AAEA;AACA,gBAAIH,SAASI,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrCD,6BAAa,kCAAb;AACH,aAFD,MAEO;AACH;AACAA,6BAAaH,SAASK,cAAT,EAAb;AACAL,yBAASE,WAAT;AACH;;AAEDF,qBAASC,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAD,qBAASM,SAAT;;AAEA,iBAAKH,UAAL,GAAkBA,UAAlB;AACH;;;;;kBAxBgBL,sB","file":"JSXExpressionContainer.js","sourcesContent":["import Expression from '../Expression';\nimport JSXEmptyExpression from './JSXEmptyExpression';\n\nexport default class JSXExpressionContainer extends Expression {\n    constructor(childNodes) {\n        super('JSXExpressionContainer', childNodes);\n    }\n\n    _acceptChildren(children) {\n        children.passToken('Punctuator', '{');\n        children.skipNonCode();\n\n        let expression;\n\n        // JSXEmptyExpression\n        if (children.isToken('Punctuator', '}')) {\n            expression = new JSXEmptyExpression();\n        } else {\n            // Expression\n            expression = children.passExpression();\n            children.skipNonCode();\n        }\n\n        children.passToken('Punctuator', '}');\n        children.assertEnd();\n\n        this.expression = expression;\n    }\n}\n"]}