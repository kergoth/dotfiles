{"version":3,"sources":["../../../src/elements/types/YieldExpression.js"],"names":["YieldExpression","childNodes","children","passToken","argument","delegate","isEnd","skipNonCode","isToken","passExpression","assertEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,e;;;AAEjB;;AAEA,6BAAYC,UAAZ,EAAwB;AAAA;AAAA,uJACd,iBADc,EACKA,UADL;AAEvB;;;;wCAEeC,Q,EAAU;AACtBA,qBAASC,SAAT,CAAmB,SAAnB,EAA8B,OAA9B;;AAEA,gBAAIC,WAAW,IAAf;AACA,gBAAIC,WAAW,KAAf;;AAEA,gBAAI,CAACH,SAASI,KAAd,EAAqB;AACjBJ,yBAASK,WAAT;;AAEA,oBAAIL,SAASM,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrCN,6BAASC,SAAT;AACAD,6BAASK,WAAT;AACAF,+BAAW,IAAX;AACH;;AAEDD,2BAAWF,SAASO,cAAT,EAAX;AACH;;AAEDP,qBAASQ,SAAT;;AAEA,iBAAKN,QAAL,GAAgBA,QAAhB;AACA,iBAAKC,QAAL,GAAgBA,QAAhB;AACH;;;;;kBA9BgBL,e","file":"YieldExpression.js","sourcesContent":["import Expression from '../Expression';\n\nexport default class YieldExpression extends Expression {\n\n    // TODO: Requires a generator function.\n\n    constructor(childNodes) {\n        super('YieldExpression', childNodes);\n    }\n\n    _acceptChildren(children) {\n        children.passToken('Keyword', 'yield');\n\n        let argument = null;\n        let delegate = false;\n\n        if (!children.isEnd) {\n            children.skipNonCode();\n\n            if (children.isToken('Punctuator', '*')) {\n                children.passToken();\n                children.skipNonCode();\n                delegate = true;\n            }\n\n            argument = children.passExpression();\n        }\n\n        children.assertEnd();\n\n        this.argument = argument;\n        this.delegate = delegate;\n    }\n}\n"]}