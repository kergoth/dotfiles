{"version":3,"sources":["../../../src/elements/types/TaggedTemplateExpression.js"],"names":["TaggedTemplateExpression","childNodes","children","tag","passExpression","skipNonCode","quasi","passNode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,wB;;;AACjB,sCAAYC,UAAZ,EAAwB;AAAA;AAAA,yKACd,0BADc,EACcA,UADd;AAEvB;;;;wCAEeC,Q,EAAU;AACtB,gBAAIC,MAAMD,SAASE,cAAT,EAAV;AACAF,qBAASG,WAAT;AACA,gBAAIC,QAAQJ,SAASK,QAAT,CAAkB,iBAAlB,CAAZ;;AAEA,iBAAKJ,GAAL,GAAWA,GAAX;AACA,iBAAKG,KAAL,GAAaA,KAAb;AACH;;;;;kBAZgBN,wB","file":"TaggedTemplateExpression.js","sourcesContent":["import Expression from '../Expression';\n\nexport default class TaggedTemplateExpression extends Expression {\n    constructor(childNodes) {\n        super('TaggedTemplateExpression', childNodes);\n    }\n\n    _acceptChildren(children) {\n        let tag = children.passExpression();\n        children.skipNonCode();\n        let quasi = children.passNode('TemplateLiteral');\n\n        this.tag = tag;\n        this.quasi = quasi;\n    }\n}\n"]}