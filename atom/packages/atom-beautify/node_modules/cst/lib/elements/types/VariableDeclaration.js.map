{"version":3,"sources":["../../../src/elements/types/VariableDeclaration.js"],"names":["validKinds","var","let","const","VariableDeclaration","childNodes","children","kind","passToken","value","skipNonCode","declarations","push","passNode","isToken","skipSemicolon","assertEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA,IAAIA,aAAa;AACbC,SAAK,IADQ;AAEbC,SAAK,IAFQ;AAGbC,WAAO;AAHM,CAAjB;;IAMqBC,mB;;;AAEjB;;AAEA,iCAAYC,UAAZ,EAAwB;AAAA;AAAA,+JACd,qBADc,EACSA,UADT;AAEvB;;;;wCAEeC,Q,EAAU;AACtB,gBAAIC,OAAOD,SAASE,SAAT,CAAmB,SAAnB,EAA8BR,UAA9B,EAA0CS,KAArD;AACAH,qBAASI,WAAT;;AAEA,gBAAIC,eAAe,EAAnB;;AAEAA,yBAAaC,IAAb,CAAkBN,SAASO,QAAT,CAAkB,oBAAlB,CAAlB;AACAP,qBAASI,WAAT;;AAEA,mBAAOJ,SAASQ,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAP,EAA4C;AACxCR,yBAASE,SAAT;AACAF,yBAASI,WAAT;AACAC,6BAAaC,IAAb,CAAkBN,SAASO,QAAT,CAAkB,oBAAlB,CAAlB;AACAP,yBAASI,WAAT;AACH;;AAEDJ,qBAASS,aAAT;AACAT,qBAASU,SAAT;;AAEA,iBAAKT,IAAL,GAAYA,IAAZ;AACA,iBAAKI,YAAL,GAAoBA,YAApB;AACH;;;;;kBA7BgBP,mB","file":"VariableDeclaration.js","sourcesContent":["import Statement from '../Statement';\n\nlet validKinds = {\n    var: true,\n    let: true,\n    const: true,\n};\n\nexport default class VariableDeclaration extends Statement {\n\n    // TODO: Can only have 1 declarator inside for ... in.\n\n    constructor(childNodes) {\n        super('VariableDeclaration', childNodes);\n    }\n\n    _acceptChildren(children) {\n        let kind = children.passToken('Keyword', validKinds).value;\n        children.skipNonCode();\n\n        let declarations = [];\n\n        declarations.push(children.passNode('VariableDeclarator'));\n        children.skipNonCode();\n\n        while (children.isToken('Punctuator', ',')) {\n            children.passToken();\n            children.skipNonCode();\n            declarations.push(children.passNode('VariableDeclarator'));\n            children.skipNonCode();\n        }\n\n        children.skipSemicolon();\n        children.assertEnd();\n\n        this.kind = kind;\n        this.declarations = declarations;\n    }\n}\n"]}