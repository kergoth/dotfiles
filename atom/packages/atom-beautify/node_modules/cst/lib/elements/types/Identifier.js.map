{"version":3,"sources":["../../../src/elements/types/Identifier.js"],"names":["Identifier","childNodes","isPattern","isAssignable","children","name","assertToken","currentElement","type","value","_sourceCode","passToken","assertEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,U;;;AACjB,wBAAYC,UAAZ,EAAwB;AAAA;;AAAA,kJACd,YADc,EACAA,UADA;;AAEpB,cAAKC,SAAL,GAAiB,IAAjB;AACA,cAAKC,YAAL,GAAoB,IAApB;AAHoB;AAIvB;;;;wCAEeC,Q,EAAU;AACtB,gBAAIC,aAAJ;;AAEAD,qBAASE,WAAT;;AAEA;AACA,oBAAQF,SAASG,cAAT,CAAwBC,IAAhC;AACI,qBAAK,YAAL;AACIH,2BAAOD,SAASG,cAAT,CAAwBE,KAA/B;AACA;AACJ,qBAAK,SAAL;AACA,qBAAK,MAAL;AACIJ,2BAAOD,SAASG,cAAT,CAAwBG,WAA/B;AACA;AACJ;AACIN,6BAASE,WAAT,CAAqB,YAArB;AATR;AAWAF,qBAASO,SAAT;;AAEAP,qBAASQ,SAAT;AACA,iBAAKP,IAAL,GAAYA,IAAZ;AACH;;;;;kBA5BgBL,U","file":"Identifier.js","sourcesContent":["import Expression from '../Expression';\n\nexport default class Identifier extends Expression {\n    constructor(childNodes) {\n        super('Identifier', childNodes);\n        this.isPattern = true;\n        this.isAssignable = true;\n    }\n\n    _acceptChildren(children) {\n        let name;\n\n        children.assertToken();\n\n        // @see https://github.com/babel/babylon/issues/18\n        switch (children.currentElement.type) {\n            case 'Identifier':\n                name = children.currentElement.value;\n                break;\n            case 'Boolean':\n            case 'Null':\n                name = children.currentElement._sourceCode;\n                break;\n            default:\n                children.assertToken('Identifier');\n        }\n        children.passToken();\n\n        children.assertEnd();\n        this.name = name;\n    }\n}\n"]}