{"version":3,"sources":["../../../src/elements/types/MemberExpression.js"],"names":["MemberExpression","childNodes","isAssignable","children","object","passExpressionOrSuper","skipNonCode","property","computed","isToken","passToken","passNode","passExpression","assertEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEqBA,gB;;;AACjB,8BAAYC,UAAZ,EAAwB;AAAA;;AAAA,8JACd,kBADc,EACMA,UADN;;AAEpB,cAAKC,YAAL,GAAoB,IAApB;AAFoB;AAGvB;;;;wCAEeC,Q,EAAU;AACtB,gBAAIC,SAASD,SAASE,qBAAT,EAAb;AACAF,qBAASG,WAAT;;AAEA,gBAAIC,iBAAJ;AACA,gBAAIC,WAAW,KAAf;AACA,gBAAIL,SAASM,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrCN,yBAASO,SAAT;AACAP,yBAASG,WAAT;;AAEAC,2BAAWJ,SAASQ,QAAT,CAAkB,YAAlB,CAAX;AACAH,2BAAW,KAAX;AACH,aAND,MAMO;AACHL,yBAASO,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAP,yBAASG,WAAT;AACAC,2BAAWJ,SAASS,cAAT,EAAX;AACAT,yBAASG,WAAT;AACAH,yBAASO,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAF,2BAAW,IAAX;AACH;;AAEDL,qBAASU,SAAT;;AAEA,iBAAKT,MAAL,GAAcA,MAAd;AACA,iBAAKG,QAAL,GAAgBA,QAAhB;AACA,iBAAKC,QAAL,GAAgBA,QAAhB;AACH;;;;;kBAhCgBR,gB","file":"MemberExpression.js","sourcesContent":["import Expression from '../Expression';\n\nexport default class MemberExpression extends Expression {\n    constructor(childNodes) {\n        super('MemberExpression', childNodes);\n        this.isAssignable = true;\n    }\n\n    _acceptChildren(children) {\n        let object = children.passExpressionOrSuper();\n        children.skipNonCode();\n\n        let property;\n        let computed = false;\n        if (children.isToken('Punctuator', '.')) {\n            children.passToken();\n            children.skipNonCode();\n\n            property = children.passNode('Identifier');\n            computed = false;\n        } else {\n            children.passToken('Punctuator', '[');\n            children.skipNonCode();\n            property = children.passExpression();\n            children.skipNonCode();\n            children.passToken('Punctuator', ']');\n            computed = true;\n        }\n\n        children.assertEnd();\n\n        this.object = object;\n        this.property = property;\n        this.computed = computed;\n    }\n}\n"]}