{"version":3,"sources":["../../../src/elements/types/JSXOpeningElement.js"],"names":["JSXOpeningElement","childNodes","children","attributes","selfClosing","passToken","skipNonCode","name","passOneOfNode","isNode","push","passNode","isToken","assertEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA;IACqBA,iB;;;AACjB,+BAAYC,UAAZ,EAAwB;AAAA;AAAA,2JACd,mBADc,EACOA,UADP;AAEvB;;;;wCAEeC,Q,EAAU;AACtB,gBAAIC,aAAa,EAAjB;AACA,gBAAIC,cAAc,KAAlB;;AAEAF,qBAASG,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAH,qBAASI,WAAT;AACA,gBAAIC,OAAOL,SAASM,aAAT,CAAuB,CAAC,eAAD,EAAkB,qBAAlB,EAAyC,mBAAzC,CAAvB,CAAX;AACAN,qBAASI,WAAT;;AAEA,mBAAO,IAAP,EAAa;AACT,oBAAIJ,SAASO,MAAT,CAAgB,cAAhB,CAAJ,EAAqC;AACjCP,6BAASI,WAAT;AACAH,+BAAWO,IAAX,CAAgBR,SAASS,QAAT,CAAkB,cAAlB,CAAhB;AACAT,6BAASI,WAAT;AACH,iBAJD,MAIO,IAAIJ,SAASO,MAAT,CAAgB,oBAAhB,CAAJ,EAA2C;AAC9CP,6BAASI,WAAT;AACAH,+BAAWO,IAAX,CAAgBR,SAASS,QAAT,CAAkB,oBAAlB,CAAhB;AACAT,6BAASI,WAAT;AACH,iBAJM,MAIA;AACH;AACH;AACJ;;AAED,gBAAIJ,SAASU,OAAT,CAAiB,YAAjB,EAA+B,GAA/B,CAAJ,EAAyC;AACrCV,yBAASI,WAAT;AACAJ,yBAASG,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAD,8BAAc,IAAd;AACAF,yBAASI,WAAT;AACH;;AAEDJ,qBAASG,SAAT,CAAmB,YAAnB,EAAiC,GAAjC;AACAH,qBAASW,SAAT;;AAEA,iBAAKN,IAAL,GAAYA,IAAZ;AACA,iBAAKJ,UAAL,GAAkBA,UAAlB;AACA,iBAAKC,WAAL,GAAmBA,WAAnB;AACH;;;;;kBAzCgBJ,iB","file":"JSXOpeningElement.js","sourcesContent":["import Node from '../Node';\n\n// TODO: create JSXBoundaryElement?\nexport default class JSXOpeningElement extends Node {\n    constructor(childNodes) {\n        super('JSXOpeningElement', childNodes);\n    }\n\n    _acceptChildren(children) {\n        let attributes = [];\n        let selfClosing = false;\n\n        children.passToken('Punctuator', '<');\n        children.skipNonCode();\n        let name = children.passOneOfNode(['JSXIdentifier', 'JSXMemberExpression', 'JSXNamespacedName']);\n        children.skipNonCode();\n\n        while (true) {\n            if (children.isNode('JSXAttribute')) {\n                children.skipNonCode();\n                attributes.push(children.passNode('JSXAttribute'));\n                children.skipNonCode();\n            } else if (children.isNode('JSXSpreadAttribute')) {\n                children.skipNonCode();\n                attributes.push(children.passNode('JSXSpreadAttribute'));\n                children.skipNonCode();\n            } else {\n                break;\n            }\n        }\n\n        if (children.isToken('Punctuator', '/')) {\n            children.skipNonCode();\n            children.passToken('Punctuator', '/');\n            selfClosing = true;\n            children.skipNonCode();\n        }\n\n        children.passToken('Punctuator', '>');\n        children.assertEnd();\n\n        this.name = name;\n        this.attributes = attributes;\n        this.selfClosing = selfClosing;\n    }\n}\n"]}