{
  "_args": [
    [
      {
        "raw": "/private/var/folders/dc/08bztltx53v8vk2hf180zqxw0000gn/T/d-118310-10531-1dmq3xv.nvkq2dquxr/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/private/var/folders/dc/08bztltx53v8vk2hf180zqxw0000gn/T/d-118310-10531-1dmq3xv.nvkq2dquxr/package.tgz",
        "spec": "/private/var/folders/dc/08bztltx53v8vk2hf180zqxw0000gn/T/d-118310-10531-1dmq3xv.nvkq2dquxr/package.tgz",
        "type": "local"
      },
      "/private/var/folders/dc/08bztltx53v8vk2hf180zqxw0000gn/T/apm-install-dir-118310-10531-15k5zri.jb236p3nmi"
    ]
  ],
  "_from": "../d-118310-10531-1dmq3xv.nvkq2dquxr/package.tgz",
  "_id": "atom-beautify@0.32.2",
  "_inCache": true,
  "_location": "/atom-beautify",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/private/var/folders/dc/08bztltx53v8vk2hf180zqxw0000gn/T/d-118310-10531-1dmq3xv.nvkq2dquxr/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/private/var/folders/dc/08bztltx53v8vk2hf180zqxw0000gn/T/d-118310-10531-1dmq3xv.nvkq2dquxr/package.tgz",
    "spec": "/private/var/folders/dc/08bztltx53v8vk2hf180zqxw0000gn/T/d-118310-10531-1dmq3xv.nvkq2dquxr/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../d-118310-10531-1dmq3xv.nvkq2dquxr/package.tgz",
  "_shasum": "f696100052f64b3f73e2a7f872ad87eb5fe1f765",
  "_shrinkwrap": null,
  "_spec": "/private/var/folders/dc/08bztltx53v8vk2hf180zqxw0000gn/T/d-118310-10531-1dmq3xv.nvkq2dquxr/package.tgz",
  "_where": "/private/var/folders/dc/08bztltx53v8vk2hf180zqxw0000gn/T/apm-install-dir-118310-10531-15k5zri.jb236p3nmi",
  "activationCommands": {
    "atom-workspace": [
      "atom-beautify:help-debug-editor",
      "atom-beautify:beautify-editor",
      "atom-beautify:open-settings",
      "atom-beautify:migrate-settings",
      "core:save",
      "core:save-as",
      "atom-beautify:beautify-language-apex",
      "atom-beautify:beautify-language-arduino",
      "atom-beautify:beautify-language-bash",
      "atom-beautify:beautify-language-c#",
      "atom-beautify:beautify-language-c",
      "atom-beautify:beautify-language-clojure",
      "atom-beautify:beautify-language-coffeescript",
      "atom-beautify:beautify-language-coldfusion",
      "atom-beautify:beautify-language-c++",
      "atom-beautify:beautify-language-crystal",
      "atom-beautify:beautify-language-css",
      "atom-beautify:beautify-language-csv",
      "atom-beautify:beautify-language-d",
      "atom-beautify:beautify-language-ejs",
      "atom-beautify:beautify-language-elm",
      "atom-beautify:beautify-language-erb",
      "atom-beautify:beautify-language-erlang",
      "atom-beautify:beautify-language-gherkin",
      "atom-beautify:beautify-language-glsl",
      "atom-beautify:beautify-language-go",
      "atom-beautify:beautify-language-golang template",
      "atom-beautify:beautify-language-fortran",
      "atom-beautify:beautify-language-handlebars",
      "atom-beautify:beautify-language-haskell",
      "atom-beautify:beautify-language-html",
      "atom-beautify:beautify-language-jade",
      "atom-beautify:beautify-language-java",
      "atom-beautify:beautify-language-javascript",
      "atom-beautify:beautify-language-json",
      "atom-beautify:beautify-language-jsx",
      "atom-beautify:beautify-language-latex",
      "atom-beautify:beautify-language-less",
      "atom-beautify:beautify-language-lua",
      "atom-beautify:beautify-language-markdown",
      "atom-beautify:beautify-language-marko",
      "atom-beautify:beautify-language-mustache",
      "atom-beautify:beautify-language-nginx",
      "atom-beautify:beautify-language-nunjucks",
      "atom-beautify:beautify-language-objective-c",
      "atom-beautify:beautify-language-ocaml",
      "atom-beautify:beautify-language-pawn",
      "atom-beautify:beautify-language-perl",
      "atom-beautify:beautify-language-php",
      "atom-beautify:beautify-language-puppet",
      "atom-beautify:beautify-language-python",
      "atom-beautify:beautify-language-r",
      "atom-beautify:beautify-language-riot.js",
      "atom-beautify:beautify-language-ruby",
      "atom-beautify:beautify-language-rust",
      "atom-beautify:beautify-language-sass",
      "atom-beautify:beautify-language-scss",
      "atom-beautify:beautify-language-spacebars",
      "atom-beautify:beautify-language-sql",
      "atom-beautify:beautify-language-svg",
      "atom-beautify:beautify-language-swig",
      "atom-beautify:beautify-language-tss",
      "atom-beautify:beautify-language-twig",
      "atom-beautify:beautify-language-typescript",
      "atom-beautify:beautify-language-ux markup",
      "atom-beautify:beautify-language-vala",
      "atom-beautify:beautify-language-vue",
      "atom-beautify:beautify-language-visualforce",
      "atom-beautify:beautify-language-xml",
      "atom-beautify:beautify-language-xtemplate",
      "atom-beautify:beautify-language-yaml",
      "atom-beautify:beautify-language-terraform",
      "atom-beautify:beautify-language-tsx",
      "atom-beautify:beautify-language-verilog",
      "atom-beautify:beautify-language-vhdl",
      "atom-beautify:beautify-language-gn"
    ],
    ".tree-view .file .name": [
      "atom-beautify:beautify-file"
    ],
    ".tree-view .directory .name": [
      "atom-beautify:beautify-directory"
    ]
  },
  "activationHooks": [
    "core:loaded-shell-environment"
  ],
  "author": {
    "name": "Glavin Wiechert",
    "email": "glavin.wiechert@gmail.com",
    "url": "https://github.com/Glavin001"
  },
  "bugs": {
    "url": "https://github.com/Glavin001/atom-beautify/issues"
  },
  "config": {
    "next-update": {
      "skip": [
        "gherkin",
        "expand-home-dir",
        "typescript",
        "typescript-formatter",
        "tidy-markdown",
        "underscore-plus",
        "prettydiff2"
      ]
    }
  },
  "contributors": [
    {
      "name": "Donald Pipowitch",
      "email": "pipo@senaeh.de",
      "url": "https://github.com/donaldpipowitch"
    },
    {
      "name": "László Károlyi",
      "url": "https://github.com/karolyi"
    },
    {
      "name": "Marco Tanzi",
      "url": "https://github.com/mtanzi"
    },
    {
      "name": "gvn lazar suntop",
      "url": "https://github.com/gvn"
    },
    {
      "name": "Vadim K.",
      "url": "https://github.com/vadirn"
    },
    {
      "name": "Filipe Silva",
      "url": "https://github.com/filipesilva"
    },
    {
      "name": "Ramón Cahenzli",
      "url": "https://github.com/psy-q"
    },
    {
      "name": "Clemens Damke",
      "url": "https://github.com/Cortys"
    },
    {
      "name": "Zhang YANG",
      "url": "https://github.com/ProgramFan"
    },
    {
      "name": "Daniel Bayley",
      "url": "https://github.com/danielbayley"
    },
    {
      "name": "Murphy Randle",
      "url": "https://github.com/splodingsocks"
    },
    {
      "name": "Luis Arias",
      "url": "https://github.com/kaaloo"
    },
    {
      "name": "Bati Sengul",
      "url": "https://github.com/Focus"
    },
    {
      "name": "Dheepak Krishnamurthy",
      "url": "https://github.com/kdheepak89"
    },
    {
      "name": "Ayoub Adib",
      "url": "https://github.com/ayoubdev"
    },
    {
      "name": "Frederic Delbos",
      "url": "https://github.com/fdelbos"
    },
    {
      "name": "Patrick Steele-Idem",
      "url": "https://github.com/psteeleidem"
    },
    {
      "name": "Joost van Doorn",
      "url": "https://github.com/JoostvDoorn"
    },
    {
      "name": "Arman Yessenamanov",
      "url": "https://github.com/yesenarman"
    },
    {
      "name": "Sebastian DiLorenzo",
      "url": "https://github.com/Sebastian-D"
    },
    {
      "name": "Émile Bergeron",
      "url": "https://github.com/emileber"
    },
    {
      "name": "Louis G Vichy",
      "url": "https://github.com/louisgv"
    },
    {
      "name": "Elias Baryshnikov",
      "url": "https://github.com/qwemaze"
    },
    {
      "name": "Victor Uriarte",
      "url": "https://github.com/vmuriart"
    },
    {
      "name": "guyskk",
      "url": "https://github.com/guyskk"
    },
    {
      "name": "Denys Vitali",
      "url": "https://github.com/denysvitali"
    },
    {
      "name": "Daniel Brodin",
      "url": "https://github.com/danielbrodin"
    },
    {
      "name": "Anton Brok-Volchansky",
      "url": "https://github.com/re6exp"
    },
    {
      "name": "Taylon Silmer",
      "url": "https://github.com/taylon"
    },
    {
      "name": "James Power",
      "url": "https://github.com/thejamespower"
    },
    {
      "name": "Eli Donahue",
      "url": "https://github.com/elijdonahue"
    },
    {
      "name": "Kamontat Chantrachirathumrong",
      "url": "https://github.com/kamontat"
    },
    {
      "name": "Steven Zeck",
      "url": "https://github.com/szeck87"
    },
    {
      "name": "Christian Kjær Laustsen",
      "email": "ckl@codetalk.io",
      "url": "https://github.com/Tehnix"
    },
    {
      "name": "Faheel Ahmad",
      "url": "https://github.com/faheel"
    },
    {
      "name": "Andrew Andrianov",
      "url": "https://github.com/nekromant"
    },
    {
      "name": "Jack Treble",
      "url": "https://github.com/JackTreble"
    },
    {
      "name": "Kohei Hiraga",
      "url": "https://github.com/range3"
    }
  ],
  "dependencies": {
    "align-yaml": "^0.1.8",
    "async": "^2.6.0",
    "atom-message-panel": "^1.3.0",
    "atom-space-pen-views": "^2.2.0",
    "bluebird": "^3.5.1",
    "coffee-fmt": "^0.12.0",
    "coffee-formatter": "^0.1.2",
    "coffeescript": "^1.12.6",
    "csscomb": "^4.2.0",
    "diff": "^3.4.0",
    "editorconfig": "^0.15.0",
    "eslint": "^4.16.0",
    "event-kit": "^2.4.0",
    "expand-home-dir": "0.0.3",
    "extend": "^3.0.1",
    "gherkin": "^2.12.2",
    "handlebars": "^4.0.11",
    "js-beautify": "^1.7.5",
    "jscs": "^3.0.7",
    "lodash": "^4.17.4",
    "loophole": "^1.1.0",
    "marko-prettyprint": "^1.4.0",
    "nginxbeautify": "^2.0.1",
    "node-cljfmt": "0.5.3",
    "node-dir": "0.1.17",
    "open": "0.0.5",
    "prettier": "^1.11.1",
    "prettydiff2": "^2.2.7",
    "pug-beautify": "^0.1.1",
    "remark": "6.0.1",
    "season": "^6.0.2",
    "semver": "^5.5.0",
    "shell-env": "^0.3.0",
    "space-pen": "5.1.2",
    "strip-json-comments": "^2.0.1",
    "temp": "^0.8.3",
    "tidy-markdown": "2.0.4",
    "typescript": "^2.6.2",
    "typescript-formatter": "^7.0.0",
    "underscore-plus": "^1.6.6",
    "universal-analytics": "^0.4.16",
    "uuid": "^3.1.0",
    "which": "^1.3.0",
    "winston": "^2.4.0",
    "yaml-front-matter": "3.4.1"
  },
  "description": "Beautify HTML, CSS, JavaScript, PHP, Python, Ruby, Java, C, C++, C#, Objective-C, CoffeeScript, TypeScript, Coldfusion, SQL, and more in Atom",
  "devDependencies": {
    "codo": "^2.1.2",
    "coffeelint": "2.1.0"
  },
  "engines": {
    "atom": ">=1.21.0 <2.0.0"
  },
  "greenkeeper": {
    "ignore": [
      "gherkin",
      "expand-home-dir",
      "typescript",
      "typescript-formatter",
      "tidy-markdown",
      "underscore-plus",
      "prettydiff2"
    ]
  },
  "homepage": "https://github.com/Glavin001/atom-beautify#readme",
  "keywords": [
    "atom",
    "beautify",
    "beautifier",
    "js-beautify",
    "format",
    "pretty",
    "html",
    "handlebars",
    "mustache",
    "xml",
    "css",
    "javascript",
    "json",
    "sass",
    "scss",
    "less",
    "sql",
    "markdown",
    "php",
    "python",
    "ruby",
    "coffeescript",
    "typescript",
    "c",
    "c++",
    "cpp",
    "objective-c",
    "c-sharp",
    "c#",
    "coldfusion",
    "uncrustify",
    "java",
    "apex",
    "pawn",
    "vala",
    "d",
    "erb",
    "editorconfig",
    "yaml",
    "front matter",
    "jekyll",
    "marko",
    "go",
    "golang",
    "svg",
    "elm",
    "lua",
    "arduino",
    "crystal",
    "csv",
    "ejs",
    "erlang",
    "gherkin",
    "fortran",
    "haskell",
    "hindent",
    "brittany",
    "jade",
    "jsx",
    "latex",
    "ocaml",
    "perl",
    "puppet",
    "riot.js",
    "rust",
    "spacebars",
    "swig",
    "tss",
    "twig",
    "visualforce",
    "xtemplate",
    "autopep8",
    "coffee formatter",
    "coffee-fmt",
    "clang-format",
    "dfmt",
    "elm-format",
    "html beautifier",
    "csscomb",
    "gherkin formatter",
    "gofmt",
    "latex beautify",
    "fortran beautifier",
    "js beautify",
    "jscs fixer",
    "eslint",
    "eslint fixer",
    "lua beautifier",
    "ocp-indent",
    "perltidy",
    "php-cs-fixer",
    "phpcbf",
    "pretty diff",
    "pug beautify",
    "puppet-lint",
    "r",
    "remark",
    "rubocop",
    "ruby beautify",
    "rustfmt",
    "sqlformat",
    "stylish-haskell",
    "tidy markdown",
    "typescript formatter",
    "yapf",
    "erl_tidy",
    "marko beautifier",
    "vue",
    "vue beautifier",
    "sassconvert",
    "formatr",
    "clojure",
    "clojure beautifier",
    "nunjucks",
    "ux markup",
    "pybeautifier",
    "cljfmt",
    "bash",
    "beautysh",
    "glsl",
    "hh_format",
    "nginx",
    "nginx beautify",
    "golang template",
    "align-yaml",
    "goimports",
    "terraform",
    "terraformfmt",
    "tsx",
    "prettier",
    "verilog",
    "emacs verilog mode",
    "vhdl",
    "vhdl beautifier",
    "gn"
  ],
  "license": "MIT",
  "main": "./src/beautify",
  "name": "atom-beautify",
  "optionalDependencies": {},
  "private": true,
  "readme": "# :lipstick: [atom-beautify](https://github.com/Glavin001/atom-beautify)\n[![apm](https://img.shields.io/apm/dm/atom-beautify.svg)](https://atom.io/packages/atom-beautify)\n[![Greenkeeper badge](https://badges.greenkeeper.io/Glavin001/atom-beautify.svg)](https://greenkeeper.io/)\n[![GitHub issues](https://img.shields.io/github/issues/Glavin001/atom-beautify.svg?style=flat-square)](https://github.com/Glavin001/atom-beautify/issues)\n[![GitHub stars](https://img.shields.io/github/stars/Glavin001/atom-beautify.svg?style=flat-square)](https://github.com/Glavin001/atom-beautify/stargazers)\n[![Gitter](https://img.shields.io/gitter/room/Glavin001/atom-beautify.svg?style=flat-square)](https://gitter.im/Glavin001/atom-beautify)\n[![Bountysource](https://img.shields.io/bountysource/team/atom-beautify/activity.svg?style=flat-square)](https://www.bountysource.com/teams/atom-beautify)\n[![Paypal Donations](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=X2RK5DKN6YXPJ&lc=CA&item_name=Atom%2dBeautify&item_number=atom%2dbeautify&currency_code=CAD&bn=PP%2dDonationsBF%3abtn_donate_LG%2egif%3aNonHosted)\n[![Twitter URL](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)](https://twitter.com/unibeautify)\n\n**Sign up for Unibeautify CI: [https://goo.gl/jmM4QN](https://goo.gl/jmM4QN)**\n\n**Help improve Atom-Beautify by completing the quick questionnaire: [https://goo.gl/iEHBNr](https://goo.gl/iEHBNr)**\n\n| Mac OS <img src=\"https://cloud.githubusercontent.com/assets/1885333/17059766/2530c9d8-4ffd-11e6-9529-3fa47dbff616.png\" width=\"50px\"> and <img src=\"https://cloud.githubusercontent.com/assets/1885333/17059750/11c4474e-4ffd-11e6-89e1-2486ca5b3234.png\" width=\"100px\"> | <img src=\"https://cloud.githubusercontent.com/assets/1885333/17059763/206a7d4a-4ffd-11e6-859e-7856902fb300.png\" width=\"100px\"> |\n| --- | --- |\n| [Travis CI: ![Build Status](https://travis-ci.org/Glavin001/atom-beautify.svg?branch=master)](https://travis-ci.org/Glavin001/atom-beautify) | [AppVeyor: ![Build status](https://ci.appveyor.com/api/projects/status/himnq7tjxl2fdc8u/branch/master?svg=true)](https://ci.appveyor.com/project/Glavin001/atom-beautify/branch/master) |\n\n[![Throughput Graph](https://graphs.waffle.io/Glavin001/atom-beautify/throughput.svg)](https://waffle.io/Glavin001/atom-beautify/metrics)\n\n> Beautify HTML, CSS, JavaScript, PHP, Python, Ruby, Java, C, C++, C#, Objective-C, CoffeeScript, TypeScript, Coldfusion, SQL, and more in Atom\n\n| Before | After |\n| --- | ---- |\n| Original HTML | Beautified HTML |\n| ![image](https://cloud.githubusercontent.com/assets/1885333/16542727/db52adc6-408a-11e6-824e-04aed06bd2f7.png) | ![image](https://cloud.githubusercontent.com/assets/1885333/16542728/dcac3700-408a-11e6-8e35-9c8fc4432edc.png) |\n\n## Table of Contents\n\n- [Installation](#installation)\n- [Beautifiers](#beautifiers)\n- [Language Support](#language-support)\n- [Usage](#usage)\n  - [Command Palette](#command-palette)\n    - [Beautify a Specific Language](#beautify-a-specific-language)\n  - [Selection of Code](#selection-of-code)\n  - [Beautify On Save](#beautify-on-save)\n  - [Keyboard Shortcut](#keyboard-shortcut)\n    - [Custom Keyboard Shortcuts](#custom-keyboard-shortcuts)\n- [Configuration](#configuration)\n  - [Simple](#simple)\n  - [Nested](#nested-recommended)\n- [Troubleshooting](#troubleshooting)\n- [Contributing](#contributing)\n\n## Installation\n\nAtom Package: https://atom.io/packages/atom-beautify\n\n```bash\napm install atom-beautify\n```\n\nOr Settings/Preferences ➔ Install ➔ Search for `atom-beautify`\n\n### Important Notice: Analytics\n\n[Atom-Beautify respects the `core.telemetryConsent` configuration option from Atom editor.](https://github.com/Glavin001/atom-beautify/issues/1179)\nIf you do not wish to have usage data sent to Google Analytics then please set `core.telemetryConsent` to `no` or `undecided` option before using Atom-Beautify.\nSee [`Anonymous Analytics` section of docs](docs/options.md#anonymous-analytics) for details.\nThank you.\n\n| On Atom Load | Change Setting Later |\n| --- | --- |\n| ![image](https://cloud.githubusercontent.com/assets/1885333/25234140/947b1b50-25b7-11e7-8ebc-0ae37420f13e.png) | ![image](https://cloud.githubusercontent.com/assets/1885333/25234184/b41b4192-25b7-11e7-8185-a83829b48078.png) |\n\n\n### Next Version: [Unibeautify](https://github.com/Unibeautify/unibeautify)\n\nAtom-Beautify is going to be completely rewritten with [Unibeautify](https://github.com/Unibeautify/unibeautify) at its core!\nSee [`unibeautify` branch](../../tree/unibeautify) for work in progress and [Issue #1174](https://github.com/Glavin001/atom-beautify/issues/1174).\n\n### Poll: Improving installation of third-party beautifiers\n\nMany users are experiencing issues when installing third party beautifiers (e.g. Uncrustify, PHP-CS-Fixer, and many more).\nA possible solution is a \"cloud\" service which provides remote access to these beautifiers. Atom-Beautify would then communicate with these services, allowing for zero-installation beautification.\n\nPlease let us know what you think!\n\n[![](https://m131jyck4m.execute-api.us-west-2.amazonaws.com/prod/poll/01BY57P9ACSDQASVT7KYZKZESK/Yes%2C%20cloud%20solution%20would%20be%20great!)](https://m131jyck4m.execute-api.us-west-2.amazonaws.com/prod/poll/01BY57P9ACSDQASVT7KYZKZESK/Yes%2C%20cloud%20solution%20would%20be%20great!/vote)\n[![](https://m131jyck4m.execute-api.us-west-2.amazonaws.com/prod/poll/01BY57P9ACSDQASVT7KYZKZESK/No%2C%20I%20enjoy%20manually%20installing%20beautifiers)](https://m131jyck4m.execute-api.us-west-2.amazonaws.com/prod/poll/01BY57P9ACSDQASVT7KYZKZESK/No%2C%20I%20enjoy%20manually%20installing%20beautifiers/vote)\n[![](https://m131jyck4m.execute-api.us-west-2.amazonaws.com/prod/poll/01BY57P9ACSDQASVT7KYZKZESK/No%2C%20I%20am%20happy%20using%20Docker)](https://m131jyck4m.execute-api.us-west-2.amazonaws.com/prod/poll/01BY57P9ACSDQASVT7KYZKZESK/No%2C%20I%20am%20happy%20using%20Docker/vote)\n[![](https://m131jyck4m.execute-api.us-west-2.amazonaws.com/prod/poll/01BY57P9ACSDQASVT7KYZKZESK/No%2C%20I%20do%20not%20want%20to%20send%20me%20code%20over%20the%20Internet)](https://m131jyck4m.execute-api.us-west-2.amazonaws.com/prod/poll/01BY57P9ACSDQASVT7KYZKZESK/No%2C%20I%20do%20not%20want%20to%20send%20me%20code%20over%20the%20Internet/vote)\n\n## Beautifiers\n\nSome of the supported beautifiers are developed for Node.js and are automatically installed when Atom-Beautify is installed. However, other beautifiers are command-line interface (CLI) applications and require you to manually install them.\n\n| Beautifier | Preinstalled | [:whale: Docker](https://www.docker.com/) | Installation |\n| --- | --- | --- |--- |\n| align-yaml | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| autopep8 | :warning: 2 executables | :warning: Only 1 of 2 executables | :whale: With [Docker](https://www.docker.com/):<br/>1. Install [autopep8 (`autopep8`)](https://github.com/hhatto/autopep8) with `docker pull unibeautify/autopep8`<br/><br/>:bookmark_tabs: Manually:<br/>1. Install [autopep8 (`autopep8`)](https://github.com/hhatto/autopep8) by following https://github.com/hhatto/autopep8#installation<br/>2. Install [isort (`isort`)](https://github.com/timothycrosley/isort) by following https://github.com/timothycrosley/isort#installing-isort<br/> |\n| beautysh | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):<br/>1. Install [beautysh (`beautysh`)](https://github.com/bemeurer/beautysh) with `docker pull unibeautify/beautysh`<br/><br/>:bookmark_tabs: Manually:<br/>1. Install [beautysh (`beautysh`)](https://github.com/bemeurer/beautysh) by following https://github.com/bemeurer/beautysh#installation<br/> |\n| brittany | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://github.com/lspitzner/brittany and follow the instructions. |\n| clang-format | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):<br/>1. Install [ClangFormat (`clang-format`)](https://clang.llvm.org/docs/ClangFormat.html) with `docker pull unibeautify/clang-format`<br/><br/>:bookmark_tabs: Manually:<br/>1. Install [ClangFormat (`clang-format`)](https://clang.llvm.org/docs/ClangFormat.html) by following https://clang.llvm.org/docs/ClangFormat.html<br/> |\n| cljfmt | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| Coffee Formatter | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| coffee-fmt | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| Crystal | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):<br/>1. Install [Crystal (`crystal`)](http://crystal-lang.org) with `docker pull unibeautify/crystal`<br/><br/>:bookmark_tabs: Manually:<br/>1. Install [Crystal (`crystal`)](http://crystal-lang.org) by following https://crystal-lang.org/docs/installation/<br/> |\n| CSScomb | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| dfmt | :warning: 1 executable | :x: No Docker support | :bookmark_tabs: Manually:<br/>1. Install [Dfmt (`dfmt`)](https://github.com/Hackerpilot/dfmt) by following https://github.com/dlang-community/dfmt#building<br/> |\n| elm-format | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):<br/>1. Install [elm-format (`elm-format`)](https://github.com/avh4/elm-format) with `docker pull unibeautify/elm-format`<br/><br/>:bookmark_tabs: Manually:<br/>1. Install [elm-format (`elm-format`)](https://github.com/avh4/elm-format) by following https://github.com/avh4/elm-format#installation-<br/> |\n| Emacs Verilog Mode | :warning: 1 executable | :x: No Docker support | :bookmark_tabs: Manually:<br/>1. Install [Emacs (`emacs`)](https://www.gnu.org/software/emacs/) by following https://www.gnu.org/software/emacs/<br/> |\n| erl_tidy | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to http://erlang.org/doc/man/erl_tidy.html and follow the instructions. |\n| ESLint Fixer | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| formatR | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):<br/>1. Install [Rscript (`rscript`)](https://github.com/yihui/formatR) with `docker pull unibeautify/rscript`<br/><br/>:bookmark_tabs: Manually:<br/>1. Install [Rscript (`rscript`)](https://github.com/yihui/formatR) by following https://github.com/yihui/formatR<br/> |\n| Fortran Beautifier | :warning: 1 executable | :x: No Docker support | :bookmark_tabs: Manually:<br/>1. Install [Emacs (`emacs`)](https://www.gnu.org/software/emacs/) by following https://www.gnu.org/software/emacs/<br/> |\n| Gherkin formatter | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| GN | :warning: 1 executable | :x: No Docker support | :bookmark_tabs: Manually:<br/>1. Install [gn (`gn`)](https://chromium.googlesource.com/chromium/src/tools/gn) by following https://www.chromium.org/developers/how-tos/get-the-code<br/> |\n| gofmt | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://golang.org/cmd/gofmt/ and follow the instructions. |\n| goimports | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):<br/>1. Install [goimports (`goimports`)](https://godoc.org/golang.org/x/tools/cmd/goimports) with `docker pull unibeautify/goimports`<br/><br/>:bookmark_tabs: Manually:<br/>1. Install [goimports (`goimports`)](https://godoc.org/golang.org/x/tools/cmd/goimports) by following https://godoc.org/golang.org/x/tools/cmd/goimports<br/> |\n| hh_format | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to http://hhvm.com/ and follow the instructions. |\n| hindent | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://github.com/commercialhaskell/hindent and follow the instructions. |\n| HTML Beautifier | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://github.com/threedaymonk/htmlbeautifier and follow the instructions. |\n| JS Beautify | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| JSCS Fixer | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| Latex Beautify | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://github.com/cmhughes/latexindent.pl and follow the instructions. |\n| Lua beautifier | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| Marko Beautifier | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| Nginx Beautify | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| ocp-indent | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):<br/>1. Install [ocp-indent (`ocp-indent`)](https://www.typerex.org/ocp-indent.html) with `docker pull unibeautify/ocp-indent`<br/><br/>:bookmark_tabs: Manually:<br/>1. Install [ocp-indent (`ocp-indent`)](https://www.typerex.org/ocp-indent.html) by following https://www.typerex.org/ocp-indent.html#installation<br/> |\n| Perltidy | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to http://perltidy.sourceforge.net/ and follow the instructions. |\n| PHP-CS-Fixer | :warning: 2 executables | :warning: Only 1 of 2 executables | :whale: With [Docker](https://www.docker.com/):<br/>1. Install [PHP-CS-Fixer (`php-cs-fixer`)](https://github.com/FriendsOfPHP/PHP-CS-Fixer) with `docker pull unibeautify/php-cs-fixer`<br/><br/>:bookmark_tabs: Manually:<br/>1. Install [PHP (`php`)](http://php.net/) by following http://php.net/manual/en/install.php<br/>2. Install [PHP-CS-Fixer (`php-cs-fixer`)](https://github.com/FriendsOfPHP/PHP-CS-Fixer) by following https://github.com/FriendsOfPHP/PHP-CS-Fixer#installation<br/> |\n| PHPCBF | :warning: 2 executables | :warning: Only 1 of 2 executables | :whale: With [Docker](https://www.docker.com/):<br/>1. Install [PHPCBF (`phpcbf`)](https://github.com/squizlabs/PHP_CodeSniffer) with `docker pull unibeautify/phpcbf`<br/><br/>:bookmark_tabs: Manually:<br/>1. Install [PHP (`php`)](http://php.net/) by following http://php.net/manual/en/install.php<br/>2. Install [PHPCBF (`phpcbf`)](https://github.com/squizlabs/PHP_CodeSniffer) by following https://github.com/squizlabs/PHP_CodeSniffer#installation<br/> |\n| Prettier | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| Pretty Diff | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| Pug Beautify | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| puppet-lint | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):<br/>1. Install [puppet-lint (`puppet-lint`)](http://puppet-lint.com/) with `docker pull unibeautify/puppet-lint`<br/><br/>:bookmark_tabs: Manually:<br/>1. Install [puppet-lint (`puppet-lint`)](http://puppet-lint.com/) by following http://puppet-lint.com/<br/> |\n| pybeautifier | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://github.com/guyskk/pybeautifier and follow the instructions. |\n| Remark | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| Rubocop | :warning: 1 executable | :x: No Docker support | :bookmark_tabs: Manually:<br/>1. Install [Rubocop (`rubocop`)](http://rubocop.readthedocs.io/) by following http://rubocop.readthedocs.io/en/latest/installation/<br/> |\n| Ruby Beautify | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://github.com/erniebrodeur/ruby-beautify and follow the instructions. |\n| rustfmt | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://github.com/rust-lang-nursery/rustfmt and follow the instructions. |\n| SassConvert | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):<br/>1. Install [SassConvert (`sass-convert`)](http://sass-lang.com/documentation/file.SASS_REFERENCE.html#syntax) with `docker pull unibeautify/sass-convert`<br/><br/>:bookmark_tabs: Manually:<br/>1. Install [SassConvert (`sass-convert`)](http://sass-lang.com/documentation/file.SASS_REFERENCE.html#syntax) by following http://sass-lang.com/documentation/file.SASS_REFERENCE.html#syntax<br/> |\n| sqlformat | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://github.com/andialbrecht/sqlparse and follow the instructions. |\n| stylish-haskell | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://github.com/jaspervdj/stylish-haskell and follow the instructions. |\n| terraformfmt | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):<br/>1. Install [Terraform (`terraform`)](https://www.terraform.io) with `docker pull hashicorp/terraform`<br/><br/>:bookmark_tabs: Manually:<br/>1. Install [Terraform (`terraform`)](https://www.terraform.io) by following https://www.terraform.io<br/> |\n| Tidy Markdown | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| TypeScript Formatter | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| Uncrustify | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):<br/>1. Install [Uncrustify (`uncrustify`)](http://uncrustify.sourceforge.net/) with `docker pull unibeautify/uncrustify`<br/><br/>:bookmark_tabs: Manually:<br/>1. Install [Uncrustify (`uncrustify`)](http://uncrustify.sourceforge.net/) by following https://github.com/uncrustify/uncrustify<br/> |\n| VHDL Beautifier | :warning: 1 executable | :x: No Docker support | :bookmark_tabs: Manually:<br/>1. Install [Emacs (`emacs`)](https://www.gnu.org/software/emacs/) by following https://www.gnu.org/software/emacs/<br/> |\n| Vue Beautifier | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| yapf | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://github.com/google/yapf and follow the instructions. |\n\n## Language Support\n\nSee [all supported options in the documentation at  `docs/options.md`](docs/options.md).\n\n| Language | Grammars | File Extensions | Supported Beautifiers |\n| --- | --- | --- | ---- |\n| Apex | `Apex` |`.cls`, `.trigger` | **[`Uncrustify`](https://github.com/uncrustify/uncrustify)** |\n| Arduino | `Arduino` |`.ino`, `.pde` | **[`Uncrustify`](https://github.com/uncrustify/uncrustify)** |\n| Bash | `Shell Script` |`.bash`, `.sh` | **[`beautysh`](https://github.com/bemeurer/beautysh)** |\n| C | `C`, `opencl` |`.h`, `.c`, `.cl` | **[`Uncrustify`](https://github.com/uncrustify/uncrustify)**, [`clang-format`](https://clang.llvm.org/docs/ClangFormat.html) |\n| Coldfusion | `html` |`.cfm`, `.cfml`, `.cfc` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| Clojure | `Clojure` |`.clj`, `.cljs`, `.edn` | **[`cljfmt`](https://github.com/snoe/node-cljfmt)** |\n| CoffeeScript | `CoffeeScript` |`.coffee` | **[`coffee-fmt`](https://github.com/sterpe/coffee-fmt)**, [`Coffee Formatter`](https://github.com/Glavin001/Coffee-Formatter) |\n| C++ | `C++` |`.h`, `.hh`, `.cc`, `.cpp`, `.cxx`, `.C`, `.cu`, `.c++`, `.hpp`, `.hxx`, `.h++`, `.cuh` | **[`Uncrustify`](https://github.com/uncrustify/uncrustify)**, [`clang-format`](https://clang.llvm.org/docs/ClangFormat.html) |\n| Crystal | `Crystal` |`.cr` | **[`Crystal`](http://crystal-lang.org)** |\n| C# | `C#` |`.cs` | **[`Uncrustify`](https://github.com/uncrustify/uncrustify)** |\n| CSS | `CSS` |`.css` | **[`JS Beautify`](https://github.com/beautify-web/js-beautify)**, [`CSScomb`](https://github.com/csscomb/csscomb.js), [`Prettier`](https://github.com/prettier/prettier), [`Pretty Diff`](https://github.com/prettydiff/prettydiff), [`SassConvert`](http://sass-lang.com/documentation/file.SASS_REFERENCE.html#syntax) |\n| CSV | `CSV` |`.csv` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| D | `D` |`.d` | **[`Uncrustify`](https://github.com/uncrustify/uncrustify)**, [`dfmt`](https://github.com/Hackerpilot/dfmt) |\n| EJS | `EJS`, `JavaScript Template`, `HTML (Angular)` |`.ejs` | **[`JS Beautify`](https://github.com/beautify-web/js-beautify)**, [`Pretty Diff`](https://github.com/prettydiff/prettydiff) |\n| Elm | `Elm` |`.elm` | **[`elm-format`](https://github.com/avh4/elm-format)** |\n| ERB | `HTML (Ruby - ERB)`, `HTML (Rails)` |`.erb` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)**, [`HTML Beautifier`](https://github.com/threedaymonk/htmlbeautifier) |\n| Erlang | `Erlang` |`.erl` | **[`erl_tidy`](http://erlang.org/doc/man/erl_tidy.html)** |\n| Fortran | `Fortran - Modern` |`.f90`, `.F90`, `.f95`, `.F95`, `.f03`, `.F03`, `.f08`, `.F08` | **[`Fortran Beautifier`](https://www.gnu.org/software/emacs/)** |\n| gherkin | `Gherkin` |`.feature` | **[`Gherkin formatter`](https://github.com/Glavin001/atom-beautify/blob/master/src/beautifiers/gherkin.coffee)** |\n| GLSL | `C`, `opencl`, `GLSL` |`.vert`, `.frag` | **[`clang-format`](https://clang.llvm.org/docs/ClangFormat.html)** |\n| GN | `gn` |`.gn`, `.gni` | **[`GN`](https://chromium.googlesource.com/chromium/src/tools/gn)** |\n| Go | `Go` |`.go` | **[`gofmt`](https://golang.org/cmd/gofmt/)**, [`goimports`](https://godoc.org/golang.org/x/tools/cmd/goimports) |\n| Golang Template | `HTML (Go)`, `Go Template` |`.gohtml` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| Handlebars | `Handlebars`, `HTML (Handlebars)` |`.hbs`, `.handlebars` | **[`JS Beautify`](https://github.com/beautify-web/js-beautify)**, [`Pretty Diff`](https://github.com/prettydiff/prettydiff) |\n| Haskell | `Haskell` |`.hs` | **[`stylish-haskell`](https://github.com/jaspervdj/stylish-haskell)**, [`brittany`](https://github.com/lspitzner/brittany), [`hindent`](https://github.com/commercialhaskell/hindent) |\n| HTML | `HTML` |`.html` | **[`JS Beautify`](https://github.com/beautify-web/js-beautify)**, [`Pretty Diff`](https://github.com/prettydiff/prettydiff) |\n| Jade | `Jade`, `Pug` |`.jade`, `.pug` | **[`Pug Beautify`](https://github.com/vingorius/pug-beautify)** |\n| Java | `Java` |`.java` | **[`Uncrustify`](https://github.com/uncrustify/uncrustify)** |\n| JavaScript | `JavaScript` |`.js` | **[`JS Beautify`](https://github.com/beautify-web/js-beautify)**, [`ESLint Fixer`](https://github.com/eslint/eslint), [`JSCS Fixer`](https://github.com/jscs-dev/node-jscs/), [`Prettier`](https://github.com/prettier/prettier), [`Pretty Diff`](https://github.com/prettydiff/prettydiff) |\n| JSON | `JSON` |`.json` | **[`JS Beautify`](https://github.com/beautify-web/js-beautify)**, [`Prettier`](https://github.com/prettier/prettier), [`Pretty Diff`](https://github.com/prettydiff/prettydiff) |\n| JSX | `JSX`, `JavaScript (JSX)`, `Babel ES6 JavaScript`, `JavaScript with JSX` |`.jsx`, `.js` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)**, [`JS Beautify`](https://github.com/beautify-web/js-beautify) |\n| LaTeX | `BibTeX`, `LaTeX`, `TeX` |`.bib`, `.tex`, `.sty`, `.cls`, `.dtx`, `.ins`, `.bbx`, `.cbx` | **[`Latex Beautify`](https://github.com/cmhughes/latexindent.pl)** |\n| LESS | `LESS` |`.less` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)**, [`CSScomb`](https://github.com/csscomb/csscomb.js), [`Prettier`](https://github.com/prettier/prettier) |\n| Lua | `Lua` |`.lua`, `.ttslua` | **[`Lua beautifier`](https://github.com/Glavin001/atom-beautify/blob/master/src/beautifiers/lua-beautifier/beautifier.coffee)** |\n| Markdown | `GitHub Markdown` |`.markdown`, `.md` | **[`Remark`](https://github.com/remarkjs/remark)**, [`Prettier`](https://github.com/prettier/prettier), [`Tidy Markdown`](https://github.com/slang800/tidy-markdown) |\n| Marko | `Marko` |`.marko` | **[`Marko Beautifier`](https://github.com/marko-js/marko-prettyprint)** |\n| Mustache | `HTML (Mustache)` |`.mustache` | **[`JS Beautify`](https://github.com/beautify-web/js-beautify)**, [`Pretty Diff`](https://github.com/prettydiff/prettydiff) |\n| Nginx | `nginx` |`.conf` | **[`Nginx Beautify`](https://github.com/denysvitali/nginxbeautify)** |\n| Nunjucks | `Nunjucks`, `Nunjucks Templates`, `HTML (Nunjucks Templates)` |`.njk`, `.nunjucks` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| Objective-C | `Objective-C`, `Objective-C++` |`.m`, `.mm`, `.h` | **[`Uncrustify`](https://github.com/uncrustify/uncrustify)**, [`clang-format`](https://clang.llvm.org/docs/ClangFormat.html) |\n| OCaml | `OCaml` |`.ml` | **[`ocp-indent`](https://www.typerex.org/ocp-indent.html)** |\n| Pawn | `Pawn` | | **[`Uncrustify`](https://github.com/uncrustify/uncrustify)** |\n| Perl | `Perl`, `Perl 6` |`.pl`, `.PL`, `.pm`, `.pod`, `.t` | **[`Perltidy`](http://perltidy.sourceforge.net/)** |\n| PHP | `PHP` |`.php`, `.module`, `.inc` | **[`PHP-CS-Fixer`](https://github.com/FriendsOfPHP/PHP-CS-Fixer)**, [`PHPCBF`](http://php.net/manual/en/install.php), [`hh_format`](http://hhvm.com/) |\n| Puppet | `Puppet` |`.pp` | **[`puppet-lint`](http://puppet-lint.com/)** |\n| Python | `Python`, `MagicPython` |`.py` | **[`autopep8`](https://github.com/hhatto/autopep8)**, [`pybeautifier`](https://github.com/guyskk/pybeautifier), [`yapf`](https://github.com/google/yapf) |\n| R | `R` |`.r`, `.R` | **[`formatR`](https://github.com/yihui/formatR)** |\n| Riot.js | `Riot.js`, `HTML (Riot Tag)` |`.tag` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| Ruby | `Ruby`, `Ruby on Rails` |`.rb` | **[`Rubocop`](https://github.com/bbatsov/rubocop)**, [`Ruby Beautify`](https://github.com/erniebrodeur/ruby-beautify) |\n| Rust | `Rust` |`.rs`, `.rlib` | **[`rustfmt`](https://github.com/rust-lang-nursery/rustfmt)** |\n| Sass | `Sass` |`.sass` | **[`SassConvert`](http://sass-lang.com/documentation/file.SASS_REFERENCE.html#syntax)** |\n| SCSS | `SCSS` |`.scss` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)**, [`CSScomb`](https://github.com/csscomb/csscomb.js), [`Prettier`](https://github.com/prettier/prettier), [`SassConvert`](http://sass-lang.com/documentation/file.SASS_REFERENCE.html#syntax) |\n| Spacebars | `Spacebars` | | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| SQL | `SQL (Rails)`, `SQL` |`.sql` | **[`sqlformat`](https://github.com/andialbrecht/sqlparse)** |\n| SVG | `SVG` |`.svg` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| Swig | `HTML (Swig)`, `SWIG` |`.swig` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| Terraform | `Terraform` |`.tf` | **[`terraformfmt`](https://www.terraform.io/docs/commands/fmt.html)** |\n| TSS | `TSS` |`.tss` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| TSX | `TypeScriptReact` |`.tsx` | **[`TypeScript Formatter`](https://github.com/vvakame/typescript-formatter)** |\n| Twig | `HTML (Twig)` |`.twig` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| TypeScript | `TypeScript` |`.ts` | **[`TypeScript Formatter`](https://github.com/vvakame/typescript-formatter)**, [`Prettier`](https://github.com/prettier/prettier) |\n| UX Markup | `UX` |`.ux` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| Vala | `Vala` |`.vala`, `.vapi` | **[`Uncrustify`](https://github.com/uncrustify/uncrustify)** |\n| Verilog | `Verilog` |`.svh`, `.v`, `.sv` | **[`Emacs Verilog Mode`](https://www.veripool.org/projects/verilog-mode/)** |\n| VHDL | `VHDL 2008` |`.vhd`, `.VHD` | **[`VHDL Beautifier`](https://www.gnu.org/software/emacs/)** |\n| Visualforce | `Visualforce` |`.page` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| Vue | `Vue Component` |`.vue` | **[`Vue Beautifier`](https://github.com/Glavin001/atom-beautify/blob/master/src/beautifiers/vue-beautifier.coffee)**, [`ESLint Fixer`](https://github.com/eslint/eslint), [`Prettier`](https://github.com/prettier/prettier) |\n| XML | `SLD`, `XML`, `XHTML`, `XSD`, `XSL`, `JSP`, `GSP` |`.sld`, `.xml`, `.xhtml`, `.xsd`, `.xsl`, `.jsp`, `.gsp`, `.plist`, `.recipe`, `.config` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)**, [`JS Beautify`](https://github.com/beautify-web/js-beautify) |\n| XTemplate | `XTemplate` |`.xtemplate` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| YAML | `YAML` |`.yml`, `.yaml` | **[`align-yaml`](https://github.com/jonschlinkert/align-yaml)** |\n\n## Usage\n\n### Command Palette\n\nOpen the [Command Palette](https://github.com/atom/command-palette), type `Beautify`, and run `Beautify Editor`.\n\n![image](https://cloud.githubusercontent.com/assets/1885333/16542583/1c8d975c-4085-11e6-8307-e35df7430a10.png)\n\n#### Beautify a Specific Language\n\nYou can use the [Command Palette](https://github.com/atom/command-palette) to beautify the editor for a specific language.\nThe commands are in the form `Atom Beautify: Beautify Language {NAME}` (i.e. `atom-beautify:beautify-language-{NAME}` for keyboard shortcuts).\nFor example, you may want to beautify `JavaScript` code within a `HTML` file.\n\n![atom-beautify-language-commands](https://cloud.githubusercontent.com/assets/1885333/25775586/f3fc7ec4-327e-11e7-8576-45e735e80032.gif)\n\n### Selection of Code\n\nIt will only beautify selected text if a selection is found -- if not, the whole file will be beautified.\n\n| Selection of Code | Beautify Selection of Code | Beautify Entire File |\n| --- | --- | --- |\n| Select code in Atom editor | Only that selection is beautified | Without a selection all code is beautified |\n| ![image](https://cloud.githubusercontent.com/assets/1885333/16542597/b3f90c84-4085-11e6-8a0e-1b8604ae385c.png) | ![image](https://cloud.githubusercontent.com/assets/1885333/16542598/b5a86b10-4085-11e6-80cf-0afaf1a819c3.png) | ![image](https://cloud.githubusercontent.com/assets/1885333/16542603/b798ec24-4085-11e6-880e-8d3a2741940f.png) |\n\n### Beautify On Save\n\n`Beautify On Save` can be enabled for each language individually.\n\nFor example, for language `HTML` go into Atom-Beautify's package settings (`Atom` ➔ `Preferences` ➔ Search for `atom-beautify`), find `HTML`, and toggle the `Beautify On Save` option.\n\n![atom-beautify-setup-beautify-on-save](https://cloud.githubusercontent.com/assets/1885333/16542692/3e781e74-4089-11e6-9cf2-5a19af161093.gif)\n\n### Keyboard Shortcut\n\nYou can also type <kbd>Ctrl</kbd>-<kbd>Alt</kbd>-<kbd>B</kbd> as a shortcut or click `Packages > Beautify` in the menu.\n\n#### Custom Keyboard Shortcuts\n\nSee [Keymaps In-Depth](https://atom.io/docs/latest/behind-atom-keymaps-in-depth) for more details.\n\nFor example:\n\n```coffeescript\n'.editor':\n  'ctrl-alt-b': 'atom-beautify:beautify-editor'\n```\n\n## Configuration\n\nEdit your `.jsbeautifyrc` file in any of the following locations:\n\n- Atom Package Settings\n  `Atom` ➔ `Preferences` ➔ Search for `atom-beautify`\n- Same directory as current file\n- Project root\n`atom-beautify` will recursively look up from the current file's directory to find `.jsbeautifyrc`.\n- Your user's home directory\n\n**Note**: *Comments are supported in `.jsbeautifyrc` thanks to [strip-json-comments](https://github.com/sindresorhus/strip-json-comments).*\n\nSee examples of both ways inside [`examples/`](examples)\n\nSee [all supported options in the documentation at  `docs/options.md`](docs/options.md).\n\n### Simple\n\nSee [examples/simple-jsbeautifyrc/.jsbeautifyrc](examples/simple-jsbeautifyrc/.jsbeautifyrc).\n\n```json\n{\n  \"indent_size\": 2,\n  \"indent_char\": \" \",\n  \"other\": \" \",\n  \"indent_level\": 0,\n  \"indent_with_tabs\": false,\n  \"preserve_newlines\": true,\n  \"max_preserve_newlines\": 2,\n  \"jslint_happy\": true,\n  \"indent_handlebars\": true\n}\n```\n\n### Nested (Recommended)\n\nSee [examples/nested-jsbeautifyrc/.jsbeautifyrc](examples/nested-jsbeautifyrc/.jsbeautifyrc).\n\n```json\n{\n  \"html\": {\n    \"brace_style\": \"collapse\",\n    \"indent_char\": \" \",\n    \"indent_scripts\": \"normal\",\n    \"indent_size\": 6,\n    \"max_preserve_newlines\": 1,\n    \"preserve_newlines\": true,\n    \"unformatted\": [\"a\", \"sub\", \"sup\", \"b\", \"i\", \"u\"],\n    \"wrap_line_length\": 0\n  },\n  \"css\": {\n    \"indent_char\": \" \",\n    \"indent_size\": 4\n  },\n  \"js\": {\n    \"indent_size\": 2,\n    \"indent_char\": \" \",\n    \"indent_level\": 0,\n    \"indent_with_tabs\": false,\n    \"preserve_newlines\": true,\n    \"max_preserve_newlines\": 2,\n    \"jslint_happy\": true\n  },\n  \"sql\": {\n    \"indent_size\": 4,\n    \"indent_char\": \" \",\n    \"indent_level\": 0,\n    \"indent_with_tabs\": false\n  }\n}\n```\n\n## Troubleshooting\n\nSee [`docs/troubleshooting.md`](docs/troubleshooting.md).\n\n## Contributing\n\nSee [`CONTRIBUTING.md`](CONTRIBUTING.md).\n\n[See all contributors on GitHub](../../graphs/contributors).\n\nPlease update the [CHANGELOG.md](CHANGELOG.md),\nadd yourself as a contributor to the [package.json](package.json),\nand submit a [Pull Request on GitHub](https://help.github.com/articles/using-pull-requests/).\n\n## License\n\n[MIT](LICENSE.md) © [Glavin Wiechert](https://github.com/Glavin001)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/Glavin001/atom-beautify.git"
  },
  "scripts": {
    "build-options": "node script/build-options.js",
    "code-docs": "codo && open docs/code/index.html",
    "docs": "npm run build-options && coffee docs/",
    "lint": "coffeelint src/ spec/",
    "prepare": "npm run docs",
    "pretest": "npm run lint",
    "test": "atom --test spec"
  },
  "version": "0.32.2"
}
