# Options {{{1
# Change default prefix key to something more convenient
unbind C-b
set -g prefix C-g
bind C-g send-prefix

# Improve key handling
set -sg escape-time 0
set -sg repeat-time 600

# Show messages longer
set -g display-time 3000

# Keep command history and increase its limit
set -g history-file ~/.local/share/tmux/history
set -g history-limit 8192

# Less stretching to get to the first item.
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows sequentially after closing any of them
set -g renumber-windows on

# Allow programs to change window titles
set -g allow-rename on

# Enable supported focus events
set -g focus-events on

# 256 color terminal
set -g default-terminal "screen-256color"

# Terminal overrides
set-option -g -a terminal-overrides ',xterm-256color:Tc' # True color support.

# Generate xterm(1) -style function key sequences
setw -g xterm-keys on

# Enable WM window titles
set -g set-titles on

# WM window title string
set -g set-titles-string "#W [#S:#I]"

# Mouse support
set -g mouse on

# Activity
setw -g monitor-activity on
set -g visual-activity off

# Restrain window size based on smallest client
setw -g aggressive-resize on

# Autorename sanely.
setw -g automatic-rename on

# Mappings {{{1
# Reload the config.
bind r source-file ~/.config/tmux/config \; display "Reloaded ~/.config/tmux/config"

# Choose a session
bind S choose-session

# Split pane with same directory
bind s split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'

# Switch panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Pane resizing
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5

# Better explicit window naming
bind c new-window \; command-prompt "rename-window '%%'"
bind C new-window
bind , command-prompt "rename-window '%%'"

# Quick pane cycling
bind g select-pane -t :.+

# Copy mode
setw -g mode-keys vi
bind ` copy-mode
unbind [
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi V send-keys -X select-line
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle

# Copy directly to system keyboard
bind -T copy-mode-vi C-y send-keys -X copy-pipe-and-cancel pbcopy

# Copy to system keyboard and paste immediately to tmux window
bind -T copy-mode-vi C-Y send-keys -X copy-pipe-and-cancel 'pbcopy; tmux paste-buffer -s ""'

# Copy tmux buffer into system clipboard
bind C-y run "tmux show-buffer | pbcopy"

# Copy system clipboard into tmux buffer
bind C-p run "tmux set-buffer \"$(pbpaste)\"; tmux paste-buffer"

# Paste from buffer
bind p paste-buffer -s '' # Paste without CR feed.
bind P choose-buffer "paste-buffer -b '%%' -s ''"

# Search
bind -T copy-mode-vi / command-prompt -i -p '/' 'send-keys -X search-forward-incremental "%%%"'
bind -T copy-mode-vi ? command-prompt -i -p '?' 'send-keys -X search-backward-incremental "%%%"'

# Search via copy mode
bind / copy-mode \; send-keys '/'
bind ? copy-mode \; send-keys '?'

# C-l is taken over by vim style pane navigation
bind C-S-l send-keys 'C-l'

# Zoom the current pane
bind C-k resize-pane -Z

## Kill (with confirmation)
bind \ confirm kill-session
bind C-\ confirm kill-server

## New session
#bind C confirm new-session

# Non-prefix mappings {{{2
# More convenient detach
bind -n C-\ detach

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Launch/App mappings {{{2
# Open a man page
bind K command-prompt "split-window 'exec env LESS_TERMCAP_mb=$(printf \"\e[1;31m\") LESS_TERMCAP_md=$(printf \"\e[1;31m\") LESS_TERMCAP_me=$(printf \"\e[0m\") LESS_TERMCAP_se=$(printf \"\e[0m\") LESS_TERMCAP_so=$(printf \"\e[1;44;33m\") LESS_TERMCAP_ue=$(printf \"\e[0m\") LESS_TERMCAP_us=$(printf \"\e[1;32m\") man %%'"

# Quick view of processes
bind '~' split-window "exec htop"

# Style {{{1
# tmuxline theme
if-shell "test -f ~/.config/tmux/tmuxline.conf" "source ~/.config/tmux/tmuxline.conf"

# vim: set et sts=4 fdm=marker fdl=0 :
