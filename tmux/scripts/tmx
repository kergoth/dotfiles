#!/bin/sh

usage () {
    cat >&2 <<END
Usage: ${0##*/} [OPTIONS] GROUP_NAME [COMMAND [COMMAND..]

Creates a new session for the specified group.

Options:
  -l  List existing groups rather than creating a session
  -k  Kill specified session group rather than creating a session
  -d  Start the session detached
END
    # shellcheck disable=SC2046
    if [ $(list_groups | wc -l) -gt 0 ]; then
        echo >&2
        echo >&2 "Existing groups:"
        list_groups | sed -e 's/^/  /' >&2
    fi
    exit 2
}

list_groups () {
    tmux ls -F '#{?session_grouped,#{session_group},}' 2>/dev/null \
        | sort -u
}

modulo () {
    bc <<END
scale=0
$1 % $2
END
}

# Ensure we get unicode/256color
tmux() {
    if [ -e ~/.config/tmux/config ]; then
        set -- -f ~/.config/tmux/config "$@"
    fi
    if command -v direnv >/dev/null 2>&1; then
        direnv exec / tmux -u2 "$@"
    else
        command tmux -u2 "$@"
    fi
}

get_group () {
    tmux ls -F '#{session_group} #S' 2>/dev/null \
        | grep "^$1 " \
        | cut -d" " -f2
}

kill_group() {
    get_group "$1" | xargs -I"{}" tmux kill-session -t "{}"
}


kill=0
detached=0
while getopts lkdh opt; do
    case "$opt" in
        l)
            list_groups
            exit 0
            ;;
        k)
            kill=1
            ;;
        d)
            detached=1
            ;;
        \? | h)
            usage
            ;;
    esac
done
shift $((OPTIND - 1))

if [ -n "$TMUX_PANE" ] && [ $kill -eq 1 ] && [ $# -eq 0 ]; then
    group="$(tmux list-panes -t "$TMUX_PANE" -F '#{session_group}' | head -n 1)"
    if [ -n "$group" ]; then
        kill_group "$group"
        exit $?
    fi
fi

if [ $# -eq 0 ]; then
    usage
fi

group="$(echo "$1" | tr . _)"
shift

if [ $kill -eq 1 ]; then
    kill_group "$group"
    exit $?
fi


if list_groups | grep -qFx "$group"; then
    existing=1
else
    existing=0
fi

session="$(tmux new-session -d -t "$group" -P | cut -d: -f1)" || exit $?
if [ $# -gt 0 ] && [ $existing -eq 0 ]; then
    tmux-run-cmds -t "$session" -k "$@"
else
    tmux-resize-adaptable -t "$session" -p 50 -l main-vertical
fi

if [ $detached -eq 0 ]; then
    exec tmux attach-session -t "$session"
fi
