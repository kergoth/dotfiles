%YAML 1.2
---

# See http://www.sublimetext.com/docs/3/syntax.html

name: BitBake
file_extensions: [bb, bbappend, bbclass, conf, inc]
scope: source.bitbake

variables:
  operators_assignment: '(=|\+=|=\+|\?=|=\?|\?\?=|=\?\?|\.=|\:=)'
  reserved: '(DESCRIPTION|SECTION|LICENSE|LIC_FILES_CHKSUM|HOMEPAGE|PROVIDES|DEPENDS|SRC_URI|SRCREV|PACKAGE_ARCH|COMPATIBLE_MACHINE|TCLIBC|FILESEXTRAPATHS|MACHINE_FEATURES|IMAGE_FSTYPES|UBOOT_BINARY|EXTRA_IMAGEDEPENDS|MACHINE_FEATURES|KERNEL_IMAGETYPE|KERNEL_DEVICETREE|PREFERRED_PROVIDER|PREFERRED_VERSION|DEFAULTTUNE|IMAGE_CLASSES|SUMMARY|COMPATIBLE_HOST|FILES|PACKAGES|RDEPENDS|EXTRA_OECONF|EXTRA_OEMAKE|PR|PV|PN|S|B|D|EXTRA_OECMAKE|PYTHON_BASEVERSION)'
  keywords: '(addtask|deltask)'

contexts:
  main:
    - include: comments
    - include: sharing_functionality
    - include: function_defnitions
    - include: variable_assignments

    - match: '\S'
      set:
      - meta_scope: invalid.illegal
      with_prototype:
      - match: '\n'
        pop: true

# ------------------------------------------------------------------------------

  comments:
    - match: '^\s*#'
      set:
      - meta_scope: comment.line.bitbake
      with_prototype:
      - match: '$'
        pop: true

  function_defnitions:
    - match: '^\s*(python)\s+(\w*)\s*\(\)\s*{'
      captures:
        1: storage.type.bitbake
        2: entity.name.function.bitbake
      set: Packages/Python/Python.sublime-syntax
      with_prototype:
      - match: '}'
        pop: true

    - match: '^\s*(\w+)\s*\(\)\s*{'
      captures:
        1: entity.name.function.bitbake
      set: Packages/ShellScript/Shell-Unix-Generic.sublime-syntax
      with_prototype:
      - match: '}'
        pop: true

  variable_assignments:
    - match: '^\s*(?:(export)\s+)?([\w\-]+(?:\${[\w\-]+})?)(\[\w+\])?(\-\w+)?(?=\s*{{operators_assignment}})'
      captures:
        1: storage.modifier.bitbake
        2: variable.other.bitbake
      push: assignment_scope

  sharing_functionality:
    - match: '^\s*(inherit|include|require|INHERIT)\b'
      captures:
        1: keyword.control.import.bitbake
      push: sharing_functionality_scope

# ------------------------------------------------------------------------------

  assignment_scope:
    - match: '{{operators_assignment}}'
      scope: keyword.operator.assignment.bitbake
    - include: strings
    - include: number
    - match: '\n'
      pop: true

  sharing_functionality_scope:
    - match: '\n'
      pop: true

  strings:
    - match: "'"
      scope: punctuation.definition.string.begin.bitbake
      push: string_single_quoted

    - match: '"'
      scope: punctuation.definition.string.begin.bitbake
      push: string_double_quoted

  string_single_quoted:
    - meta_scope: string.quoted.single.bitbake
    - include: string_escaped_char
    - match: "'"
      scope: punctuation.definition.string.end
      pop: true

  string_double_quoted:
    - meta_scope: string.quoted.double.bitbake
    - include: string_escaped_char
    - match: '"'
      scope: punctuation.definition.string.end
      pop: true

  string_escaped_char:
    - match: '\\(.|\n)'
      scope: constant.character.escape.bitbake
