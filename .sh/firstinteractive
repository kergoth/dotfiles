normalfg=""
codetogitcolor () {
    code="$1"
    state=""
    attr=""
    fg=""
    bg=""
    for i in `echo $code | sed -e's,\;, ,g'`; do
        if [ "$state" = "fg" ]; then
            if [ "$i" = "5" ]; then
                continue
            else
                fg=$i
                state=""
            fi
        elif [ "$state" = "bg" ]; then
            if [ "$i" = "5" ]; then
                continue
            else
                bg=$i
                state=""
            fi
        else
            if [ $i = "38" ]; then
                state="fg"
            elif [ $i = "48" ]; then
                state="bg"
            elif [ $i = "1" ]; then # bold
                attr="bold"
            elif [ $i = "7" ]; then
                attr="reverse"
            fi
            continue
        fi
    done

    val=""
    if [ -n "$fg" ]; then
        val="$fg"
        if [ -n "$bg" ]; then
            val="$val $bg"
        fi
        if [ -n "$attr" ]; then
            val="$val $attr"
        fi
    elif [ -n "$bg" -a -n "$normalfg" ]; then
        val="$normalfg $bg"
        if [ -n "$attr" ]; then
            val="$val $attr"
        fi
    elif [ -n "$attr" ]; then
        val="$attr"
    fi
    echo "$val"
}
if [ "$PS1" -a -n "$TERM" ]; then
    if [ -r "$HOME/.vim/colorcodes.vim" ]; then
        vim --noplugin -c "so $HOME/.vim/colorcodes.vim | quit" >/dev/null 2>&1
    fi
    normalcode=`cat $HOME/.vimcolors|grep "^normalfg "|sed -e"s,^normalfg ,,"`
    normalfg=`codetogitcolor "$normalcode"|sed -e's, .*$,,'`
    if [ -z "$normalfg" ]; then
        normalfg="white"
    fi
    if [ -e $HOME/.vimcolors ]; then
        if [ -e $HOME/.vimtodircolors ]; then
            cat $HOME/.vimtodircolors | grep -v "^#" | while read dircolor higrp; do
                code=`cat $HOME/.vimcolors|grep "^$higrp "|sed -e"s,^$higrp ,,"`
                echo $dircolor $code
            done > $HOME/.dir_colors
        fi
        if [ -e $HOME/.vimtogitcolors ]; then
#            git-config --global $param $value
            while read param higrp; do
                if [ -z "$param" ] || echo "$param" | grep -q "^#"; then
                    continue
                fi
                code=`cat $HOME/.vimcolors|grep "^$higrp "|sed -e"s,^$higrp ,,"`
                gitcolor=`codetogitcolor "$code"`
                if [ -z "$gitcolor" ]; then
                    echo >&2 "Unable to determine git color for highlight group $higrp."
                else
                    git config --global --replace-all $param "$gitcolor"
                fi
            done < $HOME/.vimtogitcolors
        fi
    fi

    GREP_OPTIONS='--color=auto'
    if grep -V --color >/dev/null 2>&1; then
        if [ -e $HOME/.vimcolors -a -e $HOME/.vimtogrepcolors ]; then
            GREP_COLORS=""
            while read cap higrp; do
                if echo "$cap" | grep -q "^#"; then
                    continue
                fi
                code=`cat $HOME/.vimcolors|grep "^$higrp "|sed -e"s,^$higrp ,,"`
                if [ -n "$GREP_COLORS" ]; then
                    GREP_COLORS="$GREP_COLORS:$cap=$code"
                else
                    GREP_COLORS="$cap=$code"
                fi
            done < $HOME/.vimtogrepcolors
        fi
    fi
    export GREP_OPTIONS GREP_COLORS

    if [ -e "$HOME/.dir_colors" ]; then
        export DIR_COLORS="$HOME/.dir_colors"
        eval `dircolors -b $DIR_COLORS`
    else
        eval `dircolors`
    fi
fi

git config --global --replace-all core.excludesfile $HOME/.gitexcludes

# vim: set fenc=utf-8 sts=4 sw=4 et ft=sh:
