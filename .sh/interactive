inpath() {
    which $1 >/dev/null 2>&1
}

set_ps1() {
    if [ "$1" = "notermtitle" ]; then
        XTERM_SET=''
    else
        case $TERM in
        rxvt*|Xterm|xterm|aterm|urxvt*|cygwin)
            XTERM_SET='\[\033]0;\u@\h:\w\007\]'
            ;;
        *)
            XTERM_SET=''
            ;;
        esac
    fi
    if [ -n "$CLEARCASE_ROOT" ]; then
        CCASE="[`echo $CLEARCASE_ROOT|cut -d/ -f3`]"
        VOBPATH="`cleartool lsvob|grep ^*|awk '{print $2}'|head -1|xargs dirname`"
        cd $VOBPATH
    fi
    if [ -n "$VIM" ]; then
        INVIM="[vim]"
    fi
    if [ -n "$debian_chroot" ]; then
        DEBIAN_CHROOT="[$debian_chroot]"
    elif [ -r "/etc/debian_chroot" ]; then
        DEBIAN_CHROOT="[$(cat /etc/debian_chroot)]"
    fi
    # Check for color support in this terminal
    if which tput >&/dev/null; then
        if tput setaf 1 >&/dev/null; then
            color=1
        else
            color=0
        fi
        local kbs="$(tput kbs)"
        if [ -n "$kbs" ]; then
            stty erase "$kbs"
        fi
    else
        color=1
    fi
    if [ $color -eq 1 ]; then
        if which dircolors >&/dev/null; then
            eval `dircolors`
        fi
        alias ls='ls --color=auto -a -p'
        PS1="$XTERM_SET\[\033[0;36m\]\u@\h\[\033[1;00m\] ${DEBIAN_CHROOT}$CCASE$INVIM\W\$(scm-prompt-output)\$ "
    else
        alias ls='ls -a -p'
        PS1="$XTERM_SET\u@\h ${DEBIAN_CHROOT}$CCASE$INVIM\W\$(scm-prompt-output)\$ "
    fi
    # export PROMPT_COMMAND='echo -n -e "\033k\033\134"'
    unset XTERM_SET CCASE VOBPATH INVIM

}

setup_interactive () {
    export SHELL

    # Coloring matching text in grep rocks
    if grep -V --color >&/dev/null; then
        GREP_OPTIONS='--color=auto'
        GREP_COLOR='1;31'
        export GREP_OPTIONS GREP_COLOR
    fi

    if which colordiff 2>/dev/null >&2; then
        export GIT_DIFF_PAGER="colordiff | less -RS"
    fi

    set_ps1

    if [ -z "$day" ]; then
        day="`date +%A|tr A-Z a-z`"
    fi
    fortune ~/.fortunes/days.$day 2>/dev/null
    echo

    if [ -z "$TERMCAP" ]; then
        # Deal with missing terminal types on certain machines.
        _c="`echo $TERM|sed -e's,^\(.\).*$,\1,'`"
        if ! test -e /usr/share/terminfo/$_c/$TERM &&
            ! test -e $TERMINFO/$_c/$TERM; then
            TERM=rxvt
        else
            # ugh, damn old termcap based applications
            infocmp -C > $HOME/.termcap 2>/dev/null
            TERMCAP="$HOME/.termcap"
        fi
        unset _c
    elif [ "$TERM" = "screen" -o "$TERM" = "screen-bce" ]; then
        # Terminfo entries for screen are static, and don't seem to adapt when
        # screen is built with 256 color support... so... generate a new one
        # based on the TERMCAP variable that screen sets. (NOTE: stock screen
        # doesn't adjust the Co value in the TERMCAP env var to the number of
        # colors it was built to support. I have a patch to fix that.)
        mkdir -p $HOME/.terminfo/s
        captoinfo > $HOME/.terminfo/s/$TERM 2>/dev/null
        tic $HOME/.terminfo/s/$TERM 2>/dev/null
    fi

    export TERM TERMCAP

    fortune ~/.fortunes 2>/dev/null
}

if [ "$PS1" ]; then
    setup_interactive
fi

