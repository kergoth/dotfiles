inpath() {
    which $1 >/dev/null 2>&1
}

printdayinfo () {
    day=$1
    if test -z "$day"; then return 1; fi
    (
        if ! inpath fmt; then cmd="cat"; else cmd="fmt"; fi
        while read dayname desc; do
            if [ "$day" = "$dayname" ]; then
                echo $day $desc | $cmd
            fi
        done
    ) <<END
Sunday		sucks, because tomorrow is monday.
Monday		is when everything breaks for no apparent reason, creating so many problems it takes you until friday to get back to normal.
Tuesday		sucks, because it follows monday.
Wednesday	sucks, because it is only half way through the week.
Thursday	sucks, because it isnt friday.
Friday		sucks, because it should be the weekend, but you're stuck working anyway.
Saturday	is the only day of the week that doesn't suck.
END
    return 0
}

setup_interactive () {
    export SHELL
    eval `dircolors`
    alias ls='ls --color=auto -a -p'
    # Coloring matching text in grep rocks
    GREP_OPTIONS='--color=auto'
    GREP_COLOR='1;31'
    export GREP_OPTIONS GREP_COLOR
    case $TERM in
    rxvt*|Xterm|xterm|aterm|urxvt*)
        XTERM_SET='\[\033]0;\u@\h:\w\007\]'
        ;;
    *)
        XTERM_SET=''
        ;;
    esac
    if [ -n "$CLEARCASE_ROOT" ]; then
        CCASE="[`echo $CLEARCASE_ROOT|cut -d/ -f3`]"
        VOBPATH="`cleartool lsvob|grep ^*|awk '{print $2}'|head -1|xargs dirname`"
        cd $VOBPATH
    fi
    if [ -n "$VIM" ]; then
        INVIM="[vim]"
    fi
    if [ -n "$debian_chroot" ]; then
        DEBIAN_CHROOT="[$debian_chroot]"
    fi
    PS1="$XTERM_SET\[\033[0;36m\]\u@\h\[\033[1;00m\]
${DEBIAN_CHROOT}$CCASE$INVIM\w\$ "
    export PROMPT_COMMAND='echo -n -e "\033k\033\134"'
    [ -z "$day" ] && day=`date +%A`
    printdayinfo $day
    unset XTERM_SET CCASE VOBPATH INVIM

    if [ -z "$TERMCAP" ]; then
        # Deal with missing terminal types on certain machines.
        _c="`echo $TERM|sed -e's,^\(.\).*$,\1,'`"
        if ! test -e /usr/share/terminfo/$_c/$TERM &&
            ! test -e $TERMINFO/$_c/$TERM; then
            TERM=rxvt
        else
            # ugh, damn old termcap based applications
            infocmp -C > $HOME/.termcap 2>/dev/null
            TERMCAP="$HOME/.termcap"
        fi
        unset _c
    elif [ "$TERM" = "screen" -o "$TERM" = "screen-bce" ]; then
        # Terminfo entries for screen are static, and don't seem to adapt when
        # screen is built with 256 color support... so... generate a new one
        # based on the TERMCAP variable that screen sets. (NOTE: stock screen
        # doesn't adjust the Co value in the TERMCAP env var to the number of
        # colors it was built to support. I have a patch to fix that.)
        mkdir -p $HOME/.terminfo/s
        captoinfo > $HOME/.terminfo/s/$TERM 2>/dev/null
        tic $HOME/.terminfo/s/$TERM 2>/dev/null
    fi

    export TERM TERMCAP
}

if [ "$PS1" ]; then
    setup_interactive
fi

