#!/bin/sh
# OSX-only script to run ddimage against the internal SD Card Reader on a Mac

set -u

get_sdcard_device() {
    diskutil list | sed -n '/^\/dev\/disk/s/ (internal, physical)://p' \
        | grep -v '/dev/disk0$' | while read -r disk; do
            if [ "$(diskutil info "$disk" | sed -n 's# *Device / Media Name: *##p')" = "SD Card Reader" ]; then
                echo "$disk"
                return 0
            fi
        done
    return 1
}

should_continue() {
    while true; do
        printf '%s [Yn]? ' "${1:-Continue}"
        read -r input
        case "$input" in
            [Nn])
                return 1
                ;;
            [Yy])
                break
                ;;
            "")
                break
                ;;
            *)
                printf 'Invalid input: `%s`\n' "$input"
                ;;
        esac
    done
    return 0
}

if [ $# -ne 1 ]; then
    echo >&2 "Usage: ${0##*/} IMAGE_FILE"
    exit 2
fi

sdcard_device="$(get_sdcard_device)"
if [ -z "$sdcard_device" ]; then
    echo >&2 "Error: no SD card found"
    exit 1
fi

diskutil info "$sdcard_device"
diskutil list "$sdcard_device"

if ! should_continue; then
    exit 1
fi

diskutil unmountDisk "$sdcard_device" || exit $?
rdevice="/dev/r${sdcard_device#/dev/}"
if [ "$sdcard_device" = "/dev/disk1" ]; then
    # ddimage is picky, excluding disk0 & disk1, but disk1 as the SD card
    # reader is valid on some Macs.
    if which pv >/dev/null 2>&1; then
        pv "$1" | sudo dd of="$rdevice" bs="1m"
    else
        sudo dd if="$1" of="$rdevice" bs="1m"
    fi
else
    sudo ddimage "$1" "$rdevice"
fi
