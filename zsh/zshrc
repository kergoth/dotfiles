ZSH=$DOTFILESDIR/zsh

# Emacs mode
bindkey -e

# use .localrc for SUPER SECRET CRAP that you don't
# want in your public, versioned repo.
if [[ -a ~/.localrc ]]; then
    source ~/.localrc
fi

# all of our zsh files
typeset -U config_files
config_files=($DOTFILESDIR/*/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}; do
    source $file
done

# pre-load plugin configuration
AUTOENV_AUTH_FILE=$XDG_DATA_HOME/autoenv_authorized

# Load "plugins"
for file in $ZSH/plugins/*/*.plugin.zsh $ZSH/plugins/*/activate.sh; do
    case "$file" in
        */syntax-highlighting/*)
            continue
            ;;
    esac
    source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}; do
    source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
if [[ $PSEUDO_DISABLED = 0 ]]; then
    # When running under pseudo, we're actually still ourselves, so silently
    # ignore the compaudit.
    compinit -u -d $XDG_CACHE_HOME/zsh/zcompdump
else
    compinit -d $XDG_CACHE_HOME/zsh/zcompdump
fi

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}; do
    source $file
done

unset config_files

# Load manually loaded "plugins"
. $ZSH/plugins/bd/bd.zsh
. $ZSH/plugins/fzf/key-bindings.zsh
. $ZSH/plugins/fzf/completion.zsh
if [[ $OSTYPE =~ darwin ]]; then
    . $ZSH/plugins/iterm2/iterm2.zsh

    f_notifyme () {
      LAST_EXIT_CODE=$?
      CMD=$(fc -ln -1)
      # No point in waiting for the command to complete
      notifyme "$CMD" "$LAST_EXIT_CODE" &
    }

    export PS1='$(f_notifyme)'"$PS1"
fi

if [[ "$PROFILE_STARTUP" == true ]]; then
    unsetopt xtrace
    exec 2>&3 3>&-
fi
