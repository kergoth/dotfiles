#!/bin/sh
# OSX-only script to run bmaptool against the internal SD Card Reader on a Mac

set -u

get_sdcard_device () {
    diskutil list | sed -n '/^\/dev\/disk/s/ (internal, physical)://p' | \
        grep -v '/dev/disk0$' | while read -r disk; do
            if [ "$(diskutil info "$disk" | sed -n 's# *Device / Media Name: *##p')" = "SD Card Reader" ]; then
                echo "$disk"
                return 0
            fi
        done
    return 1
}

should_continue () {
    while true; do
        printf '%s [Yn]? ' "${1:-Continue}"
        read -r input
        case "$input" in
            [Nn])
                return 1
                ;;
            [Yy])
                break
                ;;
            "")
                break
                ;;
            *)
                printf 'Invalid input: `%s`\n' "$input"
                ;;
        esac
    done
    return 0
}

if [ $# -eq 0 ]; then
    echo >&2 "Usage: ${0##*/} BMAP_FILE [IMAGE_FILE]"
    echo >&2
    echo >&2 "If unspecified, IMAGE_FILE is BMAP_FILE with .bmap replaced by .bz2"
    exit 2
fi

bmap_file="$1"
if [ $# -lt 2 ]; then
    found=0
    for ext in '' '.bz2' '.gz' '.xz'; do
        image_file="${bmap_file%.bmap}$ext"
        if [ -f "$image_file" ]; then
            found=1
            break
        fi
    done
    if [ $found -eq 0 ]; then
        echo >&2 "Error: unable to find image file for $bmap_file, please specify"
        exit 1
    fi
fi

if [ "$image_file" = "$bmap_file" ]; then
    if [ -e "$image_file.bmap" ]; then
        bmap_file="$image_file.bmap"
    fi
fi

sdcard_device="$(get_sdcard_device)"
if [ -z "$sdcard_device" ]; then
    echo >&2 "Error: no SD card found"
    exit 1
fi

diskutil info "$sdcard_device"
diskutil list "$sdcard_device"

if ! should_continue; then
    exit 1
fi

diskutil unmountDisk "$sdcard_device" || exit $?
rdevice="/dev/r${sdcard_device#/dev/}"
sudo -k bmaptool copy --bmap "$bmap_file" "$image_file" "$rdevice"
