#!/bin/sh

usage() {
    cat >&2 <<END
${0##*/} [options] CSV_FILE

Options:
  -c CATEGORY Filter output by category
  -l LIMIT    Limit the number of entries shown to LIMIT
  -a          Show totals for each category / all categories
  -i          Show income only
  -e          Show expenses only
  -r          Reverse sort
END
    exit 2
}

main() {
    reverse_sort=
    category_totals=0
    category=
    income=0
    expense=0
    limit=
    while getopts c:aierl:h opt; do
        case "$opt" in
            c)
                category="$OPTARG"
                ;;
            a)
                category_totals=1
                ;;
            i)
                income=1
                expense=0
                ;;
            e)
                expense=1
                income=0
                ;;
            r)
                reverse_sort=1
                ;;
            l)
                limit="$OPTARG"
                ;;
            \? | h)
                usage
                ;;
        esac
    done
    shift $((OPTIND - 1))

    if [ $# -eq 0 ]; then
        usage
    fi

    cat "$@" \
        | ynab-cleanup \
        | ynab-adjust-categories \
        | csvgrep -i -c Category -r '^$' \
        | adjust_payees \
        | if [ $income -eq 1 ]; then csvgrep -c Inflow -i -r '^\$0.00'; elif [ $expense -eq 1 ]; then csvgrep -c Outflow -i -r '^\$0.00'; else cat; fi \
        | ynab-combine-flows \
        | gather_totals \
        | if [ -n "$limit" ]; then csvsql --query "select * from stdin order by Total ${reverse_sort:+DESC} limit $limit"; else csvsort -c Total ${reverse_sort:+-r}; fi \
        | csvcurrencyformat Total \
        | if [ -t 1 ]; then
            csvlook -I
        else
            cat
        fi
}

adjust_payees() {
    sed -e "s/Wal-Mart/Walmart/g; s/Fry's Marketplace/Fry's/g; s/Fry's Food/Fry's/g;"
}

gather_totals() {
    if [ $category_totals -eq 1 ]; then
        csvsql --query "SELECT Category, ROUND(SUM(Amount)/12,2) AS Total FROM stdin GROUP BY Category ORDER BY Total"
    elif [ -n "$category" ]; then
        csvgrep -c Category -r "$category" \
            | csvsql --query "SELECT Payee, ROUND(SUM(Amount)/12,2) AS Total FROM stdin GROUP BY Payee ORDER BY Total"
    else
        csvsql --query "SELECT Payee, ROUND(SUM(Amount)/12,2) AS Total, Category FROM stdin GROUP BY Payee, Category ORDER BY Total"
    fi \
        | sed -e 's/^[ ️️]*//'
}

main "$@"
