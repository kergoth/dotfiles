#!/bin/sh
# Pipsi wrapper with some small conveniences:
# - Additional arguments to the install command will also be installed into
#   the virtualenv with pip
# - Accept multiple packages/environments for the upgrade command
# - Add -s/--short to the list command

quote() {
    sed -e "s,','\\\\'',g; 1s,^,',; \$s,\$,',;" <<EOF
$1
EOF
}

save() {
    case "$1" in
        # when a string contains a "'" we have to escape it
        *\'*)
            saved="$saved $(quote "$1")"
            ;;
        # otherwise just quote the variable
        *)
            saved="$saved '$1'"
            ;;
    esac
}

# Save arguments up to install
saved=
cmd=
while [ $# -ne 0 ]; do
    arg="$1"
    save "$arg"
    shift
    if [ "$arg" = install ]; then
        cmd=install
        save --python
        save python2
        break
    elif [ "$arg" = upgrade ]; then
        cmd=upgrade
        break
    elif [ "$arg" = list ]; then
        cmd=list
        break
    fi
done

if [ -z "$cmd" ]; then
    eval set -- "$saved"
    exec pipsi "$@"
elif [ "$cmd" = list ]; then
    short=0
    if [ $# -ne 0 ]; then
        case "$1" in
            -s | --short)
                short=1
                shift
                ;;
        esac
    fi
    eval set -- "$saved" "$@"
    if [ "$short" -eq 1 ]; then
        pipsi "$@" | sed -n -e 's/  Package "\(.*\)".*/\1/p'
        exit $?
    else
        pipsi "$@"
        exit $?
    fi
fi

# Skip args leading up to the package name
while [ $# -ne 0 ]; do
    arg="$1"
    case "$arg" in
        --python)
            save "$arg"
            shift
            save "$1"
            shift
            ;;
        -*)
            save "$arg"
            shift
            ;;
        *)
            break
            ;;
    esac
done

env="$1"
shift
extras="$*"

eval set -- "$saved"

ret=0
if [ "$cmd" = install ]; then
    pipsi "$@" "$env" || ret=$?
    if [ -n "$extras" ]; then
        pipsi_env="${PIPSI_HOME:-${XDG_DATA_HOME:-~/.local/share}/../venvs}/$env"
        # shellcheck disable=SC1090
        . "$pipsi_env/bin/activate" || exit 1
        # shellcheck disable=SC2086
        pip install $extras || ret=$?
    fi
elif [ "$cmd" = upgrade ]; then
    for e in "$env" $extras; do
        pipsi "$@" "$e" || ret=$?
    done
fi
exit "$ret"
