#!/bin/sh

_install () {
    lang="$1"
    shift
    echo >&2 "Installing $lang.."
    command "$@" ${tolog:+>"$log" 2>&1}
    if [ $? -ne 0 ]; then
        echo >&2 "Error: $lang installation failed:"
        ${tolog:+tail "$log"}
        ret=1
    fi
}

quiet () {
    cat >/dev/null 2>&1
}

log="$(mktemp -t "${0##*/}.XXXXXX")" || exit $?
trap 'rm -f "$log"' EXIT INT TERM
ret=0

usage() {
    cat >&2 <<END
    ${0##*/} [options] [-v]

    Options:
    -v  Verbose
END
exit 2
}

tolog=1
while getopts vh opt; do
    case "$opt" in
        v)
            tolog=
            ;;
        \? | h)
            usage
            ;;
    esac
done
shift $((OPTIND - 1))

echo >&2 "Installing prerequisites"
# Install needed deps
if command -v pacman >/dev/null 2>&1; then
    sudo pacman -Sy --needed openssl openssl-1.0 bzip2 sqlite ncurses unzip
elif command -v apt-get >/dev/null 2>&1; then
    sudo apt-get -y install --no-upgrade libssl-dev libbz2-dev libsqlite3-dev libncurses5-dev unzip
elif command -v brew >/dev/null 2>&1; then
    brew install openssl bzip2 sqlite3 ncurses unzip
fi | sh -c "cat ${tolog:+>"$log" 2>&1}"

if [ $? -ne 0 ]; then
    echo >&2 "Error: prerequisites installation failed:"
    ${tolog:+tail "$log"}
    exit 1
fi

# shellcheck source=./install-asdf
. "$(dirname "$0")/install-asdf" || exit 1

for i in golang ruby rust; do
    _install "$i" asdf-install -g "$i"
done
_install haskell install-haskell
_install node install-node
_install python install-python-asdf
_install python-pipx install-pipx
_install python-pipsi install-pipsi

# TODO: remove the packages we installed, but not the ones the user did
exit "$ret"
