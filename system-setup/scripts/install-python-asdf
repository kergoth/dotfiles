#!/bin/sh

set -e

# Ensure we can run llvm-profdata on FreeBSD
for llvmdir in /usr/local/llvm*/bin; do
    if [ -d "$llvmdir" ]; then
        PATH="$PATH:$llvmdir"
    fi
done

export PYTHONNOUSERSITE=1
export CFLAGS="${CFLAGS--O2}"
export LDFLAGS

case "$OSTYPE" in
    darwin*)
        if which brew >/dev/null 2>&1; then
            eval "$(brew environment --shell=auto | grep -vw PATH)"
            CFLAGS="$CFLAGS -I$(brew --prefix sqlite)/include -I$(brew --prefix openssl)/include -I$(xcrun --show-sdk-path)/usr/include"
            LDFLAGS="$LDFLAGS -L$(brew --prefix sqlite)/lib -L$(brew --prefix openssl)/lib"
        fi
        ;;
esac

if [ -z "$CONFIGURE_OPTS" ] && [ -z "$PYTHON_CONFIGURE_OPTS" ]; then
    export PYTHON_CONFIGURE_OPTS="\
        --enable-shared \
        --with-system-expat \
        --with-system-zlib \
        --with-lto \
        --enable-loadable-sqlite-extensions \
    "
    no_pgo=0
    if [ "$OSTYPE" = linux-gnu ]; then
        case "$(uname -r)" in
            *-Microsoft)
                # WSL. test_ssl keeps hanging indefinitely
                no_pgo=1
                ;;
        esac
    elif [ "$(uname -s)" = FreeBSD ]; then
        no_pgo=1
        export PYTHON_CONFIGURE_OPTS="\
            --enable-shared \
            --with-system-expat \
            --with-system-zlib \
            --enable-loadable-sqlite-extensions \
        "
    fi
    if [ $no_pgo -eq 0 ]; then
        PYTHON_CONFIGURE_OPTS="$PYTHON_CONFIGURE_OPTS --enable-optimizations"
    fi
fi

. "$(dirname "$0")/install-asdf"

if [ -e "$ASDF_DIR/plugins/python" ]; then
    asdf plugin-update python
else
    asdf plugin-list-all | grep '^python ' | while read -r name url; do asdf plugin-add "$name" "$url"; done
fi

PY3_VERSION="${PY3_VERSION:-$(asdf list-all python | grep '^3' | grep -Ev '\-p|rc|dev' | sort -rn | head -n 1)}"
if [ ! -e "$ASDF_DIR/installs/python/$PY3_VERSION" ]; then
    asdf install python "$PY3_VERSION"
fi
asdf global python "$PY3_VERSION"

PY2_VERSION="${PY2_VERSION:-$(asdf list-all python | grep '^2' | grep -Ev '\-p|rc|dev' | sort -rn | head -n 1)}"
if [ ! -e "$ASDF_DIR/installs/python/$PY2_VERSION" ]; then
    asdf install python "$PY2_VERSION"
fi

asdf global python "$PY2_VERSION" "$PY3_VERSION"

PYENV_ROOT="$ASDF_DIR/plugins/python/pyenv"

# At this point python is python2, and python2 and python3 work as expected,
# but python tools run with these pythons will have that python install first
# in the PATH. In the case of python3, this means in that process, 'python'
# will now correspond to python3, which will not do (see bitbake).
if [ -e "$PYENV_ROOT/versions/$PY3_VERSION" ]; then
    rm -f "$PYENV_ROOT/versions/$PY3_VERSION/bin/python"
fi
