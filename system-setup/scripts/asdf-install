#!/bin/sh

set -eu

export ASDF_DATA_DIR="${ASDF_DATA_DIR:-$HOME/.asdf}"
export ASDF_DIR="$ASDF_DATA_DIR"

PATH="$(dirname "$0"):$PATH"

usage() {
    cat >&2 <<END
    ${0##*/} [options] PLUGIN [VERSION]

    Options:

    -g    Set to the default global version
END
    exit 2
}

version_sort() {
    python3 -c 'import distutils.version,sys; versions=sys.stdin.readlines(); sversions=sorted(distutils.version.LooseVersion(v.rstrip()) for v in versions); print("\n".join(str(v) for v in sversions))'
}

global=0
while getopts gh opt; do
    case "$opt" in
        g)
            global=1
            ;;
        \? | h)
            usage
            ;;
    esac
done
shift $((OPTIND - 1))

if [ $# -eq 0 ]; then
    usage
fi

if [ $# -eq 0 ]; then
    asdf install
fi

plugin=$1

asdf update >/dev/null 2>&1

if [ ! -e "$ASDF_DATA_DIR/plugins/$plugin" ]; then
    asdf-plugin-add "$plugin"
else
    asdf plugin-update "$plugin" >/dev/null 2>&1
fi

if [ "$plugin" = "nodejs" ]; then
    bash "$ASDF_DATA_DIR/plugins/nodejs/bin/import-release-team-keyring" >/dev/null 2>&1
fi

if [ $# -gt 1 ]; then
    version=$2
else
    version="$(asdf list-all "$plugin" | grep -E '^[0-9]*(\.[0-9]*(.[0-9]*)?)?$' | version_sort | tail -n 1)"
    if [ -z "$version" ]; then
        echo >&2 "Error locating latest version for $plugin"
        exit 1
    fi
fi

echo >&2 "asdf-install: installing version $version of $plugin"

asdf install "$plugin" "$version"

if [ $global -eq 1 ]; then
    asdf global "$plugin" "$version"
fi
