#!/bin/sh

export CFLAGS="${CFLAGS--O2}"
export LDFLAGS

# Shut up 2.7 deprecation warning
export PYTHONWARNINGS=ignore:DEPRECATION

# shellcheck disable=SC2039
case "$OSTYPE" in
    darwin*)
        if command -v brew >/dev/null 2>&1; then
            eval "$(brew environment --shell=auto | grep -vw PATH)"
            CFLAGS="$CFLAGS -I$(brew --prefix openssl)/include -I$(xcrun --show-sdk-path)/usr/include"
            LDFLAGS="$LDFLAGS -L$(brew --prefix openssl)/lib"
            : "${HOMEBREW_PREFIX:=/opt/homebrew}"
            export OPENSSL_DIR="$HOMEBREW_PREFIX/opt/openssl"
        fi
        ;;
    *)

        if command -v brew >/dev/null 2>&1; then
            brew unlink pkg-config >/dev/null 2>&1 || :
        fi
        ;;
esac

pythonuserdir="$(python -c 'import site; print(site.getuserbase())')" || exit 1
PATH="$pythonuserdir/bin:$(dirname "$0"):$HOME/.local/bin:$PATH"
cd /


pipv_installed () {
    pipsi list | sed -n -e 's/^  *Package "\([^"]*\)":$/\1/p' | grep -Fqx "$1"
}

pipx_installed () {
    pipx list | sed -n -e 's/^   *package \([^ ]*\).*/\1/p' | grep -Fqx "$1"
}

pipv () {
    if pipv_installed "$1"; then
        kpipsi upgrade "$@"
    else
        kpipsi install "$@"
    fi || { echo >&2 "Error installing $*"; return 1; }
}

pipv3 () {
    pipx-install "$@"
}

pip_install () {
    command python2 -m pip -q --disable-pip-version-check install --user -U "$@" || { echo >&2 "Error installing $*"; return 1; }
}

pip3_install () {
    command python3 -m pip -q install --user -U "$@" || { echo >&2 "Error installing $*"; return 1; }
}

export PIP_REQUIRE_VIRTUALENV=

mkdir -p "${XDG_DATA_HOME:-~/.local/share}"

# Clang and llvm are needed to build `bat`
if command -v pacman >/dev/null 2>&1; then
    sudo pacman -S --needed llvm clang cmake pkg-config
elif command -v apt-get >/dev/null 2>&1; then
    sudo apt-get -y install --no-upgrade llvm clang cmake pkg-config
fi

# cargo-update
export CARGO_INSTALL_ROOT=${CARGO_INSTALL_ROOT:-${XDG_DATA_HOME:-~/.local/share}/..}
cargo-install fd-find ripgrep bat exa git-delta git-series

# Upgrade pip
pip_install pip==18.1
pip3_install pip

## Interactive mode python tools
pip_install see
pip3_install see

## General Tools & Utilities
go get -u github.com/junegunn/fzf/...
pipv3 mercurial hg-git
pipv3 httpie
go get -u github.com/EricChiang/pup

# Very handy for screencasts
pipv3 asciinema

## For dotfiles
pipv3 peru

## Handy
go get -u github.com/direnv/direnv

## Script dependencies
go get -u github.com/tomnomnom/unfurl
pip_install sh
pip_install 'numpy<1.17' && pip_install hungarian # git-tbdiff
pip_install gitpython # buildhistory-diff

## Pinboard client
#npmv pin-cushion
#pipv3 python-json2yaml # pcposts zsh function

## Development Tools
go get -u github.com/github/hub
gemv gist
pipv3 git+https://github.com/kergoth/git-imerge@no-completions-in-setup
pipv3 git-revise
# pprintpp + pp-ez?
# twine?
# wheel?
#pip_install ptpython
pip_install pathlib2 click e better-exceptions-hook
pip3_install e better-exceptions-hook

## Documentation
#gemv ronn
#npmv doctoc

## Formatters
pipv3 yapf
GO111MODULE=on go get -u mvdan.cc/sh/v3/cmd/shfmt
go get -u github.com/shurcooL/markdownfmt
# autopep8 - format code per pep8
# https://pypi.python.org/pypi/docformatter - format docstrings per pep257
#npmv pretty-js
#luav formatter

## Linting / Static Analysis
pipv3 flake8 pep8-naming flake8-docstrings
stack install ShellCheck && asdf reshim haskell
#pipv prospector
#pipv vim-vint
#luav luacheck
#gemv mdl # markdown
# see also markdownlint
# http://lua-users.org/wiki/LuaInspect ?
# https://code.google.com/archive/p/lua-checker/ ?
# go get github.com/BurntSushi/toml/cmd/tomlv # for toml, but it's out of date. it only supports 0.1.0

## As Needed

#go get -u github.com/ddo/fast # bandwidth speed testing
#go get -u github.com/jbenet/go-multihash/multihash # If needed to create a hash for use by hashpipe
#go get -u github.com/jbenet/hashpipe
#pipv pockyt # cli for Pocket
#pipv pocket-cli # other cli for Pocket, better interface
#pip_install datefinder # search text for dates, ala path-extractor
#pip_install pipdeptree
#go get -u github.com/pengwynn/flint # check for missing license/etc for a project
# Seemingly no cli install for: terra (terralang.org)

# cha(rs) is a commandline tool to display information about unicode characters
#   https://github.com/antifuchs/chars
#cargo-install chars

# A more intuitive version of du in rust
#   https://github.com/bootandy/dust
#cargo-install du-dust

# a calculator REPL, similar to bc(1)
#   https://github.com/NerdyPepper/eva
#cargo-install eva

### Lua Development
#luav moonscript
#luav busted

### StackOverflow from the commandline
#npmv how2

### Video Downloading
#pipv3 youtube-dl

# Dropblame, constructs git history for individual files in dropbox, using
# dropbox's revision history.
#XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
#WORKON_HOME="${WORKON_HOME:-$XDG_DATA_HOME/virtualenvs}"
#pipv dropblame &&
#    mv "$WORKON_HOME/dropblame/bin/drop" "$WORKON_HOME/dropblame/bin/dropb" && \
#    mv "$XDG_DATA_HOME/../bin/drop" "$XDG_DATA_HOME/../bin/dropb"
