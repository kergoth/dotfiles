#!/usr/bin/env python3

import argparse
import functools
import os
import sys
import toml

parser = argparse.ArgumentParser()
parser.add_argument('-f', '--file', help='Input path rather than stdin')
parser.add_argument('keys', metavar='KEY', nargs='*')
args = parser.parse_args()

if not args.file or args.file == '-':
    obj = toml.load(sys.stdin)
else:
    if os.path.exists(args.file):
        with open(args.file, 'r') as f:
            obj = toml.load(f)
    else:
        obj = {}

err = 0
if not args.keys:
    toml.dump(obj, sys.stdout)
else:
    for key in args.keys:
        try:
            value = functools.reduce(lambda x, y: x[y], key.split("."), obj)
        except KeyError:
            sys.stderr.write('Error: unable to find key %s\n' % key)
            err = 1
        else:
            if isinstance(value, str):
                print(value)
            elif hasattr(value, 'items'):
                toml.dump(value, sys.stdout)
            else:
                print(toml._dump_value(value))
sys.exit(err)
