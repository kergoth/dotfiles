#!/bin/sh

pythonuserdir="$(python -c 'import site; print(site.getuserbase())')" || exit 1
PATH="$pythonuserdir/bin:$PATH"

pipv () {
    command pipv "$1" -U "$@"
}

setup_pip () {
    if ! which pip >/dev/null 2>&1; then
        # Install pip (and setuptools if needed)
        curl https://bootstrap.pypa.io/get-pip.py | python - --user
        if ! which pip >/dev/null 2>&1; then
            echo >&2 "Error: after installing pip, we are not able to execute it"
            exit 2
        fi
    fi
    if  ! which virtualenv >/dev/null 2>&1; then
        pip install --user virtualenv
    fi
}

setup_pip

## General Tools & Utilities
brew install the_silver_searcher
brew install gnu-sed
brew install jq
go get -u github.com/monochromegane/the_platinum_searcher/... # or brew install pt
go get -u github.com/junegunn/fzf/... # or brew install fzf
go get -u github.com/edi9999/path-extractor/path-extractor
gemv mdless # Markdown syntax-highlighting pager
go get -u github.com/pranavraja/tldr # or npmv tldr, which is the more mature client
gemv boom

pipv pythonpy
pipv httpie
go get -u github.com/EricChiang/pup # or brew install pup
pip install --user -U hg-git
# Dropblame, constructs git history for individual files in dropbox, using
# dropbox's revision history.
XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
WORKON_HOME="${WORKON_HOME:-$XDG_DATA_HOME/virtualenvs}"
pipv dropblame &&
    mv "$WORKON_HOME/dropblame/bin/drop" "$WORKON_HOME/dropblame/bin/dropb" && \
    mv "$XDG_DATA_HOME/../bin/drop" "$XDG_DATA_HOME/../bin/dropb"

## For dotfiles
pipv3 peru

## Script dependencies
pip install -U --user SOAPpy # lmwsaction
pip install -U --user dropbox # git-remote-dropbox
pip install -U --user titlecase # variety of scripts, and zsh alias
pip install -U --user toml # toml-set/toml-get, used by the game scripts
pip install -U --user sh # various scripts
pip install -U --user hungarian # git-tbdiff
pipv json2yaml # pcposts zsh function

## Pinboard client
npmv pin-cushion

## Development Tools
go get -u github.com/github/hub
# pprintpp + pp-ez?
# twine?
# wheel?
pip install -U --user ptpython
pip install -U --user pathlib2
pip install -U --user click

## Documentation
gemv ronn
npmv doctoc

## Linting / Static Analysis
brew install shellcheck # or cabalv shellcheck or cabal install shellcheck
pipv flake8 flake8 pep8-naming flake8-docstrings
#pipv prospector
#pipv vim-vint
#luav luacheck
#gemv mdl # markdown
# see also markdownlint
# http://lua-users.org/wiki/LuaInspect ?
# https://code.google.com/archive/p/lua-checker/ ?
# go get github.com/BurntSushi/toml/cmd/tomlv # for toml, but it's out of date. it only supports 0.1.0

## Formatters
pipv yapf
# autopep8 - format code per pep8
# https://pypi.python.org/pypi/docformatter - format docstrings per pep257
go get -u github.com/shurcooL/markdownfmt
#npmv pretty-js
#luav formatter

## As Needed

### StackOverflow from the commandline
#npmv how2

#go get -u github.com/jbenet/go-multihash/multihash # If needed to create a hash for use by hashpipe
#go get -u github.com/jbenet/hashpipe
#pipv pockyt # cli for Pocket
#pipv pocket-cli # other cli for Pocket, better interface
#pip install -U --user datefinder # search text for dates, ala path-extractor
#pip install -U --user pipdeptree
#go get -u github.com/pengwynn/flint # check for missing license/etc for a project
# Seemingly no cli install for: terra (terralang.org)
#go get -u github.com/asciinema/asciinema # or brew install asciinema

## Lua Development
# luvi?
#luav moonscript
#luav busted
