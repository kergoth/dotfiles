#!/usr/bin/env python3

import os
import sys

import click


def read_blocks(f):
    block = []
    for line in f:
        line = line.rstrip('\r\n')
        if line:
            block.append(line)
        elif block:
            yield block
            block = []

    if block:
        yield block


@click.command()
@click.option('--compress/--no-compress', '-c', default=False, help='Compress output, do not separate blocks of files')
@click.option('--existing', '-e', is_flag=True, default=False)
@click.option('--keep-path', '-k', multiple=True, help='Path prefix(es) to keep')
def fdupes_select(keep_path, compress, existing):
    first = True
    for block in read_blocks(sys.stdin):
        if existing:
            block = [p for p in block if os.path.exists(p)]
            if not block:
                continue

        if keep_path:
            kept = [p for p in block if any(p.startswith(k + os.sep) for k in keep_path)]
            removed = [p for p in block if p not in kept]
            if kept and removed:
                block = removed
            else:
                continue
        elif len(block) < 2:
            continue

        if block:
            if not compress:
                if not first:
                    print()
                else:
                    first = False

            for p in block:
                print(p)

if __name__ == '__main__':
    fdupes_select()
