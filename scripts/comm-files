#!/bin/sh
#
# Compare the files within two directories, but not the contents of said
# files. Dumps the file lists for each with 'find', sorts, then uses 'comm' to
# compare, with a bit of sed to retain the full paths.

if [ $# -lt 2 ]; then
    echo >&2 "Usage: comm-files DIR1 DIR2 [find arguments..]"
    echo >&2
    echo >72 "find arguments default to: -type f -a -type l"
    exit 1
fi

from="$1"
to="$2"
shift 2

if [ $# -eq 0 ]; then
    set -- -type f -o -type l
fi

fromfiles="$(mktemp ${0##*/}.XXXXXX)"
tofiles="$(mktemp ${0##*/}.XXXXXX)"
trap "rm -f $fromfiles $tofiles" EXIT INT TERM

echo >&2 "Comparing the list of files from $from to $to"

find "$from" "$@" | sed "s#^$from/#PATHPREFIX/#" | sort >"$fromfiles"
find "$to" "$@" | sed "s#^$to/#PATHPREFIX/#" | sort >"$tofiles"
comm -3 "$fromfiles" "$tofiles" | \
    sed "s#	PATHPREFIX/#	$to/#; s#^PATHPREFIX/#$from/#" | \
    ${PAGER:-more}
