#!/bin/sh

usage() {
    cat >&2 <<END
Usage: comm-files [-0123nh] DIR1 DIR2 [find arguments..]

Compare the files within two directories, but not the contents of those files.

Options (default: -3. To specify multiple, use a single argument, e.g. -23):

     -0      Suppress nothing: Show all columns.
     -1      Suppress printing of column 1.
     -2      Suppress printing of column 2.
     -3      Suppress printing of column 3.
     -n      Normalize case
     -h      Show this usage

find arguments default to: -type f -o -type l
END
    exit 1
}

abspath() {
    for arg; do
        testabs=${arg##[!/]*}
        echo ${testabs:-$PWD/$arg}
    done
}

exclude() {
    if [ -n "$exclusion" ]; then
        grep -Ev "^$exclusion"
    else
        cat
    fi
}

comm_arg=-3
normalize_case=
case "$1" in
    -[123]*)
        comm_arg="$1"
        shift
        ;;
    -0)
        comm_arg=
        shift
        ;;
    -n)
        normalize_case=1
        shift
        ;;
    -h)
        usage
        ;;
esac

exclusion=
if echo "$comm_arg" | grep -q 1; then
    exclusion="-"
fi
if echo "$comm_arg" | grep -q 2; then
    exclusion="$exclusion|\+"
fi
if echo "$comm_arg" | grep -q 3; then
    exclusion="$exclusion| "
fi
exclusion="${exclusion#|}"

if [ $# -lt 2 ]; then
    usage
fi

from="$(abspath "$1")"
to="$(abspath "$2")"
shift 2

if [ ! -e "$from" ]; then
    echo >&2 "$from: No such file or directory"
    exit 1
fi

if [ ! -e "$to" ]; then
    echo >&2 "$to: No such file or directory"
    exit 1
fi

if [ $# -eq 0 ]; then
    set -- -type f -o -type l
fi

fromfiles="$(mktemp -t "${0##*/}.XXXXXX")"
tofiles="$(mktemp -t "${0##*/}.XXXXXX")"
trap 'rm -f $fromfiles $tofiles' EXIT INT TERM

case "${OSTYPE:-}" in
    darwin*)
        normalize_case_filter() {
            cat
        }
        comm_i_arg="${normalize_case:+-i}"
        ;;
    *)
        normalize_case_filter() {
            if [ -n "$normalize_case" ]; then
                tr '[:upper:]' '[:lower:]'
            else
                cat
            fi
        }
        comm_i_arg=
        ;;
esac

scriptdir=$(cd "$(dirname "$0")" && pwd)
PATH="$scriptdir:$PATH"

( cd "$from" && find . "$@" ) | normalize_case_filter | sort >"$fromfiles"
( cd "$to" && find . "$@" )  | normalize_case_filter | sort >"$tofiles"
echo >&2 "Comparing the list of files from $from to $to"
comm ${comm_i_arg:+$comm_i_arg} "$fromfiles" "$tofiles" \
    | comm-to-difflike \
    | exclude \
    | ${PAGER:-more}
