#!/usr/bin/env bash
# Install packages into a fresh lua sandbox, then link its binaries/scripts
# into $XDG_DATA_HOME/../bin

set -e

install_sandbox () {
    sandbox_dir="$1"
    if [ ! -e "$sandbox_dir/gist" ]; then
        git clone https://gist.github.com/048450249e3ea288a85d.git "$sandbox_dir/gist"
        chmod +x "$sandbox_dir/gist/install.sh"
    fi
    "$sandbox_dir/gist/install.sh" "$sandbox_dir"
    if [ ! -e "$sandbox_dir/bin/lua" ]; then
        echo >&2 "Error: $sandbox_dir/bin/lua does not exist"
        return 1
    fi
}

install_vert () {
    sandbox="$1"
    vert_dir="$sandbox/src/vert"
    if [ ! -e "$vert_dir" ]; then
        git clone https://github.com/aconbere/vert "$vert_dir"
    fi
    if [ ! -e "$vert_dir/rockspecs/$rockspec" ]; then
        echo >&2 "Unable to find rockspec for vert, falling back to non-git"
        "$sandbox/bin/luarocks" install vert
    else
        cp "$vert_dir/rockspecs/$rockspec" "$vert_dir/rockspecs/vert-0.0.3k-1.rockspec"
        sed -i -e 's/0\.0\.3-2/0.0.3k-1/g; /tag =/d' "$vert_dir/rockspecs/vert-0.0.3k-1.rockspec"
        "$sandbox/bin/luarocks" install "$vert_dir/rockspecs/vert-0.0.3k-1.rockspec"
    fi
}

bootstrap_vert () {
    # Bootstrap vert into a vert env
    vert_env="$1"
    bootstrap_dir="$vert_env/bootstrap"
    if [ ! -e "$bootstrap_dir/bin/lua" ]; then
        install_sandbox "$bootstrap_dir"
    fi
    if [ ! -e "$bootstrap_dir/bin/vert" ]; then
        install_vert "$bootstrap_dir"
        ln -s vert.lua "$bootstrap_dir/bin/vert"
    fi
    if [ ! -e "$vert_env/bin/lua" ]; then
        PATH="$bootstrap_dir/bin:$PATH" vert_init "$vert_env"
    fi
    rm -rf "$bootstrap_dir"

    (
        . "$vert_env/bin/activate"
        install_vert "$vert_env"
    )
}

vert_init () {
    vert init --platform="$platform" "--lua-version=$lua_version" "--luarocks-version=$luarocks_version" "$@"
}

link_env_scripts () {
    mkdir -p "$XDG_DATA_HOME/../bin"
    for script in "$1/bin/"*; do
        filename="${script##*/}"
        case "$filename" in
            activate|lua|luac|luarocks*):
                continue
                ;;
        esac

        # We could symlink, but want to ensure that LUA_PATH & friends are set
        # properly in case the script/binary expects it and isn't self contained.
        link_name="$XDG_DATA_HOME/../bin/$filename"
        printf >&2 '’%s’ -> ’%s’\n' "$link_name" "$script"
        cat >"$link_name" <<END
#!/bin/bash
. "$1/bin/activate"
exec "\$(basename "\$0")" "\$@"
END
        chmod +x "$link_name"
    done

    for man in "$1/man/"man*/*; do
        if [ -e "$man" ]; then
            manbase="${man##*/}"
            case "$manbase" in
                lua.1|luac.1)
                    continue
                    ;;
            esac
            mandest="$XDG_DATA_HOME/${man#$1/}"
            mkdir -p "${mandest%/*}"
            ln -sfv "$man" "$mandest"
        fi
    done
}


XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
VERTS_HOME="${VERTS_HOME:-$XDG_DATA_HOME/luaenvs}"

if [ $# -eq 0 ]; then
    echo >&2 "Usage: ${0##*/} LUAENV_NAME [LUAROCKS_ARGS..]"
    echo >&2
    echo >&2 "Existing lua environments:"
    for dir in "$VERTS_HOME"/*/; do
        if [ -e "$dir" ]; then
            printf >&2 '  %s\n' "$(basename "${dir%/}")"
        fi
    done
    exit 2
fi

lua_version=5.2.3
luarocks_version=2.2.0
rockspec=vert-0.0.3-2.rockspec
case "$(uname -s)" in
Linux)
    platform=linux
    ;;
Darwin)
    platform=macosx
    ;;
esac

luaenv="$1"
shift

# Default to installing a rock of the same name as the env
if [ $# -eq 0 ]; then
    set -- "$luaenv"
fi

luaenv_dir="$VERTS_HOME/$luaenv"
if  [ ! -e "$VERTS_HOME/vert/bin/vert" ]; then
    bootstrap_vert "$VERTS_HOME/vert"
    link_env_scripts "$VERTS_HOME/vert"
fi

(
    . "$VERTS_HOME/vert/bin/activate"
    if [ ! -e "$luaenv_dir/bin/activate" ]; then
        vert_init "$luaenv_dir"
    fi

    . "$luaenv_dir/bin/activate"
    luarocks install "$@"
    link_env_scripts "$luaenv_dir"
)
