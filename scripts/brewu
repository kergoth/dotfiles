#!/bin/sh

prefix=
dry_run=0
head_recipes=0
normal_recipes=1
while getopts nNHap:h opt; do
    case "$opt" in
        n)
            dry_run=1
            ;;
        N)
            head_recipes=0
            normal_recipes=1
            ;;
        H)
            head_recipes=1
            normal_recipes=0
            ;;
        a)
            head_recipes=1
            normal_recipes=1
            ;;
        p)
            prefix=$OPTARG
            ;;
        \?|h)
            echo >&2 "${0##*/} [options] [[recipe]..]"
            echo >&2
            echo >&2 "Update homebrew and upgrade its recipes. Lightweight wrapper"
            echo >&2 "around brew update + brew upgrade, and --reinstall for HEAD."
            echo >&2
            echo >&2 "Optionally specify recipes to update."
            echo >&2
            echo >&2 "Options:"
            echo >&2 "  -p PREFIX  Specify an alternate homebrew install prefix"
            echo >&2
            echo >&2 "  -n  Dry run, show what would be updated"
            echo >&2 "  -N  Upgrade only non-HEAD recipes (default)"
            echo >&2 "  -H  Upgrade only HEAD recipes"
            echo >&2 "  -a  Upgrade all recipes, including HEAD"
            echo >&2 "  -h  Show this usage/help"
            exit 2
            ;;
    esac
done
shift $((OPTIND - 1))

if [ -n "$prefix" ]; then
    alias brew='$prefix/bin/brew'
fi

brew update >/dev/null

if [ $normal_recipes -eq 1 ]; then
    if [ $dry_run -eq 1 ]; then
        brew outdated "$@"
    else
        if [ $# -eq 0 ]; then
            set -- --all
        fi
        brew upgrade "$@"
    fi || exit 3
fi

if [ $head_recipes -eq 1 ]; then
    head_filter () {
        if [ $# -eq 0 ]; then
            grep ' HEAD$'
        else
            grep -E "^$(echo "$@" | tr ' ' '|')$" | grep ' HEAD$'
        fi
    }
    if [ $dry_run -eq 1 ]; then
        brew ls --versions | head_filter "$@"
    else
        brew ls --versions | head_filter "$@" | awk '{print $1}' | xargs "$prefix/bin/brew" reinstall --HEAD
    fi || exit 4
fi
