#!/bin/sh

identify_game_wrapper () {
    game="$1"

    if [ -h "$game" ]; then
        game="$(readlink "$game")"
        if [ -n "${game#/*}" ]; then
            # Relative link
            game="$(dirname "$1")/$game"
        fi
        if [ -n "$game" ] && [ -d "$game" ]; then
            printf "symbolic link to: "
        else
            echo "symbolic link"
            return
        fi
    fi

    case "$game" in
        *.boxer)
            echo "dos (boxer)"
            return
            ;;
        *.nes|*.smc|*.gba)
            echo "openemu"
            return
            ;;
    esac

    if [ -e "$game/Wineskin.app" ]; then
        echo "windows (wineskin)"
    elif [ -e "$game/Contents/MacOS/WineskinLauncher" ]; then
        echo "windows (wineskin)"
    elif [ -e "$game/Contents/MacOS/CustomEXE" ]; then
        echo "windows (wineskin custom exe launcher)"
    elif [ -e "$game/Contents/MacOS/cider" ]; then
        echo "windows (cider)"
    elif [ -e "$game/Contents/MacOS/run.sh" ] && grep -q "steam://" "$game/Contents/MacOS/run.sh"; then
        # MacOS steam "shortcut" - runs `open steam://gameid`
        echo steam
    elif [ -e "$game/Contents/MacOS/Boxer Standalone" ]; then
        echo "dos (boxer standalone)"
    elif [ -e "$game/Contents/MacOS/ecwolf" ]; then
        echo ecwolf
    elif [ -e "$game/Contents/MacOS/Flash Player" ]; then
        echo flash
    elif [ -e "$game/Contents/MacOS/OSXDosboxWrapper" ]; then
        echo "dos (osxdosboxwrapper)"
    elif [ -e "$game/Contents/MacOS/MameWrapper" ]; then
        echo mame
    elif [ -e "$game/Contents/MacOS/SDLMameWrapper" ]; then
        echo mame
    elif [ -e "$game/Contents/MacOS/scummvm" ]; then
        svwenginetype=$(sed -n -e '/SVWEngineType/{n; s#.*<integer>\([0-9]*\)</integer>.*#\1#p; }' "$game/Contents/Info.plist")
        if [ "$svwenginetype" = "1" ]; then
	    echo residualvm
        else
	    echo "scummvm (scummvmwrapper)"
        fi
    elif [ -e "$game/Contents/MacOS/JavaApplicationStub" ]; then
        echo java
    elif [ -e "$game/Contents/MacOS/GemRB Wrapper" ] || [ -e "$game/Contents/MacOS/GemRBWrapper" ]; then
        echo "gemrb"
    elif [ -e "$game/Contents/MacOS/Doomsday" ]; then
        echo "doomsday"
    elif [ -e "$game/Contents/Resources/scummvm" ]; then
        # GoG scummvm wrapper
        echo "scummvm (gog)"
    elif [ -e "$game/__Installer/installerdata.xml" ]; then
        echo "origin"
    elif [ -e "$game/Contents/Resources/snes9x" ]; then
        echo snes9x
    elif [ -e "$game/Contents/Resources/Dolphin.app" ]; then
        echo dolphin
    elif [ -e "$game/Contents/Resources/NeoRaine.app" ]; then
        echo neoraine
    elif [ -e "$game/Contents/Resources/lxdream.app" ]; then
        echo lxdream
    else
        echo unknown
    # else
    #     echo "unknown [Contents: $(echo $(ls -1 2>/dev/null "$game/Contents/MacOS/" | sed "s#^$game/Contents/MacOS/##; s/$/, /") | sed "s/,$//")]"
    fi
}

if [ $# -eq 1 ]; then
    identify_game_wrapper "$1"
else
    for game; do
        printf "%s\t%s\n" "$game" "$(identify_game_wrapper "$game")"
    done
fi
