#!/usr/bin/env bash
# fclones transformation script to handle compressed files

set -euo pipefail

usage() {
    cat <<END >&2
${0##*/} [options..] FILENAME

Options:
  -c EXTRACT_CMD  Specify archive extraction command.
  -h   Show usage
END
    exit 2
}

extract() {
    if [ -f "$1" ]; then
        if [ -n "$cmd" ]; then
            bash -c "$cmd \"$1\""
        else
            case "$1" in
                *.tar.bz2) tar xjf "$1" ;;
                *.tar.gz) tar xzf "$1" ;;
                *.tar.xz) tar xJf "$1" ;;
                *.bz2) bzcat "$1" >"$(basename "${1%.bz2}")" ;;
                *.rar) rar x "$1" ;;
                *.gz) gzcat "$1" >"$(basename "${1%.gz}")" ;;
                *.tar) tar xf "$1" ;;
                *.tbz2) tar xjf "$1" ;;
                *.tgz) tar xzf "$1" ;;
                *.zip) unzip "$1" ;;
                *.Z) zcat "$1" >"$(basename "${1%.Z}")" ;;
                *.7z) 7z x "$1" ;;
                *) return 1 ;;
            esac
        fi
    else
        return 1
    fi
}

cmd=
while getopts c:h opt; do
    case "$opt" in
        c)
            cmd="$OPTARG"
            ;;
        \? | h)
            usage
            ;;
    esac
done
shift $((OPTIND - 1))

if [ $# -ne 1 ]; then
    usage
fi
filename="$(abspath "$1")"

tempdir="$(mktemp -d -t "${0##*/}.XXXXXX")"
trap 'rm -rf "$tempdir"' EXIT INT TERM
cd "$tempdir"

# shellcheck disable=SC2046
if extract "$filename" >/dev/null 2>&1 && [ $(find . -type f | wc -l) -eq 1 ]; then
    cat "$(find . -type f)"
else
    cat "$filename"
fi
