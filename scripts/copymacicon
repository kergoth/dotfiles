#!/bin/sh

if [ $# -ne 2 ]; then
    echo >&2 "Usage: ${0##*/} FROMPATH TOPATH"
    exit 2
fi

extractpathicon () {
    if [ -d "$1" ]; then
        if [ -e "$1"/$'Icon\r' ]; then
            # Decompile the resource fork of the folder into $2
            DeRez -only icns "$1"/$'Icon\r' >"$2"
        elif [ -e "$1/Contents/Info.plist" ]; then
            iconfile="$1/Contents/Resources/$(/usr/libexec/PlistBuddy -c 'Print :CFBundleIconFile' "$1/Contents/Info.plist")"
            if [ -z "$iconfile" ]; then
                return 1
            fi
            iconfile="${iconfile%.icns}.icns"

            if [ -e "$iconfile" ]; then
                cp -f "$iconfile" "$2"
                # Ensure the icon file uses itself as its icon (stores
                # resource fork)
                sips -i "$iconfile" >/dev/null
            else
                return 2
            fi
        else
            return 3
        fi
    else
        # Decompile the resource fork into $2
        DeRez -only icns "$1" >"$2"
    fi
}

copyicon () {
    from="$1"
    to="$2"

    extractpathicon "$from" "$to/wrapicon"

    if [ $? -ne 0 ]; then
        rm -f "$to/wrapicon"
        return 1
    fi

    # App bundle with an existing icon file, overwrite it
    if [ -e "$to/Contents/Info.plist" ]; then
        toiconfile="$(/usr/libexec/PlistBuddy -c 'Print :CFBundleIconFile' "$to/Contents/Info.plist" 2>/dev/null)"
        if [ -n "$toiconfile" ]; then
            mv "$to/wrapicon" "$to/Contents/Resources/$toiconfile"
            sips -i "$to/Contents/Resources/$toiconfile" >/dev/null
            return 0
        fi
    fi

    # Otherwise, use a custom icon
    Rez -append "$to/wrapicon" -o "$to"/$'Icon\r'
    rm -f "$to/wrapicon"
    SetFile -a C "$to"
    SetFile -a V "$to"/$'Icon\r'
}

from="$1"
to="$2"

copyicon "$from" "$to"
