#!/bin/sh

die () {
    ret=$?
    echo >&2 "$@"
    exit $ret
}

# This ensures that hg doesn't explode if the hgrc referencing external
# modules is still symlinked, but the modules themselves are missing due to
# e.g. a `peru clean`.
export HGRCPATH=

dotfilesdir="$(cd "$(dirname "$0")/.." && pwd)"
cd "$dotfilesdir"

tmpdir="$(cd "$(mktemp -dt "${0##*/}.XXXXXX")" && pwd)"
trap 'rm -rf "$tmpdir"' EXIT INT TERM

if ! which peru >/dev/null 2>&1; then
    "$dotfilesdir/scripts/pipv3" peru peru || die "peru build failed"
fi
PATH="$PATH:${XDG_DATA_HOME:-~/.local/share}/../bin"

peru reup || die "peru reup failed"
peru sync -f || die "peru sync failed"

cd "$tmpdir"
git clone https://github.com/petdance/ack2 && \
    cd ack2 && \
    cpanm --local-lib "$PWD/perl5" local::lib && \
    eval "$(perl -I "$PWD/perl5/lib/perl5" -Mlocal::lib)" && \
    cpanm File::Next && \
    perl Makefile.PL && \
    make ack-standalone && \
    cp -f ack-standalone "$dotfilesdir/scripts/ack"

cd "$tmpdir"
git clone https://github.com/defunkt/gist && \
    cd gist && \
    rake standalone && \
    cp -f build/gist "$dotfilesdir/scripts/gist"
