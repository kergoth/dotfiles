#!/bin/sh

_failed=
_install() {
    lang="$1"
    shift
    echo >&2 "Installing $lang.."
    if ! command "$@" | sh -c "cat ${tolog:+>"$log" 2>&1}"; then
        echo >&2 "Error: $lang installation failed:"
        ${tolog:+tail "$log"}
        _failed="${_failed:+$_failed }$lang"
        return 1
    fi
}

quiet() {
    cat >/dev/null 2>&1
}

log="$(mktemp -t "${0##*/}.XXXXXX")" || exit $?
trap 'rm -f "$log"' EXIT INT TERM

usage() {
    cat >&2 <<END
    ${0##*/} [options] [-v]

    Options:
    -v  Verbose
END
    exit 2
}

tolog=1
while getopts vh opt; do
    case "$opt" in
    v)
        tolog=
        ;;
    \? | h)
        usage
        ;;
    esac
done
shift $((OPTIND - 1))

echo >&2 "Installing prerequisites"
# Install needed deps
if [ -z "$NO_SUDO" ] && command -v pacman >/dev/null 2>&1; then
    sudo pacman -S --noconfirm --needed openssl bzip2 sqlite ncurses unzip expat lz4
elif [ -z "$NO_SUDO" ] && command -v apt-get >/dev/null 2>&1; then
    sudo apt-get -y install --no-upgrade libssl-dev libbz2-dev libsqlite3-dev libncurses5-dev unzip zlib1g-dev libreadline-dev libexpat1-dev liblz4-dev libffi-dev
    if command -v brew >/dev/null 2>&1; then
        brew unlink pkg-config >/dev/null 2>&1 || :
    fi
elif command -v brew >/dev/null 2>&1; then
    brew install openssl bzip2 sqlite ncurses readline unzip expat xz zlib lz4 libffi
fi | sh -c "cat ${tolog:+>"$log" 2>&1}"

# shellcheck disable=SC2181
if [ $? -ne 0 ]; then
    echo >&2 "Error: prerequisites installation failed:"
    ${tolog:+tail "$log"}
    exit 1
fi

mkdir -p "${XDG_DATA_HOME:-$HOME/.local/share}/../bin"

# shellcheck source=./install-asdf
. "$(dirname "$0")/install-asdf" || exit 1

_install golang asdf-install -g golang
_install rust asdf-install -g rust stable
_install rust rustup update

export PIP_REQUIRE_VIRTUALENV=
_install python asdf-install -g python
python3 -m pip install --user --disable-pip-version-check pipx
python3 -m pipx ensurepath

# TODO: remove the packages we installed, but not the ones the user did
if [ -n "$(echo "$_failed" | xargs)" ]; then
    echo "Language installations failed: $_failed"
    exit 1
fi
