#!/bin/sh
# Convert a portable wine tarball to a wineskin engine format file

set -e

tempdir="$(cd "$(mktemp -d portable_wine2t7z.XXXXXX)" && pwd -P)"
trap 'rm -rf "$tempdir"' EXIT INT TERM

# portable-winehq-devel-2.10-osx64.tar
# portable-winehq-staging-2.10-3-osx64.tar
# portable-winehq-stable-2.0.1-osx64.tar

for portable_wine; do
    abs_wine="$(abspath "$portable_wine")"
    base="${abs_wine%.tar.gz}"
    base="$(basename "$base")"
    base="${base#portable-winehq-}"
    case "$base" in
        *-osx64)
            base="${base%-osx64}"
            name="U64Wine"
            ;;
        *-osx)
            base="${base%-osx}"
            name="UWine"
            ;;
    esac

    case "$base" in
        devel-*)
            version="${base#devel-}"
            version="$name$version"
            ;;
        staging-*)
            version="${base#staging-}"
            version="${name}Staging$version"
            ;;
        stable-*)
            version="${base#stable-}"
            version="$name$version"
            ;;
        *)
            echo >&2 "Unhandled filename: $portable_wine"
            exit 1
            ;;
    esac

    dest="$HOME/Library/Application Support/Wineskin/Engines/$version.tar.7z"
    if [ -e "$dest" ]; then
        echo >&2 "$dest already exists, skipping"
        continue
    fi

    if [ ! -e "$portable_wine" ]; then
        base="$(basename "$portable_wine")"
        echo >&2 "Downloading $portable_wine"
        http -FIbd --check-status -o "$tempdir/$base" "$portable_wine"
        portable_wine="$base"
    fi

    (
        cd "$tempdir"
        tar -jxf "$portable_wine"
        echo "$version" >usr/version
        mv usr wswine.bundle
        tar cf - wswine.bundle | 7za a -si "$version.tar.7z"
        mv -vi "$version.tar.7z" "$dest" || true
    )
done
