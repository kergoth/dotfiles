#!/usr/bin/env python

import argparse
import itertools
import subprocess
import sys
import toml


def pairs(iterable):
    a, b = itertools.tee(iterable)
    a = itertools.islice(a, 0, None, 2)
    b = itertools.islice(b, 1, None, 2)
    return itertools.izip(a, b)


parser = argparse.ArgumentParser()
parser.add_argument('-f', '--file', help='Input path rather than stdin')
parser.add_argument('-o', '--output', help='Output path. If --file is specified, defaults to that, otherwise stdout')
parser.add_argument('-n', '--new', help='Create a new file from the arguments, do not read input', action='store_true')
parser.add_argument('values', metavar='VALUE', nargs='+')

args = parser.parse_args()

if len(args.values) % 2 != 0:
    sys.exit("Error: odd number of arguments. Arguments must be in key/value pairs")

cmd = ["toml-set"]
if args.new:
    cmd.append('-n')

if args.file:
    cmd.append('-f')
    cmd.append(args.file)

if args.output:
    cmd.append('-o')
    cmd.append(args.output)

try:
    subprocess.check_call(cmd + list(itertools.chain.from_iterable((k, toml._dump_value(v)) for k, v in pairs(args.values))))
except subprocess.CalledProcessError:
    sys.exit(1)
