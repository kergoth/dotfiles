#!/usr/bin/env bash

export RESTIC_REPOSITORY='rclone:ludusavi-1728618970:/Archives/Backups/Saved Games'

set -euo pipefail

usage() {
    echo >&2 "${0##*/} [-g GAME] [-- RESTIC_ARGS..]"
    exit 2
}

list_games() {
    ludusavi backup --api --preview | jq -r '.games | keys[]'
}

snapshot_data() {
    restic snapshots --compact --json ${1:+--tag "$1"} |
        jq -r '
            .[-1]
            | [
                .short_id,
                (
                .time
                | sub("\\.[0-9]+";"")
                | sub("(?<a>[+-][0-9]{2}):(?<b>[0-9]{2})$"; "\(.a)\(.b)")
                | strptime("%Y-%m-%dT%H:%M:%S%z")
                | strftime("%B %d, %Y %I:%M %p")
                )
            ]
            | join("\t")
        '
}

restore() {
    local ret=0
    if ! data=$(snapshot_data "$1" 2>/dev/null); then
        ret=$?
        echo >&2 "No backups found for $1"
        return "$ret"
    fi
    snapshot=$(echo "$data" | cut -d$'\t' -f1)
    date=$(echo "$data" | cut -d$'\t' -f2)
    if [ $dry_run -eq 1 ]; then
        echo >&2 "Would restore backup $snapshot ($date) for $1"
    else
        echo >&2 "Restoring backup $snapshot ($date) for $1"
        restic restore --verbose --target / "$snapshot"
    fi
}

game=
dry_run=0
while getopts g:nh opt; do
    case "$opt" in
        g)
            game="$OPTARG"
            ;;
        n)
            dry_run=1
            ;;
        \? | h)
            usage
            ;;
    esac
done
shift $((OPTIND - 1))
if [ $# -gt 1 ]; then
    usage
elif [ $# -eq 1 ]; then
    game="$1"
fi

tmpfile=$(mktemp -t "${0##*/}.XXXXXX")
trap 'rm -f "$tmpfile"' EXIT INT TERM

if [ -n "$game" ]; then
    restore "$game"
else
    list_games >"$tmpfile"
    ret=0
    while read -r game; do
        restore "$game" || ret=$?
        if [ $ret -eq 130 ]; then
            break
        fi
    done <"$tmpfile"
    if [ $ret -eq 130 ]; then
        kill -INT $$
    fi
    exit $ret
fi
