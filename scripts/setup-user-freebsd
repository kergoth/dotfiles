#!/bin/sh

set -e

scriptdir=$(cd "$(dirname "$0")" && pwd -P)
repodir=$(dirname "$scriptdir")
PATH="$scriptdir/freebsd:$scriptdir:$PATH"

# shellcheck source=./common.sh
. "$scriptdir/common.sh" || exit 1

pipx_check() {
    pkg="$1"
    cmd="${2:-}"

    if [ -n "$cmd" ] && command -v "$cmd" >/dev/null 2>&1; then
        return 0
    fi
    pipxs="$pipxs $pkg"
}

cargo_check() {
    pkg="$1"
    cmd="${2:-}"

    if [ -n "$cmd" ] && command -v "$cmd" >/dev/null 2>&1; then
        return 0
    fi
    cargos="$cargos $pkg"
}

go_check() {
    pkg="$1"
    cmd="${2:-}"

    if [ -n "$cmd" ] && command -v "$cmd" >/dev/null 2>&1; then
        return 0
    fi
    gos="$gos $pkg"
}

pipxs=
cargos=
gos=

if ! command -v pipx >/dev/null 2>&1; then
    python3 -m pip install --user --disable-pip-version-check pipx
fi

pipx_check git-revise git-revise
pipx_check git-imerge git-imerge
pipx_check peru peru
cargo_check choose choose
cargo_check git-branchless git-branchless

# Bug tracking and workflow
go_check github.com/ankitpokhrel/jira-cli/...@latest jira

# As we don't support nix, install asdf for local environments
if ! command -v asdf >/dev/null 2>&1; then
    install-asdf
fi

# Installation
if [ -n "$(echo "$pipxs" | sed -e 's/^ *//; s/ *$//')" ]; then
    msg "Installing via pipx: $pipxs"
    echo "$pipxs" | tr ' ' '\n' | sort -u | tr '\n' '\0' | xargs -0 --no-run-if-empty -o -n 1 pipx install
fi

if [ -n "$(echo "$cargos" | sed -e 's/^ *//; s/ *$//')" ]; then
    echo "$cargos" | tr ' ' '\n' | sort -u | tr '\n' '\0' | xargs -0 --no-run-if-empty -o cargo install --locked
fi

if [ -n "$(echo "$gos" | sed -e 's/^ *//; s/ *$//')" ]; then
    echo "$gos" | tr ' ' '\n' | sort -u | tr '\n' '\0' | xargs -0 --no-run-if-empty -o go install
fi

# Dotfiles
msg "Initializing and applying dotfiles"
chezmoi init "--source=$repodir" kergoth/dotfiles-chezmoi
chmod 0600 "$HOME/.config/chezmoi/chezmoi.toml"
chezmoi apply

# User shell
if [ -e /usr/local/bin/zsh ]; then
    current_shell="$(getent passwd "$USER" | sed -e 's#.*:##')"
    if [ "$current_shell" != /usr/local/bin/zsh ]; then
        msg "Changing current user shell to zsh"
        chsh -s /usr/local/bin/zsh
    fi
fi
